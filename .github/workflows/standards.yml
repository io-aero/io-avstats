name: Standards

on:
  pull_request:
    branches: [ 'main' ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  standards:
    # --------------------------------------------------------------------------
    # Perform all development-specific tools, including formatting, static code
    # analysis, style enforcement and documentation creation. Changes in the code
    # or in the documentation are also replicated in the repository.
    # --------------------------------------------------------------------------
    name: OS ${{ matrix.os }} - Python ${{ matrix.python-version }} - Development Standards
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        os: ["ubuntu-22.04"]
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1  # no history, just HEAD
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Step - Necessary system software
        run: |
            sudo apt-get update -y
            sudo apt-get install -y curl \
                                    dos2unix \
                                    lsb-core \
                                    software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" --yes
            sudo apt-key fingerprint 0EBFCD88
            sudo apt-get install -y docker-ce \
                                    docker-ce-cli \
                                    containerd.io 
            sudo chmod 666 /var/run/docker.sock
            if ! [ $(getent group docker | grep -q "\b$USER\b") ]; then
                sudo usermod -aG docker $USER
            fi
      - name: Install dev dependencies
        run: make pipenv-dev
      - name: Run the whole software quality chain
        run: make isort black               lint docs
      - name: Commit documentation and sourcecode # transfer the new html files back into the repository
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git add .
          git commit -a -m "Updating the repository GitHub html pages in the docs folder"
      - name: Push changes  # push the output folder to your repo
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true