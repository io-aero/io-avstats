{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Aviation Accident Statistics This repository is used for the development and maintenance of applications based on the data of the IO-AVSTATS database. Currently, it includes the following applications: faaus2008 - Fatal Aircraft Accidents in the US since 2008 pdus2008 - Profiling Data for the US since 2008 These applications and the database are available in the cloud via AWS. In addition, the maintenance of the database content is also done in this repository. The related database software is maintained in the repository io-avstats-db .","title":"Home"},{"location":"index.html#aviation-accident-statistics","text":"This repository is used for the development and maintenance of applications based on the data of the IO-AVSTATS database. Currently, it includes the following applications: faaus2008 - Fatal Aircraft Accidents in the US since 2008 pdus2008 - Profiling Data for the US since 2008 These applications and the database are available in the cloud via AWS. In addition, the maintenance of the database content is also done in this repository. The related database software is maintained in the repository io-avstats-db .","title":"Aviation Accident Statistics"},{"location":"LICENSE.html","text":"End-User License Agreement (EULA) of IO-Aero Software This End-User License Agreement (\" EULA \") is a legal agreement between you and IO-Aero . This EULA agreement governs your acquisition and use of our IO-Aero Software (\"Software\") directly from IO-Aero or indirectly through a IO-Aero authorized reseller or distributor (a \"Reseller\"). Please read this EULA agreement carefully before completing the installation process and using the IO-Aero Software . It provides a license to use the IO-Aero Software and contains warranty information and liability disclaimers. If you register for a free trial of the IO-Aero Software , this EULA agreement will also govern that trial. By clicking \"accept\" or installing and/or using the IO-Aero Software , you are confirming your acceptance of the Software and agreeing to become bound by the terms of this EULA agreement. If you are entering into this EULA agreement on behalf of a company or other legal entity, you represent that you have the authority to bind such entity and its affiliates to these terms and conditions. If you do not have such authority or if you do not agree with the terms and conditions of this EULA agreement, do not install or use the Software, and you must not accept this EULA agreement. This EULA agreement shall apply only to the Software supplied by IO-Aero herewith regardless of whether other software is referred to or described herein. The terms also apply to any IO-Aero updates, supplements, Internet-based services, and support services for the Software, unless other terms accompany those items on delivery. If so, those terms apply. License Grant IO-Aero hereby grants you a personal, non-transferable, non-exclusive licence to use the IO-Aero Software on your devices in accordance with the terms of this EULA agreement. You are permitted to load the IO-Aero Software (for example a PC, laptop, mobile or tablet) under your control. You are responsible for ensuring your device meets the minimum requirements of the IO-Aero Software . You are not permitted to: Edit, alter, modify, adapt, translate or otherwise change the whole or any part of the Software nor permit the whole or any part of the Software to be combined with or become incorporated in any other software, nor decompile, disassemble or reverse engineer the Software or attempt to do any such things Reproduce, copy, distribute, resell or otherwise use the Software for any commercial purpose Allow any third party to use the Software on behalf of or for the benefit of any third party Use the Software in any way which breaches any applicable local, national or international law use the Software for any purpose that IO-Aero considers is a breach of this EULA agreement Intellectual Property and Ownership IO-Aero shall at all times retain ownership of the Software as originally downloaded by you and all subsequent downloads of the Software by you. The Software (and the copyright, and other intellectual property rights of whatever nature in the Software, including any modifications made thereto) are and shall remain the property of IO-Aero . IO-Aero reserves the right to grant licences to use the Software to third parties. Termination This EULA agreement is effective from the date you first use the Software and shall continue until terminated. You may terminate it at any time upon written notice to IO-Aero . It will also terminate immediately if you fail to comply with any term of this EULA agreement. Upon such termination, the licenses granted by this EULA agreement will immediately terminate, and you agree to stop all access and use of the Software. The provisions that by their nature continue and survive will survive any termination of this EULA agreement. Governing Law This EULA agreement, and any dispute arising out of or in connection with this EULA agreement, shall be governed by and construed in accordance with the laws of the United States.","title":"License"},{"location":"LICENSE.html#end-user-license-agreement-eula-of-io-aero-software","text":"This End-User License Agreement (\" EULA \") is a legal agreement between you and IO-Aero . This EULA agreement governs your acquisition and use of our IO-Aero Software (\"Software\") directly from IO-Aero or indirectly through a IO-Aero authorized reseller or distributor (a \"Reseller\"). Please read this EULA agreement carefully before completing the installation process and using the IO-Aero Software . It provides a license to use the IO-Aero Software and contains warranty information and liability disclaimers. If you register for a free trial of the IO-Aero Software , this EULA agreement will also govern that trial. By clicking \"accept\" or installing and/or using the IO-Aero Software , you are confirming your acceptance of the Software and agreeing to become bound by the terms of this EULA agreement. If you are entering into this EULA agreement on behalf of a company or other legal entity, you represent that you have the authority to bind such entity and its affiliates to these terms and conditions. If you do not have such authority or if you do not agree with the terms and conditions of this EULA agreement, do not install or use the Software, and you must not accept this EULA agreement. This EULA agreement shall apply only to the Software supplied by IO-Aero herewith regardless of whether other software is referred to or described herein. The terms also apply to any IO-Aero updates, supplements, Internet-based services, and support services for the Software, unless other terms accompany those items on delivery. If so, those terms apply.","title":"End-User License Agreement (EULA) of IO-Aero Software"},{"location":"config_io_avstats.html","text":"Configuration - IO-AVSTATS For the administration of the configuration parameters of IO-AVSTATS the tool dynaconf is used. The two files settings.io_avstats.toml and .settings.io_avstats.toml are available as configuration files. The .settings.io_avstats.toml file contains the security related parameters such as passwords and is not made available in the GitHub repository. The names of IO-AVSTATS related environment variables must include the prefix IO_AVSTATS . Layered environments are supported. The test layer is used for the automated tests. 1. Available Parameters Parameter Default value Description correction_work_dir data/correction file directory containing the files with the manual corrections database_commit_size 5000 number of rows processed before a progress message is created download_chunk_size 524288 chunk size for download from the NTSB website download_file_countries_states_json data/Countries_States/countries_states.json name of the file containing data of countries and states download_file_simplemaps_us_cities_xlsx uscities.xlsx simplemaps: name of the zipped US city file download_file_simplemaps_us_cities_zip simplemaps_uscities_basicv1.75.zip simplemaps: name of the unzipped US city file download_file_simplemaps_us_zips_xlsx uszips.xlsx simplemaps: name of the zipped US zip code file download_file_simplemaps_us_zips_zip simplemaps_uszips_basicv1.81.zip simplemaps: name of the unzipped US zip code file download_file_zip_codes_org_xls zip_code_database.xls ZIP Code Database: name of the unzipped US zip code file download_timeout 10 seconds to wait for the server to send data download_url_ntsb_prefix https://data.ntsb.gov/... prefix of the download link for the NTSB data sets download_url_simplemaps_us_cities https://simplemaps.com/... prefix of the download link for the simplemaps US cities data sets download_url_simplemaps_us_zips https://simplemaps.com/... prefix of the download link for the simplemaps US zip code data sets download_url_zip_codes_org https://www.unitedstateszipcodes.org/... prefix of the download link for the ZIP Code Database data set download_work_dir data/download working directory for the processing of NTSB data sets is_verbose true display progress messages for processing max_deviation_latitude 0.01 maximum decimal deviation of the latitude in the database table even max_deviation_longitude 0.01 maximum decimal deviation of the longitude in the database table even odbc_connection_string Driver={MS Access Driver ... connection string for the MS Access ODBC driver pandas_profile_dir a/pandas_profiles directory to store the Pandas profiling results postgres_connection_port 5432 database port number postgres_container_name io_avstats_container container name postgres_container_port 5432 container port number postgres_database_schema public database schema name postgres_dbname io_avstats_db database name postgres_dbname_admin postgres administration database name postgres_host db database server hostname postgres_password postgresql database password postgres_password_admin postgresql administration database password postgres_pgdata data/postgres file directory on the host for the database files postgres_user io_aero database username postgres_user_admin postgres administration database username postgres_version latest requested PostgreSQL version from DockerHub razorsql_jar_file_windows C:\\Program Files\\RazorSQL\\razorsql.jar name of the jar file (Windows version) razorsql_java_path_windows C:\\Program Files\\RazorSQL\\jre11\\bin\\java name of the Java file (Windows version) razorsql_profile IO-AVSTATS name of the RazorSQL connection profile razorsql_reference_dir data/RazorSQL file directory of the database schema reference file razorsql_reference_file 2022.11.01_avall.sql file name of the database schema reference file streamlit_server_port 8501 Streamlit port number streamlit_server_port_faaus2008 8501 Streamlit port number for application faaus2008 streamlit_server_port_pdus2008 8502 Streamlit port number for application pdus2008 2. Notes The configuration parameters postgres_password and postgres_password_admin can be found in the configuration file .settings.io_avstats.toml . The configuration parameters in the configuration files can be overridden with corresponding environment variables, e.g. the environment variable IO_AVSTATS_IS_VERBOSE overrides the configuration parameter is_verbose .","title":"IO-AVSTATS"},{"location":"config_io_avstats.html#configuration-io-avstats","text":"For the administration of the configuration parameters of IO-AVSTATS the tool dynaconf is used. The two files settings.io_avstats.toml and .settings.io_avstats.toml are available as configuration files. The .settings.io_avstats.toml file contains the security related parameters such as passwords and is not made available in the GitHub repository. The names of IO-AVSTATS related environment variables must include the prefix IO_AVSTATS . Layered environments are supported. The test layer is used for the automated tests.","title":"Configuration - IO-AVSTATS"},{"location":"config_io_avstats.html#1-available-parameters","text":"Parameter Default value Description correction_work_dir data/correction file directory containing the files with the manual corrections database_commit_size 5000 number of rows processed before a progress message is created download_chunk_size 524288 chunk size for download from the NTSB website download_file_countries_states_json data/Countries_States/countries_states.json name of the file containing data of countries and states download_file_simplemaps_us_cities_xlsx uscities.xlsx simplemaps: name of the zipped US city file download_file_simplemaps_us_cities_zip simplemaps_uscities_basicv1.75.zip simplemaps: name of the unzipped US city file download_file_simplemaps_us_zips_xlsx uszips.xlsx simplemaps: name of the zipped US zip code file download_file_simplemaps_us_zips_zip simplemaps_uszips_basicv1.81.zip simplemaps: name of the unzipped US zip code file download_file_zip_codes_org_xls zip_code_database.xls ZIP Code Database: name of the unzipped US zip code file download_timeout 10 seconds to wait for the server to send data download_url_ntsb_prefix https://data.ntsb.gov/... prefix of the download link for the NTSB data sets download_url_simplemaps_us_cities https://simplemaps.com/... prefix of the download link for the simplemaps US cities data sets download_url_simplemaps_us_zips https://simplemaps.com/... prefix of the download link for the simplemaps US zip code data sets download_url_zip_codes_org https://www.unitedstateszipcodes.org/... prefix of the download link for the ZIP Code Database data set download_work_dir data/download working directory for the processing of NTSB data sets is_verbose true display progress messages for processing max_deviation_latitude 0.01 maximum decimal deviation of the latitude in the database table even max_deviation_longitude 0.01 maximum decimal deviation of the longitude in the database table even odbc_connection_string Driver={MS Access Driver ... connection string for the MS Access ODBC driver pandas_profile_dir a/pandas_profiles directory to store the Pandas profiling results postgres_connection_port 5432 database port number postgres_container_name io_avstats_container container name postgres_container_port 5432 container port number postgres_database_schema public database schema name postgres_dbname io_avstats_db database name postgres_dbname_admin postgres administration database name postgres_host db database server hostname postgres_password postgresql database password postgres_password_admin postgresql administration database password postgres_pgdata data/postgres file directory on the host for the database files postgres_user io_aero database username postgres_user_admin postgres administration database username postgres_version latest requested PostgreSQL version from DockerHub razorsql_jar_file_windows C:\\Program Files\\RazorSQL\\razorsql.jar name of the jar file (Windows version) razorsql_java_path_windows C:\\Program Files\\RazorSQL\\jre11\\bin\\java name of the Java file (Windows version) razorsql_profile IO-AVSTATS name of the RazorSQL connection profile razorsql_reference_dir data/RazorSQL file directory of the database schema reference file razorsql_reference_file 2022.11.01_avall.sql file name of the database schema reference file streamlit_server_port 8501 Streamlit port number streamlit_server_port_faaus2008 8501 Streamlit port number for application faaus2008 streamlit_server_port_pdus2008 8502 Streamlit port number for application pdus2008","title":"1. Available Parameters"},{"location":"config_io_avstats.html#2-notes","text":"The configuration parameters postgres_password and postgres_password_admin can be found in the configuration file .settings.io_avstats.toml . The configuration parameters in the configuration files can be overridden with corresponding environment variables, e.g. the environment variable IO_AVSTATS_IS_VERBOSE overrides the configuration parameter is_verbose .","title":"2. Notes"},{"location":"config_logging.html","text":"Configuration - Logging In IO-AVSTATS the Python standard module for logging is used - details can be found here . The file logging_cfg.yaml controls the logging behaviour of the application. Default content: version: 1 formatters: simple: format: \"%(asctime)s [%(module)s.py ] %(levelname)-5s %(funcName)s:%(lineno)d %(message)s\" extended: format: \"%(asctime)s [%(module)s.py ] %(levelname)-5s %(funcName)s:%(lineno)d \\n%(message)s\" handlers: console: class: logging.StreamHandler level: INFO formatter: simple file_handler: class: logging.FileHandler level: INFO filename: logging_io-avstats.log formatter: extended loggers: io-avstats: handlers: [ console ] root: handlers: [ file_handler ]","title":"Logging"},{"location":"config_logging.html#configuration-logging","text":"In IO-AVSTATS the Python standard module for logging is used - details can be found here . The file logging_cfg.yaml controls the logging behaviour of the application.","title":"Configuration - Logging"},{"location":"config_logging.html#default-content","text":"version: 1 formatters: simple: format: \"%(asctime)s [%(module)s.py ] %(levelname)-5s %(funcName)s:%(lineno)d %(message)s\" extended: format: \"%(asctime)s [%(module)s.py ] %(levelname)-5s %(funcName)s:%(lineno)d \\n%(message)s\" handlers: console: class: logging.StreamHandler level: INFO formatter: simple file_handler: class: logging.FileHandler level: INFO filename: logging_io-avstats.log formatter: extended loggers: io-avstats: handlers: [ console ] root: handlers: [ file_handler ]","title":"Default content:"},{"location":"how_to_add_ntsb_accident_files.html","text":"How to add NTSB accident files Aviation accident data provided by NTSB can be found at the following website under Downloadable data sets : In the database table io_processed_files you can find the previously processed files: Any file can be processed several times with the process described in the following, as long as one processes also afterwards all newer files again. All necessary processing steps can be executed with the run_io_avstats script. The script is available in a version for Windows 10 and 11 cmd and for Ubuntu 22.04 bash shell. 1. Quick reference No. Task Description 1 d_n_a Download a NTSB MS Access database file 2 l_n_a Load NTSB MS Access database data into PostgreSQL 3 d_s_f Download basic simplemaps files 4 l_s_d Optional : Load simplemaps data into PostgreSQL 5 Download the ZIP Code Database file 6 l_z_d Optional : Load ZIP Code Database data into PostgreSQL 7 l_c_d Optional : Load data from a correction file into PostgreSQL 8 c_l_l Correct decimal US latitudes and longitudes 9 v_n_d Verify selected NTSB data 10 r_d_s Refresh the PostgreSQL database schema 11 Backup the file directory data/postgres 12 Update the Google Drive 13 Update IO-AVSTATS in the IO-Aero cloud 2. Detailed description 2.1 d_n_a - Download a NTSB MS Access database file Relevant cofiguration parameters : download_chunk_size = 524288 download_timeout = 10 download_url_ntsb_prefix = \"https://data.ntsb.gov/avdata/FileDirectory/DownloadFile?fileID=C%3A%5Cavdata%5C\" download_work_dir = \"data/download\" Example protocol : ...\\io-avstats>run_io_avstats ========================================================= r_s_a - Run a Streamlit application --------------------------------------------------------- d_n_a - Download a NTSB MS Access database file l_n_a - Load NTSB MS Access database data into PostgreSQL c_l_l - Correct decimal US latitudes and longitudes v_n_d - Verify selected NTSB data r_d_s - Refresh the PostgreSQL database schema --------------------------------------------------------- c_p_d - Cleansing PostgreSQL data d_s_f - Download basic simplemaps files l_c_d - Load data from a correction file into PostgreSQL l_c_s - Load country and state data into PostgreSQL l_s_d - Load simplemaps data into PostgreSQL l_z_d - Load ZIP Code Database data into PostgreSQL --------------------------------------------------------- c_d_s - Create the PostgreSQL database schema d_d_f - Delete the PostgreSQL database files d_d_s - Drop the PostgreSQL database schema s_d_c - Set up the PostgreSQL database container u_d_s - Update the PostgreSQL database schema --------------------------------------------------------- version - Show the IO-AVSTATS-DB version --------------------------------------------------------- Enter the desired task [default: r_s_a] d_n_a ========================================================= avall - Data from January 1, 2008 to today Pre2008 - Data from January 1, 1982 to December 31, 2007 upDDMON - New additions and updates until DD day in the month MON --------------------------------------------------------- Enter the stem name of the desired MS Access database file up15DEC Script run_io_avstats is now running ======================================================================= Start run_io_avstats ----------------------------------------------------------------------- IO-AVSTATS - Aviation Accident Statistics. ----------------------------------------------------------------------- PYTHONPATH : ----------------------------------------------------------------------- TASK : d_n_a CORRECTION : MSACCESS : up15DEC ----------------------------------------------------------------------- The current time is: 13:07:00.80 Enter the new time: ======================================================================= Progress update 2022-12-17 13:07:04.105948 : ===============================================================================. Progress update 2022-12-17 13:07:04.105948 : INFO.00.004 Start Launcher. Progress update 2022-12-17 13:07:04.111448 : INFO.00.001 The logger is configured and ready. Progress update 2022-12-17 13:07:04.120447 : INFO.00.008 Arguments task='d_n_a' msaccess='up15DEC'. Progress update 2022-12-17 13:07:04.120447 : -------------------------------------------------------------------------------. Progress update 2022-12-17 13:07:04.120447 : INFO.00.047 Downloading NTSB MS Access database file 'up15DEC'. Progress update 2022-12-17 13:07:04.120447 : -------------------------------------------------------------------------------- Progress update 2022-12-17 13:07:06.491427 : INFO.00.013 The connection to the MS Access database file 'up15DEC.zip' on the NTSB download page was successfully established. Progress update 2022-12-17 13:07:07.115755 : INFO.00.014 From the file 'up15DEC.zip' 2 chunks were downloaded. Progress update 2022-12-17 13:07:07.133255 : INFO.00.015 The file 'up15DEC.zip' was successfully unpacked. Progress update 2022-12-17 13:07:07.144255 : INFO.00.051 msaccess_file='D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats\\data\\download\\IO-AVSTATS.mdb'. Progress update 2022-12-17 13:07:07.144755 : INFO.00.051 msaccess_file='D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats\\data\\download\\up15DEC.sql'. Progress update 2022-12-17 13:07:07.144755 : INFO.00.052 razorsql_jar_file='C:\\Program Files\\RazorSQL\\razorsql.jar'. Progress update 2022-12-17 13:07:07.144755 : INFO.00.053 razorsql_java_path='C:\\Program Files\\RazorSQL\\jre11\\bin\\java'. 1671278827242: launching RazorSQL . . . 1671278827242: args . . . -backup IO-AVSTATS null null ; null D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats\\data\\download\\up15DEC.sql NO tables YES null NO NO 1671278827278: userName: walte 1671278827278: libraryPath: C:\\Program Files\\RazorSQL\\jre11\\bin;C:\\WINDOWS\\Sun\\Java\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\Users\\walte\\.virtualenvs\\io-avstats-zZIfNcpY\\Scripts;C:\\Program Files (x86)\\VMware\\VMware Player\\bin\\;C:\\Program Files (x86)\\infogridpacific\\AZARDI;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\Calibre2\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git LFS;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\Program Files\\Pandoc\\;C:\\Program Files\\TortoiseGit\\bin;C:\\Software\\GnuWin32\\bin;C:\\WINDOWS;C:\\WINDOWS\\system32;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Users\\walte\\.nimble\\bin;C:\\Windows;C:\\Windows\\system32;C:\\Windows\\System32\\OpenSSH\\;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Software\\.cargo\\bin;%GRADLE_HOME%\\bin;%HOME_ELIXIR%\\bin;%HOME_ERLANG%\\bin;%HOME_GO%\\bin;C:\\Program Files\\heroku\\bin;%HOME_JULIA%\\bin;%HOME_NIM%\\bin;C:\\Software\\PostgreSQL\\15\\bin;C:\\Software\\poppler-0.68.0\\bin;C:\\Software\\Python\\Python310;C:\\Software\\Python\\Python310\\Scripts;C:\\Software\\rebar3;%HOME_RUST%\\bin;C:\\Software\\Tesseract-OCR;C:\\Software\\jdk-18.0.2\\bin;%KOTLIN_HOME%\\bin;C:\\Software\\oracle\\instantclient_21_6;C:\\Software\\Gpg4win\\..\\GnuPG\\bin;C:\\Program Files\\LLVM\\bin;C:\\Program Files\\nodejs\\;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Program Files\\Amazon\\AWSCLIV2\\;C:\\Program Files\\Git\\cmd;C:\\Program Files\\PuTTY\\;C:\\Software\\texlive\\2022\\bin\\win32;C:\\Users\\walte\\.cargo\\bin;C:\\Users\\walte\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Software\\Microsoft VS Code\\bin;C:\\Users\\walte\\go\\bin;c:\\users\\walte\\.local\\bin;C:\\Users\\walte\\AppData\\Local\\JetBrains\\Toolbox\\scripts;C:\\Users\\walte\\AppData\\Roaming\\npm;C:\\Software\\MiKTeX\\miktex\\bin\\x64\\;. 1671278827279: javaVersion: 11.0.13 1671278827279: 1671278827279: Verifying RazorSQL resources location. 1671278827279: 1671278827280: testing base url: / = file:/C:/Program%20Files/RazorSQL/ 1671278827280: 1671278827280: testString1: file:/C:/Program%20Files/RazorSQL/razorsql.jar 1671278827280: testString2: file:/C:/Program%20Files/RazorSQL/data/base.ssql 1671278827280: testFile1: C:\\Program Files\\RazorSQL\\razorsql.jar 1671278827280: testFile2: C:\\Program Files\\RazorSQL\\data\\base.ssql 1671278827281: both test file exists. Base URL found. 1671278827281: resource directory: file:/C:/Program%20Files/RazorSQL/ 1671278827281: user home: C:\\Users\\walte 1671278827282: user profile: C:\\Users\\walte 1671278827282: app data: C:\\Users\\walte\\AppData\\Roaming 1671278827282: checking write access to: C:\\Users\\walte\\AppData\\Roaming 1671278827283: write dir: C:\\Users\\walte\\AppData\\Roaming\\RichardsonSoftware 1671278827283: can write to C:\\Users\\walte\\AppData\\Roaming 1671278827283: user.home: C:\\Users\\walte\\AppData\\Roaming 1671278827283: RazorSQL Scratch Directory: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL 1671278827283: RazorSQL Scratch Directory exists 1671278827283: checking for sub directories 1671278827283: razorsql launch log: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\razorsql_launch_log.txt 1671278827284: launch log file = C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\razorsql_launch_log.txt 1671278827284: Checking for graphics properties 1671278827284: graphics properties file: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\data\\graphics_properties.txt 1671278827284: gOverride: null 1671278827285: not disabling advanced graphics 1671278827285: path0: file:/C:/Program%20Files/RazorSQL/data/run.ssql 1671278827285: path1: file:/C:/Program%20Files/RazorSQL/razorsql.jar 1671278827285: runArgs: true 1671278827285: showScreen: false 1671278827285: args[0]: -backup 1671278827286: args[1]: IO-AVSTATS 1671278827286: args[2]: null 1671278827286: args[3]: null 1671278827286: args[4]: ; 1671278827286: args[5]: null 1671278827286: args[6]: D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats\\data\\download\\up15DEC.sql 1671278827286: args[7]: NO 1671278827286: args[8]: tables 1671278827286: args[9]: YES 1671278827286: args[10]: null 1671278827286: args[11]: NO 1671278827286: args[12]: NO 1671278827286: Command: -backup 1671278827286: Running -backup h: name = C:\\Program Files\\RazorSQL\\data\\run.ssql h: name = C:\\Program Files\\RazorSQL\\razorsql.jar 1671278827293: Attempting to load . . . command found uOne: file:/C:/Program%20Files/RazorSQL/ h: name = C:\\Program Files\\RazorSQL\\data\\run.ssql 1671278827303reading file . . .C:\\Program Files\\RazorSQL\\data\\base.ssql 1671278827327done reading . . . 1671278827336done converting 1671278827336starting lib load. 1671278827347lib load complete. In command line processor Max Memory: 30688.0 Current Total Memory: 2048.0 Free Memory: 1957.998046875 1671278827417: r init 1671278827417: d init 1671278827417: get default file encoding 1671278827418: end d init custom home directory: null Checking for user data from old versions 1671278827419: user home: C:\\Users\\walte 1671278827419: user profile: C:\\Users\\walte 1671278827419: app data: C:\\Users\\walte\\AppData\\Roaming 1671278827419: checking write access to: C:\\Users\\walte\\AppData\\Roaming 1671278827419: write dir: C:\\Users\\walte\\AppData\\Roaming\\RichardsonSoftware 1671278827419: can write to C:\\Users\\walte\\AppData\\Roaming newHome: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL dataHome: C:\\Users\\walte\\AppData\\Roaming/RazorSQL/data/ preferences file: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\data\\preferences.txt Profiles Exist 1671278827429: loading icons 1671278827591: done r init Getting connection data from: IO-AVSTATS 1671278827593: r init 1671278827593: d init 1671278827593: get default file encoding 1671278827593: end d init custom home directory: null Checking for user data from old versions newHome: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL dataHome: C:\\Users\\walte\\AppData\\Roaming/RazorSQL/data/ preferences file: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\data\\preferences.txt Profiles Exist 1671278827594: loading icons 1671278827603: done r init getting connection . . . Not using SSH Tunnel driver: sun.jdbc.odbc.JdbcOdbcDriver classLocation: C:\\Program Files\\RazorSQL\\drivers\\common\\odbc.jar loadedCommonJars: false commonURL: file:/C:/Program%20Files/RazorSQL/drivers/common/ commonDir: C:\\Program Files\\RazorSQL\\drivers\\common commonFiles[0]: file:/C:/Program%20Files/RazorSQL/drivers/common/activation.jar commonFiles[1]: file:/C:/Program%20Files/RazorSQL/drivers/common/common.jar commonFiles[2]: file:/C:/Program%20Files/RazorSQL/drivers/common/jaxb-api.jar commonFiles[3]: file:/C:/Program%20Files/RazorSQL/drivers/common/jaxb-core.jar commonFiles[4]: file:/C:/Program%20Files/RazorSQL/drivers/common/jaxb-impl.jar commonFiles[6]: file:/C:/Program%20Files/RazorSQL/drivers/common/odbc.jar connection type: ODBC final classLocation: C:\\Program Files\\RazorSQL\\drivers\\common\\odbc.jar classLocation file: C:\\Program Files\\RazorSQL\\drivers\\common\\odbc.jar building sql manager Loading driver Done loading driver Getting connection with no login info JdbcOdbcDriver: in initialize OdbcApi == null Creating new OdbcApi, nativePrefix: JdbcOdbc constructor Attempting to load JdbcOdbc library Got OdbcApi: sun.jdbc.odbc.JdbcOdbc@2d127a61 Getting charset JdbcOdbcDriver.OdbcApi.charSet: Cp1252 Connection obtained obtained connection database major version = 2 database product name: ACCESS multiValueInsert: false includeIdentifyColumns: false Calling backup . . . Retrieving Tables . . . Generating Table DDL . . . 1 of 20 number of columns 93 column map size: 93 foundNull: false 2 of 20 number of columns 2 column map size: 2 foundNull: false 3 of 20 number of columns 11 column map size: 11 foundNull: false 4 of 20 number of columns 2 column map size: 2 foundNull: false 5 of 20 number of columns 6 column map size: 6 foundNull: false 6 of 20 number of columns 5 column map size: 5 foundNull: false 7 of 20 number of columns 7 column map size: 7 foundNull: false 8 of 20 number of columns 13 column map size: 13 foundNull: false 9 of 20 number of columns 17 column map size: 17 foundNull: false 10 of 20 number of columns 73 column map size: 73 foundNull: false 11 of 20 number of columns 10 column map size: 10 foundNull: false 12 of 20 number of columns 13 column map size: 13 foundNull: false 13 of 20 number of columns 33 column map size: 33 foundNull: false 14 of 20 number of columns 8 column map size: 8 foundNull: false 15 of 20 number of columns 7 column map size: 7 foundNull: false 16 of 20 number of columns 8 column map size: 8 foundNull: false 17 of 20 number of columns 5 column map size: 5 foundNull: false 18 of 20 number of columns 8 column map size: 8 foundNull: false 19 of 20 number of columns 11 column map size: 11 foundNull: false 20 of 20 number of columns 3 column map size: 3 foundNull: false Generating Alter Table DDL . . . 1 of 20 2 of 20 3 of 20 4 of 20 5 of 20 6 of 20 7 of 20 8 of 20 9 of 20 10 of 20 11 of 20 12 of 20 13 of 20 14 of 20 15 of 20 16 of 20 17 of 20 18 of 20 19 of 20 20 of 20 backup finished closing connection . . . connection closed. Shutting down logging streams Done shutting down logging streams Exiting . . . Progress update 2022-12-17 13:07:08.208772 : INFO.00.011 The DDL script for the MS Access database 'up15DEC.mdb' was created successfully. Progress update 2022-12-17 13:07:08.216271 : INFO.00.012 The DDL script for the MS Access database 'up15DEC.mdb' is identical to the reference script. Progress update 2022-12-17 13:07:08.216271 : -------------------------------------------------------------------------------. Progress update 2022-12-17 13:07:08.216271 : 4,294,822,800 ns - Total time launcher. Progress update 2022-12-17 13:07:08.216271 : INFO.00.006 End Launcher. Progress update 2022-12-17 13:07:08.216772 : ===============================================================================. ----------------------------------------------------------------------- The current time is: 13:07:08.37 Enter the new time: ----------------------------------------------------------------------- End run_io_avstats ======================================================================= 2.2 l_n_a - Load NTSB MS Access database data into PostgreSQL Relevant cofiguration parameters : download_work_dir = \"data/download\" Example protocol : ...\\io-avstats>run_io_avstats ========================================================= r_s_a - Run a Streamlit application --------------------------------------------------------- d_n_a - Download a NTSB MS Access database file l_n_a - Load NTSB MS Access database data into PostgreSQL c_l_l - Correct decimal US latitudes and longitudes v_n_d - Verify selected NTSB data r_d_s - Refresh the PostgreSQL database schema --------------------------------------------------------- c_p_d - Cleansing PostgreSQL data d_s_f - Download basic simplemaps files l_c_d - Load data from a correction file into PostgreSQL l_c_s - Load country and state data into PostgreSQL l_s_d - Load simplemaps data into PostgreSQL l_z_d - Load ZIP Code Database data into PostgreSQL --------------------------------------------------------- c_d_s - Create the PostgreSQL database schema d_d_f - Delete the PostgreSQL database files d_d_s - Drop the PostgreSQL database schema s_d_c - Set up the PostgreSQL database container u_d_s - Update the PostgreSQL database schema --------------------------------------------------------- version - Show the IO-AVSTATS-DB version --------------------------------------------------------- Enter the desired task [default: r_s_a] l_n_a ========================================================= IO-AVSTATS.mdb up01DEC.mdb up08DEC.mdb up15DEC.mdb up22OCT.mdb --------------------------------------------------------- Enter the stem name of the desired MS Access database file up15DEC Script run_io_avstats is now running ======================================================================= Start run_io_avstats ----------------------------------------------------------------------- IO-AVSTATS - Aviation Accident Statistics. ----------------------------------------------------------------------- PYTHONPATH : ----------------------------------------------------------------------- TASK : l_n_a CORRECTION : MSACCESS : up15DEC ----------------------------------------------------------------------- The current time is: 3:01:56.55 Enter the new time: ======================================================================= Progress update 2022-12-18 03:01:59.422228 : ===============================================================================. Progress update 2022-12-18 03:01:59.422228 : INFO.00.004 Start Launcher. Progress update 2022-12-18 03:01:59.424228 : INFO.00.001 The logger is configured and ready. Progress update 2022-12-18 03:01:59.432728 : INFO.00.008 Arguments task='l_n_a' msaccess='up15DEC'. Progress update 2022-12-18 03:01:59.433228 : -------------------------------------------------------------------------------. Progress update 2022-12-18 03:01:59.433228 : INFO.00.049 Loading NTSB MS Access database data from file 'up15DEC'. Progress update 2022-12-18 03:01:59.433228 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:01:59.433228 : INFO.00.054 ODBC driver='DRIVER={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats\\data\\download\\up15DEC.mdb;'. Progress update 2022-12-18 03:02:00.468009 : INFO.00.021 The following database table is not processed: 'MSysAccessObjects'. Progress update 2022-12-18 03:02:00.468009 : INFO.00.021 The following database table is not processed: 'MSysACEs'. Progress update 2022-12-18 03:02:00.468009 : INFO.00.021 The following database table is not processed: 'MSysIMEXColumns'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysIMEXSpecs'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysModules2'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysNavPaneGroupCategories'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysNavPaneGroups'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysNavPaneGroupToObjects'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysNavPaneObjectIDs'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysObjects'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysQueries'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysRelationships'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'Country'. Progress update 2022-12-18 03:02:00.469012 : INFO.00.021 The following database table is not processed: 'ct_iaids'. Progress update 2022-12-18 03:02:00.469012 : INFO.00.021 The following database table is not processed: 'ct_seqevt'. Progress update 2022-12-18 03:02:00.469012 : INFO.00.021 The following database table is not processed: 'eADMSPUB_DataDictionary'. Progress update 2022-12-18 03:02:00.469012 : INFO.00.021 The following database table is not processed: 'states'. Progress update 2022-12-18 03:02:00.469012 : Progress update 2022-12-18 03:02:00.469012 : Database table : events <-----------------------------------. Progress update 2022-12-18 03:02:02.829483 : Number rows selected : 77. Progress update 2022-12-18 03:02:02.829483 : Number rows inserted : 15. Progress update 2022-12-18 03:02:02.829997 : Number rows updated : 62. Progress update 2022-12-18 03:02:02.829997 : Progress update 2022-12-18 03:02:02.829997 : Database table : aircraft <-----------------------------------. Progress update 2022-12-18 03:02:07.828401 : Number rows selected : 77. Progress update 2022-12-18 03:02:07.828401 : Number rows inserted : 15. Progress update 2022-12-18 03:02:07.828903 : Number rows updated : 62. Progress update 2022-12-18 03:02:07.828903 : Progress update 2022-12-18 03:02:07.828903 : Database table : dt_events <-----------------------------------. Progress update 2022-12-18 03:02:18.425030 : Number rows selected : 385. Progress update 2022-12-18 03:02:18.425030 : Number rows inserted : 159. Progress update 2022-12-18 03:02:18.425523 : Number rows updated : 226. Progress update 2022-12-18 03:02:18.425523 : Progress update 2022-12-18 03:02:18.425523 : Database table : ntsb_admin <-----------------------------------. Progress update 2022-12-18 03:02:20.508241 : Number rows selected : 77. Progress update 2022-12-18 03:02:20.508241 : Number rows inserted : 15. Progress update 2022-12-18 03:02:20.508241 : Number rows updated : 62. Progress update 2022-12-18 03:02:20.508241 : Progress update 2022-12-18 03:02:20.508241 : Database table : dt_aircraft <-----------------------------------. Progress update 2022-12-18 03:02:37.020238 : Number rows selected : 683. Progress update 2022-12-18 03:02:37.020238 : Number rows inserted : 385. Progress update 2022-12-18 03:02:37.020738 : Number rows updated : 298. Progress update 2022-12-18 03:02:37.020738 : Progress update 2022-12-18 03:02:37.020738 : Database table : engines <-----------------------------------. Progress update 2022-12-18 03:02:38.360943 : Number rows selected : 47. Progress update 2022-12-18 03:02:38.361447 : Number rows inserted : 36. Progress update 2022-12-18 03:02:38.361447 : Number rows updated : 11. Progress update 2022-12-18 03:02:38.361447 : Progress update 2022-12-18 03:02:38.361447 : Database table : events_sequence <-----------------------------------. Progress update 2022-12-18 03:02:41.193854 : Number rows selected : 108. Progress update 2022-12-18 03:02:41.194353 : Number rows inserted : 62. Progress update 2022-12-18 03:02:41.194353 : Number rows updated : 46. Progress update 2022-12-18 03:02:41.194353 : Progress update 2022-12-18 03:02:41.194353 : Database table : findings <-----------------------------------. Progress update 2022-12-18 03:02:43.593633 : Number rows selected : 94. Progress update 2022-12-18 03:02:43.593633 : Number rows inserted : 94. Progress update 2022-12-18 03:02:43.593633 : Progress update 2022-12-18 03:02:43.594133 : Database table : flight_crew <-----------------------------------. Progress update 2022-12-18 03:02:45.726279 : Number rows selected : 74. Progress update 2022-12-18 03:02:45.726279 : Number rows inserted : 57. Progress update 2022-12-18 03:02:45.726279 : Number rows updated : 17. Progress update 2022-12-18 03:02:45.726279 : Progress update 2022-12-18 03:02:45.726781 : Database table : injury <-----------------------------------. Progress update 2022-12-18 03:02:53.998519 : Number rows selected : 305. Progress update 2022-12-18 03:02:53.998519 : Number rows inserted : 97. Progress update 2022-12-18 03:02:53.998519 : Number rows updated : 208. Progress update 2022-12-18 03:02:53.999019 : Progress update 2022-12-18 03:02:53.999019 : Database table : narratives <-----------------------------------. Progress update 2022-12-18 03:02:55.873454 : Number rows selected : 60. Progress update 2022-12-18 03:02:55.873454 : Number rows inserted : 39. Progress update 2022-12-18 03:02:55.873454 : Number rows updated : 21. Progress update 2022-12-18 03:02:55.873454 : Progress update 2022-12-18 03:02:55.873454 : Database table : occurrences <-----------------------------------. Progress update 2022-12-18 03:02:55.885477 : Number rows selected : 0. Progress update 2022-12-18 03:02:55.885477 : Progress update 2022-12-18 03:02:55.885477 : Database table : dt_flight_crew <-----------------------------------. Progress update 2022-12-18 03:03:04.629342 : Number rows selected : 338. Progress update 2022-12-18 03:03:04.629342 : Number rows inserted : 280. Progress update 2022-12-18 03:03:04.629844 : Number rows updated : 58. Progress update 2022-12-18 03:03:04.629844 : Progress update 2022-12-18 03:03:04.629844 : Database table : flight_time <-----------------------------------. Progress update 2022-12-18 03:03:24.973637 : Number rows selected : 774. Progress update 2022-12-18 03:03:24.973637 : Number rows inserted : 676. Progress update 2022-12-18 03:03:24.973637 : Number rows updated : 98. Progress update 2022-12-18 03:03:24.973637 : Progress update 2022-12-18 03:03:24.974133 : Database table : seq_of_events <-----------------------------------. Progress update 2022-12-18 03:03:24.994181 : Number rows selected : 0. Progress update 2022-12-18 03:03:25.075929 : INFO.00.065 Cleansing PostgreSQL data. Progress update 2022-12-18 03:03:25.075929 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:03:25.142428 : INFO.00.066 Cleansing table 'events' column 'ev_city'. Progress update 2022-12-18 03:03:28.571816 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:03:28.572316 : INFO.00.066 Cleansing table 'events' column 'ev_site_zipcode'. Progress update 2022-12-18 03:03:31.104986 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:03:31.104986 : INFO.00.066 Cleansing table 'events' column 'latitude'. Progress update 2022-12-18 03:03:33.629172 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:03:33.629172 : INFO.00.066 Cleansing table 'events' column 'longitude'. Progress update 2022-12-18 03:03:36.180510 : -------------------------------------------------------------------------------. Progress update 2022-12-18 03:03:36.180510 : 96,908,281,000 ns - Total time launcher. Progress update 2022-12-18 03:03:36.180510 : INFO.00.006 End Launcher. Progress update 2022-12-18 03:03:36.180510 : ===============================================================================. ----------------------------------------------------------------------- The current time is: 3:03:36.36 Enter the new time: ----------------------------------------------------------------------- End run_io_avstats ======================================================================= 2.3 d_s_f - Download basic simplemaps files Relevant cofiguration parameters : download_chunk_size = 524288 download_timeout = 10 download_file_simplemaps_us_cities_xlsx = \"uscities.xlsx\" download_file_simplemaps_us_cities_zip = \"simplemaps_uscities_basicv1.75.zip\" download_file_simplemaps_us_zips_xlsx = \"uszips.xlsx\" download_file_simplemaps_us_zips_zip = \"simplemaps_uszips_basicv1.81.zip\" download_work_dir = \"data/download\" Example protocol : ...\\io-avstats>run_io_avstats ========================================================= r_s_a - Run a Streamlit application --------------------------------------------------------- d_n_a - Download a NTSB MS Access database file l_n_a - Load NTSB MS Access database data into PostgreSQL c_l_l - Correct decimal US latitudes and longitudes v_n_d - Verify selected NTSB data r_d_s - Refresh the PostgreSQL database schema --------------------------------------------------------- c_p_d - Cleansing PostgreSQL data d_s_f - Download basic simplemaps files l_c_d - Load data from a correction file into PostgreSQL l_c_s - Load country and state data into PostgreSQL l_s_d - Load simplemaps data into PostgreSQL l_z_d - Load ZIP Code Database data into PostgreSQL --------------------------------------------------------- c_d_s - Create the PostgreSQL database schema d_d_f - Delete the PostgreSQL database files d_d_s - Drop the PostgreSQL database schema s_d_c - Set up the PostgreSQL database container u_d_s - Update the PostgreSQL database schema --------------------------------------------------------- version - Show the IO-AVSTATS-DB version --------------------------------------------------------- Enter the desired task [default: r_s_a] d_s_f Script run_io_avstats is now running ======================================================================= Start run_io_avstats ----------------------------------------------------------------------- IO-AVSTATS - Aviation Accident Statistics. ----------------------------------------------------------------------- PYTHONPATH : ----------------------------------------------------------------------- TASK : d_s_f CORRECTION : MSACCESS : ----------------------------------------------------------------------- The current time is: 3:10:34.78 Enter the new time: ======================================================================= Progress update 2022-12-18 03:10:36.547946 : ===============================================================================. Progress update 2022-12-18 03:10:36.547946 : INFO.00.004 Start Launcher. Progress update 2022-12-18 03:10:36.549946 : INFO.00.001 The logger is configured and ready. Progress update 2022-12-18 03:10:36.558445 : INFO.00.005 Argument task='d_s_f'. Progress update 2022-12-18 03:10:36.558945 : -------------------------------------------------------------------------------. Progress update 2022-12-18 03:10:36.558945 : INFO.00.048 Downloading basic simplemaps files. Progress update 2022-12-18 03:10:36.558945 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:10:36.743463 : INFO.00.030 The connection to the US city file 'simplemaps_uscities_basicv1.75.zip' on the simplemaps download page was successfully established. Progress update 2022-12-18 03:10:36.919741 : INFO.00.023 From the file 'simplemaps_uscities_basicv1.75.zip' 8 chunks were downloaded. Progress update 2022-12-18 03:10:36.951741 : INFO.00.024 The file 'simplemaps_uscities_basicv1.75.zip' was successfully unpacked. Progress update 2022-12-18 03:10:37.131672 : INFO.00.022 The connection to the US zip code file 'simplemaps_uszips_basicv1.81.zip' on the simplemaps download page was successfully established. Progress update 2022-12-18 03:10:37.226532 : INFO.00.023 From the file 'simplemaps_uszips_basicv1.81.zip' 8 chunks were downloaded. Progress update 2022-12-18 03:10:37.262050 : INFO.00.024 The file 'simplemaps_uszips_basicv1.81.zip' was successfully unpacked. Progress update 2022-12-18 03:10:37.262549 : -------------------------------------------------------------------------------. Progress update 2022-12-18 03:10:37.262549 : 870,102,500 ns - Total time launcher. Progress update 2022-12-18 03:10:37.262549 : INFO.00.006 End Launcher. Progress update 2022-12-18 03:10:37.262549 : ===============================================================================. ----------------------------------------------------------------------- The current time is: 3:10:37.41 Enter the new time: ----------------------------------------------------------------------- End run_io_avstats ======================================================================= The downloaded files uscities.csv and uszips.xlsx must be checked with the reference files in the file directory data/reference for a match. If there is no mismatch, then the next step can be skipped. 2.4 l_s_d - Load simplemaps data into PostgreSQL Only necessary if the file downloaded in the previous step contains changes. TODO Relevant cofiguration parameters : download_work_dir = \"data/download\" Example protocol : TODO 2.5 Download the ZIP Code Database file The Personal Free version of the ZIP Code Database file must be downloaded manually from the https://www.unitedstateszipcodes.org/zip-code-database/ website to the file directory according to the download_work_dir configuration parameter. The two formats Excel Format (data only) and CSV Format must be downloaded one after the other. The downloaded file zip_code_database.csv must be checked with the reference files in the file directory data/reference for a match. If there is no mismatch, then the next step can be skipped. Relevant cofiguration parameters : download_work_dir = \"data/download\" 2.6 l_z_d - Load ZIP Code Database data into PostgreSQL Only necessary if the file downloaded in the previous step contains changes. TODO Relevant cofiguration parameters : download_work_dir = \"data/download\" Example protocol : TODO 2.7 l_c_d - Load data from a correction file into PostgreSQL This step only needs to be performed if modified or new correction files are available. Relevant cofiguration parameters : correction_work_dir = \"data/correction\" Example protocol : TODO 2.8 c_l_l - Correct decimal US latitudes and longitudes Example protocol : ...\\io-avstats>run_io_avstats ========================================================= r_s_a - Run a Streamlit application --------------------------------------------------------- d_n_a - Download a NTSB MS Access database file l_n_a - Load NTSB MS Access database data into PostgreSQL c_l_l - Correct decimal US latitudes and longitudes v_n_d - Verify selected NTSB data r_d_s - Refresh the PostgreSQL database schema --------------------------------------------------------- c_p_d - Cleansing PostgreSQL data d_s_f - Download basic simplemaps files l_c_d - Load data from a correction file into PostgreSQL l_c_s - Load country and state data into PostgreSQL l_s_d - Load simplemaps data into PostgreSQL l_z_d - Load ZIP Code Database data into PostgreSQL --------------------------------------------------------- c_d_s - Create the PostgreSQL database schema d_d_f - Delete the PostgreSQL database files d_d_s - Drop the PostgreSQL database schema s_d_c - Set up the PostgreSQL database container u_d_s - Update the PostgreSQL database schema --------------------------------------------------------- version - Show the IO-AVSTATS-DB version --------------------------------------------------------- Enter the desired task [default: r_s_a] c_l_l Script run_io_avstats is now running ======================================================================= Start run_io_avstats ----------------------------------------------------------------------- IO-AVSTATS - Aviation Accident Statistics. ----------------------------------------------------------------------- PYTHONPATH : ----------------------------------------------------------------------- TASK : c_l_l CORRECTION : MSACCESS : ----------------------------------------------------------------------- The current time is: 3:48:26.10 Enter the new time: ======================================================================= Progress update 2022-12-18 03:48:27.970732 : ===============================================================================. Progress update 2022-12-18 03:48:27.970732 : INFO.00.004 Start Launcher. Progress update 2022-12-18 03:48:27.972731 : INFO.00.001 The logger is configured and ready. Progress update 2022-12-18 03:48:27.981231 : INFO.00.005 Argument task='c_l_l'. Progress update 2022-12-18 03:48:27.981231 : -------------------------------------------------------------------------------. Progress update 2022-12-18 03:48:27.981231 : INFO.00.040 Correct decimal US latitudes and longitudes. Progress update 2022-12-18 03:48:27.981231 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:48:31.040942 : INFO.00.063 Processed data source 'events'. Progress update 2022-12-18 03:48:31.040942 : Number cols deleted : 60561. Progress update 2022-12-18 03:48:31.040942 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:50:40.621017 : Number of rows so far read : 5000. Progress update 2022-12-18 03:52:41.946249 : Number of rows so far read : 10000. Progress update 2022-12-18 03:54:48.519956 : Number of rows so far read : 15000. Progress update 2022-12-18 03:56:53.584921 : Number of rows so far read : 20000. Progress update 2022-12-18 03:59:01.258705 : Number of rows so far read : 25000. Progress update 2022-12-18 04:01:09.806450 : Number of rows so far read : 30000. Progress update 2022-12-18 04:03:12.247750 : Number of rows so far read : 35000. Progress update 2022-12-18 04:05:16.963868 : Number of rows so far read : 40000. Progress update 2022-12-18 04:07:21.854231 : Number of rows so far read : 45000. Progress update 2022-12-18 04:09:33.068583 : Number of rows so far read : 50000. Progress update 2022-12-18 04:11:47.889551 : Number of rows so far read : 55000. Progress update 2022-12-18 04:14:07.417816 : Number of rows so far read : 60000. Progress update 2022-12-18 04:16:14.266251 : Number of rows so far read : 65000. Progress update 2022-12-18 04:18:20.373523 : Number of rows so far read : 70000. Progress update 2022-12-18 04:20:29.429655 : Number of rows so far read : 75000. Progress update 2022-12-18 04:22:47.616519 : Number of rows so far read : 80000. Progress update 2022-12-18 04:24:49.899572 : Number of rows so far read : 85000. Progress update 2022-12-18 04:26:53.415653 : Number of rows so far read : 90000. Progress update 2022-12-18 04:29:00.088868 : Number of rows so far read : 95000. Progress update 2022-12-18 04:31:06.729171 : Number of rows so far read : 100000. Progress update 2022-12-18 04:33:26.507860 : Number of rows so far read : 105000. Progress update 2022-12-18 04:35:45.652623 : Number of rows so far read : 110000. Progress update 2022-12-18 04:37:52.009456 : Number of rows so far read : 115000. Progress update 2022-12-18 04:39:51.601865 : Number of rows so far read : 120000. Progress update 2022-12-18 04:42:02.349044 : Number of rows so far read : 125000. Progress update 2022-12-18 04:44:07.523367 : Number of rows so far read : 130000. Progress update 2022-12-18 04:46:14.330089 : Number of rows so far read : 135000. Progress update 2022-12-18 04:46:16.882015 : Number rows selected : 135089. Progress update 2022-12-18 04:46:16.882015 : Number rows updated : 135089. Progress update 2022-12-18 04:46:16.882015 : -------------------------------------------------------------------------------. Progress update 2022-12-18 04:46:16.882015 : 3,469,058,783,600 ns - Total time launcher. Progress update 2022-12-18 04:46:16.882516 : INFO.00.006 End Launcher. Progress update 2022-12-18 04:46:16.882516 : ===============================================================================. ----------------------------------------------------------------------- The current time is: 4:46:17.03 Enter the new time: ----------------------------------------------------------------------- End run_io_avstats ======================================================================= 2.9 v_n_d - Verify selected NTSB data Relevant cofiguration parameters : max_deviation_latitude = 0.01 max_deviation_longitude = 0.01 Example protocol : ...\\io-avstats>run_io_avstats ========================================================= r_s_a - Run a Streamlit application --------------------------------------------------------- d_n_a - Download a NTSB MS Access database file l_n_a - Load NTSB MS Access database data into PostgreSQL c_l_l - Correct decimal US latitudes and longitudes v_n_d - Verify selected NTSB data r_d_s - Refresh the PostgreSQL database schema --------------------------------------------------------- c_p_d - Cleansing PostgreSQL data d_s_f - Download basic simplemaps files l_c_d - Load data from a correction file into PostgreSQL l_c_s - Load country and state data into PostgreSQL l_s_d - Load simplemaps data into PostgreSQL l_z_d - Load ZIP Code Database data into PostgreSQL --------------------------------------------------------- c_d_s - Create the PostgreSQL database schema d_d_f - Delete the PostgreSQL database files d_d_s - Drop the PostgreSQL database schema s_d_c - Set up the PostgreSQL database container u_d_s - Update the PostgreSQL database schema --------------------------------------------------------- version - Show the IO-AVSTATS-DB version --------------------------------------------------------- Enter the desired task [default: r_s_a] v_n_d Script run_io_avstats is now running ======================================================================= Start run_io_avstats ----------------------------------------------------------------------- IO-AVSTATS - Aviation Accident Statistics. ----------------------------------------------------------------------- PYTHONPATH : ----------------------------------------------------------------------- TASK : v_n_d CORRECTION : MSACCESS : ----------------------------------------------------------------------- The current time is: 7:01:26.47 Enter the new time: ======================================================================= Progress update 2022-12-18 07:01:28.302801 : ===============================================================================. Progress update 2022-12-18 07:01:28.303299 : INFO.00.004 Start Launcher. Progress update 2022-12-18 07:01:28.305302 : INFO.00.001 The logger is configured and ready. Progress update 2022-12-18 07:01:28.313799 : INFO.00.005 Argument task='v_n_d'. Progress update 2022-12-18 07:01:28.313799 : -------------------------------------------------------------------------------. Progress update 2022-12-18 07:01:28.313799 : INFO.00.043 Verify selected NTSB data. Progress update 2022-12-18 07:01:28.313799 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:01:29.791861 : INFO.00.063 Processed data source 'events'. Progress update 2022-12-18 07:01:29.791861 : Number cols deleted : 27378. Progress update 2022-12-18 07:01:29.791861 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:01:29.847379 : INFO.00.064 Verification of table 'events' column(s) 'latitude & longitude'. Progress update 2022-12-18 07:01:29.847879 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:01:30.779339 : Number of rows so far read : 5000. Progress update 2022-12-18 07:01:35.923824 : Number of rows so far read : 10000. Progress update 2022-12-18 07:02:21.619041 : Number of rows so far read : 15000. Progress update 2022-12-18 07:03:23.893470 : Number of rows so far read : 20000. Progress update 2022-12-18 07:04:30.130890 : Number of rows so far read : 25000. Progress update 2022-12-18 07:05:33.466294 : Number of rows so far read : 30000. Progress update 2022-12-18 07:06:30.937809 : Number rows errors : 12374. Progress update 2022-12-18 07:06:30.937809 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:06:30.938308 : INFO.00.064 Verification of table 'events' column(s) 'ev_city'. Progress update 2022-12-18 07:06:32.108776 : Number rows errors : 6041. Progress update 2022-12-18 07:06:32.108776 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:06:32.108776 : INFO.00.064 Verification of table 'events' column(s) 'ev_city & ev_site_zipcode'. Progress update 2022-12-18 07:06:33.699993 : Number rows errors : 16516. Progress update 2022-12-18 07:06:33.700494 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:06:33.700494 : INFO.00.064 Verification of table 'events' column(s) 'ev_state'. Progress update 2022-12-18 07:06:34.416462 : Number rows errors : 291. Progress update 2022-12-18 07:06:34.416462 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:06:34.416462 : INFO.00.064 Verification of table 'events' column(s) 'ev_site_zipcode'. Progress update 2022-12-18 07:06:34.866764 : Number rows errors : 6034. Progress update 2022-12-18 07:06:34.866764 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:06:34.867763 : Number rows selected : 34324. Progress update 2022-12-18 07:06:34.867763 : Number rows updated : 41256. Progress update 2022-12-18 07:06:34.867763 : Number rows errors : 41256. Progress update 2022-12-18 07:06:34.868264 : -------------------------------------------------------------------------------. Progress update 2022-12-18 07:06:34.868264 : 306,720,465,000 ns - Total time launcher. Progress update 2022-12-18 07:06:34.868264 : INFO.00.006 End Launcher. Progress update 2022-12-18 07:06:34.868264 : ===============================================================================. ----------------------------------------------------------------------- The current time is: 7:06:35.04 Enter the new time: ----------------------------------------------------------------------- End run_io_avstats ======================================================================= 2.10 r_d_s - Refresh the PostgreSQL database schema Example protocol : ...\\io-avstats>run_io_avstats ========================================================= r_s_a - Run a Streamlit application --------------------------------------------------------- d_n_a - Download a NTSB MS Access database file l_n_a - Load NTSB MS Access database data into PostgreSQL c_l_l - Correct decimal US latitudes and longitudes v_n_d - Verify selected NTSB data r_d_s - Refresh the PostgreSQL database schema --------------------------------------------------------- c_p_d - Cleansing PostgreSQL data d_s_f - Download basic simplemaps files l_c_d - Load data from a correction file into PostgreSQL l_c_s - Load country and state data into PostgreSQL l_s_d - Load simplemaps data into PostgreSQL l_z_d - Load ZIP Code Database data into PostgreSQL --------------------------------------------------------- c_d_s - Create the PostgreSQL database schema d_d_f - Delete the PostgreSQL database files d_d_s - Drop the PostgreSQL database schema s_d_c - Set up the PostgreSQL database container u_d_s - Update the PostgreSQL database schema --------------------------------------------------------- version - Show the IO-AVSTATS-DB version --------------------------------------------------------- Enter the desired task [default: r_s_a] r_d_s Script run_io_avstats is now running ======================================================================= Start run_io_avstats ----------------------------------------------------------------------- IO-AVSTATS - Aviation Accident Statistics. ----------------------------------------------------------------------- PYTHONPATH : ----------------------------------------------------------------------- TASK : r_d_s CORRECTION : MSACCESS : ----------------------------------------------------------------------- The current time is: 7:51:13.14 Enter the new time: ======================================================================= Progress update 2022-12-18 07:51:14.915905 : ===============================================================================. Progress update 2022-12-18 07:51:14.915905 : INFO.00.004 Start Launcher. Progress update 2022-12-18 07:51:14.918905 : INFO.00.001 The logger is configured and ready. Progress update 2022-12-18 07:51:14.927904 : INFO.00.005 Argument task='r_d_s'. Progress update 2022-12-18 07:51:14.927904 : -------------------------------------------------------------------------------. Progress update 2022-12-18 07:51:14.928406 : INFO.00.071 Refreshing the database schema. Progress update 2022-12-18 07:51:14.928406 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:51:23.134620 : INFO.00.069 Materialized database view is refreshed: io_app_faaus2008. Progress update 2022-12-18 07:51:23.134620 : -------------------------------------------------------------------------------. Progress update 2022-12-18 07:51:23.135120 : 8,366,215,500 ns - Total time launcher. Progress update 2022-12-18 07:51:23.135120 : INFO.00.006 End Launcher. Progress update 2022-12-18 07:51:23.135120 : ===============================================================================. ----------------------------------------------------------------------- The current time is: 7:51:23.31 Enter the new time: ----------------------------------------------------------------------- End run_io_avstats ======================================================================= 2.11 Backup the file directory data/postgres Stop the Docker container io_avstats_db . Zip the file directory postgres in the file directory data - result is the file postgres.zip . Rename the file postgres.sql to yy.mm.dd_postgres_upDDMON.zip . Create a copy of the file yy.mm.dd_postgres_upDDMON.zip with the name latest_postgres.zip . 2.12 Update the Google Drive Log in to Google Drive with the Google Account io-avstats.io-aero@gmail.com . Upload the file yy.mm.dd_postgres_upDDMON.zip . Share the newly uploaded file. 2.13 Update IO-AVSTATS in the IO-Aero cloud Run the script scripts/run_cloud_files_zip . Upload the resulting cloud.zip file to the cloud and process it there.","title":"... add NTSB accident files"},{"location":"how_to_add_ntsb_accident_files.html#how-to-add-ntsb-accident-files","text":"Aviation accident data provided by NTSB can be found at the following website under Downloadable data sets : In the database table io_processed_files you can find the previously processed files: Any file can be processed several times with the process described in the following, as long as one processes also afterwards all newer files again. All necessary processing steps can be executed with the run_io_avstats script. The script is available in a version for Windows 10 and 11 cmd and for Ubuntu 22.04 bash shell.","title":"How to add NTSB accident files"},{"location":"how_to_add_ntsb_accident_files.html#1-quick-reference","text":"No. Task Description 1 d_n_a Download a NTSB MS Access database file 2 l_n_a Load NTSB MS Access database data into PostgreSQL 3 d_s_f Download basic simplemaps files 4 l_s_d Optional : Load simplemaps data into PostgreSQL 5 Download the ZIP Code Database file 6 l_z_d Optional : Load ZIP Code Database data into PostgreSQL 7 l_c_d Optional : Load data from a correction file into PostgreSQL 8 c_l_l Correct decimal US latitudes and longitudes 9 v_n_d Verify selected NTSB data 10 r_d_s Refresh the PostgreSQL database schema 11 Backup the file directory data/postgres 12 Update the Google Drive 13 Update IO-AVSTATS in the IO-Aero cloud","title":"1. Quick reference"},{"location":"how_to_add_ntsb_accident_files.html#2-detailed-description","text":"","title":"2. Detailed description"},{"location":"how_to_add_ntsb_accident_files.html#21-d_n_a-download-a-ntsb-ms-access-database-file","text":"Relevant cofiguration parameters : download_chunk_size = 524288 download_timeout = 10 download_url_ntsb_prefix = \"https://data.ntsb.gov/avdata/FileDirectory/DownloadFile?fileID=C%3A%5Cavdata%5C\" download_work_dir = \"data/download\" Example protocol : ...\\io-avstats>run_io_avstats ========================================================= r_s_a - Run a Streamlit application --------------------------------------------------------- d_n_a - Download a NTSB MS Access database file l_n_a - Load NTSB MS Access database data into PostgreSQL c_l_l - Correct decimal US latitudes and longitudes v_n_d - Verify selected NTSB data r_d_s - Refresh the PostgreSQL database schema --------------------------------------------------------- c_p_d - Cleansing PostgreSQL data d_s_f - Download basic simplemaps files l_c_d - Load data from a correction file into PostgreSQL l_c_s - Load country and state data into PostgreSQL l_s_d - Load simplemaps data into PostgreSQL l_z_d - Load ZIP Code Database data into PostgreSQL --------------------------------------------------------- c_d_s - Create the PostgreSQL database schema d_d_f - Delete the PostgreSQL database files d_d_s - Drop the PostgreSQL database schema s_d_c - Set up the PostgreSQL database container u_d_s - Update the PostgreSQL database schema --------------------------------------------------------- version - Show the IO-AVSTATS-DB version --------------------------------------------------------- Enter the desired task [default: r_s_a] d_n_a ========================================================= avall - Data from January 1, 2008 to today Pre2008 - Data from January 1, 1982 to December 31, 2007 upDDMON - New additions and updates until DD day in the month MON --------------------------------------------------------- Enter the stem name of the desired MS Access database file up15DEC Script run_io_avstats is now running ======================================================================= Start run_io_avstats ----------------------------------------------------------------------- IO-AVSTATS - Aviation Accident Statistics. ----------------------------------------------------------------------- PYTHONPATH : ----------------------------------------------------------------------- TASK : d_n_a CORRECTION : MSACCESS : up15DEC ----------------------------------------------------------------------- The current time is: 13:07:00.80 Enter the new time: ======================================================================= Progress update 2022-12-17 13:07:04.105948 : ===============================================================================. Progress update 2022-12-17 13:07:04.105948 : INFO.00.004 Start Launcher. Progress update 2022-12-17 13:07:04.111448 : INFO.00.001 The logger is configured and ready. Progress update 2022-12-17 13:07:04.120447 : INFO.00.008 Arguments task='d_n_a' msaccess='up15DEC'. Progress update 2022-12-17 13:07:04.120447 : -------------------------------------------------------------------------------. Progress update 2022-12-17 13:07:04.120447 : INFO.00.047 Downloading NTSB MS Access database file 'up15DEC'. Progress update 2022-12-17 13:07:04.120447 : -------------------------------------------------------------------------------- Progress update 2022-12-17 13:07:06.491427 : INFO.00.013 The connection to the MS Access database file 'up15DEC.zip' on the NTSB download page was successfully established. Progress update 2022-12-17 13:07:07.115755 : INFO.00.014 From the file 'up15DEC.zip' 2 chunks were downloaded. Progress update 2022-12-17 13:07:07.133255 : INFO.00.015 The file 'up15DEC.zip' was successfully unpacked. Progress update 2022-12-17 13:07:07.144255 : INFO.00.051 msaccess_file='D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats\\data\\download\\IO-AVSTATS.mdb'. Progress update 2022-12-17 13:07:07.144755 : INFO.00.051 msaccess_file='D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats\\data\\download\\up15DEC.sql'. Progress update 2022-12-17 13:07:07.144755 : INFO.00.052 razorsql_jar_file='C:\\Program Files\\RazorSQL\\razorsql.jar'. Progress update 2022-12-17 13:07:07.144755 : INFO.00.053 razorsql_java_path='C:\\Program Files\\RazorSQL\\jre11\\bin\\java'. 1671278827242: launching RazorSQL . . . 1671278827242: args . . . -backup IO-AVSTATS null null ; null D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats\\data\\download\\up15DEC.sql NO tables YES null NO NO 1671278827278: userName: walte 1671278827278: libraryPath: C:\\Program Files\\RazorSQL\\jre11\\bin;C:\\WINDOWS\\Sun\\Java\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\Users\\walte\\.virtualenvs\\io-avstats-zZIfNcpY\\Scripts;C:\\Program Files (x86)\\VMware\\VMware Player\\bin\\;C:\\Program Files (x86)\\infogridpacific\\AZARDI;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\Calibre2\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git LFS;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\Program Files\\Pandoc\\;C:\\Program Files\\TortoiseGit\\bin;C:\\Software\\GnuWin32\\bin;C:\\WINDOWS;C:\\WINDOWS\\system32;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Users\\walte\\.nimble\\bin;C:\\Windows;C:\\Windows\\system32;C:\\Windows\\System32\\OpenSSH\\;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Software\\.cargo\\bin;%GRADLE_HOME%\\bin;%HOME_ELIXIR%\\bin;%HOME_ERLANG%\\bin;%HOME_GO%\\bin;C:\\Program Files\\heroku\\bin;%HOME_JULIA%\\bin;%HOME_NIM%\\bin;C:\\Software\\PostgreSQL\\15\\bin;C:\\Software\\poppler-0.68.0\\bin;C:\\Software\\Python\\Python310;C:\\Software\\Python\\Python310\\Scripts;C:\\Software\\rebar3;%HOME_RUST%\\bin;C:\\Software\\Tesseract-OCR;C:\\Software\\jdk-18.0.2\\bin;%KOTLIN_HOME%\\bin;C:\\Software\\oracle\\instantclient_21_6;C:\\Software\\Gpg4win\\..\\GnuPG\\bin;C:\\Program Files\\LLVM\\bin;C:\\Program Files\\nodejs\\;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Program Files\\Amazon\\AWSCLIV2\\;C:\\Program Files\\Git\\cmd;C:\\Program Files\\PuTTY\\;C:\\Software\\texlive\\2022\\bin\\win32;C:\\Users\\walte\\.cargo\\bin;C:\\Users\\walte\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Software\\Microsoft VS Code\\bin;C:\\Users\\walte\\go\\bin;c:\\users\\walte\\.local\\bin;C:\\Users\\walte\\AppData\\Local\\JetBrains\\Toolbox\\scripts;C:\\Users\\walte\\AppData\\Roaming\\npm;C:\\Software\\MiKTeX\\miktex\\bin\\x64\\;. 1671278827279: javaVersion: 11.0.13 1671278827279: 1671278827279: Verifying RazorSQL resources location. 1671278827279: 1671278827280: testing base url: / = file:/C:/Program%20Files/RazorSQL/ 1671278827280: 1671278827280: testString1: file:/C:/Program%20Files/RazorSQL/razorsql.jar 1671278827280: testString2: file:/C:/Program%20Files/RazorSQL/data/base.ssql 1671278827280: testFile1: C:\\Program Files\\RazorSQL\\razorsql.jar 1671278827280: testFile2: C:\\Program Files\\RazorSQL\\data\\base.ssql 1671278827281: both test file exists. Base URL found. 1671278827281: resource directory: file:/C:/Program%20Files/RazorSQL/ 1671278827281: user home: C:\\Users\\walte 1671278827282: user profile: C:\\Users\\walte 1671278827282: app data: C:\\Users\\walte\\AppData\\Roaming 1671278827282: checking write access to: C:\\Users\\walte\\AppData\\Roaming 1671278827283: write dir: C:\\Users\\walte\\AppData\\Roaming\\RichardsonSoftware 1671278827283: can write to C:\\Users\\walte\\AppData\\Roaming 1671278827283: user.home: C:\\Users\\walte\\AppData\\Roaming 1671278827283: RazorSQL Scratch Directory: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL 1671278827283: RazorSQL Scratch Directory exists 1671278827283: checking for sub directories 1671278827283: razorsql launch log: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\razorsql_launch_log.txt 1671278827284: launch log file = C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\razorsql_launch_log.txt 1671278827284: Checking for graphics properties 1671278827284: graphics properties file: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\data\\graphics_properties.txt 1671278827284: gOverride: null 1671278827285: not disabling advanced graphics 1671278827285: path0: file:/C:/Program%20Files/RazorSQL/data/run.ssql 1671278827285: path1: file:/C:/Program%20Files/RazorSQL/razorsql.jar 1671278827285: runArgs: true 1671278827285: showScreen: false 1671278827285: args[0]: -backup 1671278827286: args[1]: IO-AVSTATS 1671278827286: args[2]: null 1671278827286: args[3]: null 1671278827286: args[4]: ; 1671278827286: args[5]: null 1671278827286: args[6]: D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats\\data\\download\\up15DEC.sql 1671278827286: args[7]: NO 1671278827286: args[8]: tables 1671278827286: args[9]: YES 1671278827286: args[10]: null 1671278827286: args[11]: NO 1671278827286: args[12]: NO 1671278827286: Command: -backup 1671278827286: Running -backup h: name = C:\\Program Files\\RazorSQL\\data\\run.ssql h: name = C:\\Program Files\\RazorSQL\\razorsql.jar 1671278827293: Attempting to load . . . command found uOne: file:/C:/Program%20Files/RazorSQL/ h: name = C:\\Program Files\\RazorSQL\\data\\run.ssql 1671278827303reading file . . .C:\\Program Files\\RazorSQL\\data\\base.ssql 1671278827327done reading . . . 1671278827336done converting 1671278827336starting lib load. 1671278827347lib load complete. In command line processor Max Memory: 30688.0 Current Total Memory: 2048.0 Free Memory: 1957.998046875 1671278827417: r init 1671278827417: d init 1671278827417: get default file encoding 1671278827418: end d init custom home directory: null Checking for user data from old versions 1671278827419: user home: C:\\Users\\walte 1671278827419: user profile: C:\\Users\\walte 1671278827419: app data: C:\\Users\\walte\\AppData\\Roaming 1671278827419: checking write access to: C:\\Users\\walte\\AppData\\Roaming 1671278827419: write dir: C:\\Users\\walte\\AppData\\Roaming\\RichardsonSoftware 1671278827419: can write to C:\\Users\\walte\\AppData\\Roaming newHome: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL dataHome: C:\\Users\\walte\\AppData\\Roaming/RazorSQL/data/ preferences file: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\data\\preferences.txt Profiles Exist 1671278827429: loading icons 1671278827591: done r init Getting connection data from: IO-AVSTATS 1671278827593: r init 1671278827593: d init 1671278827593: get default file encoding 1671278827593: end d init custom home directory: null Checking for user data from old versions newHome: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL dataHome: C:\\Users\\walte\\AppData\\Roaming/RazorSQL/data/ preferences file: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\data\\preferences.txt Profiles Exist 1671278827594: loading icons 1671278827603: done r init getting connection . . . Not using SSH Tunnel driver: sun.jdbc.odbc.JdbcOdbcDriver classLocation: C:\\Program Files\\RazorSQL\\drivers\\common\\odbc.jar loadedCommonJars: false commonURL: file:/C:/Program%20Files/RazorSQL/drivers/common/ commonDir: C:\\Program Files\\RazorSQL\\drivers\\common commonFiles[0]: file:/C:/Program%20Files/RazorSQL/drivers/common/activation.jar commonFiles[1]: file:/C:/Program%20Files/RazorSQL/drivers/common/common.jar commonFiles[2]: file:/C:/Program%20Files/RazorSQL/drivers/common/jaxb-api.jar commonFiles[3]: file:/C:/Program%20Files/RazorSQL/drivers/common/jaxb-core.jar commonFiles[4]: file:/C:/Program%20Files/RazorSQL/drivers/common/jaxb-impl.jar commonFiles[6]: file:/C:/Program%20Files/RazorSQL/drivers/common/odbc.jar connection type: ODBC final classLocation: C:\\Program Files\\RazorSQL\\drivers\\common\\odbc.jar classLocation file: C:\\Program Files\\RazorSQL\\drivers\\common\\odbc.jar building sql manager Loading driver Done loading driver Getting connection with no login info JdbcOdbcDriver: in initialize OdbcApi == null Creating new OdbcApi, nativePrefix: JdbcOdbc constructor Attempting to load JdbcOdbc library Got OdbcApi: sun.jdbc.odbc.JdbcOdbc@2d127a61 Getting charset JdbcOdbcDriver.OdbcApi.charSet: Cp1252 Connection obtained obtained connection database major version = 2 database product name: ACCESS multiValueInsert: false includeIdentifyColumns: false Calling backup . . . Retrieving Tables . . . Generating Table DDL . . . 1 of 20 number of columns 93 column map size: 93 foundNull: false 2 of 20 number of columns 2 column map size: 2 foundNull: false 3 of 20 number of columns 11 column map size: 11 foundNull: false 4 of 20 number of columns 2 column map size: 2 foundNull: false 5 of 20 number of columns 6 column map size: 6 foundNull: false 6 of 20 number of columns 5 column map size: 5 foundNull: false 7 of 20 number of columns 7 column map size: 7 foundNull: false 8 of 20 number of columns 13 column map size: 13 foundNull: false 9 of 20 number of columns 17 column map size: 17 foundNull: false 10 of 20 number of columns 73 column map size: 73 foundNull: false 11 of 20 number of columns 10 column map size: 10 foundNull: false 12 of 20 number of columns 13 column map size: 13 foundNull: false 13 of 20 number of columns 33 column map size: 33 foundNull: false 14 of 20 number of columns 8 column map size: 8 foundNull: false 15 of 20 number of columns 7 column map size: 7 foundNull: false 16 of 20 number of columns 8 column map size: 8 foundNull: false 17 of 20 number of columns 5 column map size: 5 foundNull: false 18 of 20 number of columns 8 column map size: 8 foundNull: false 19 of 20 number of columns 11 column map size: 11 foundNull: false 20 of 20 number of columns 3 column map size: 3 foundNull: false Generating Alter Table DDL . . . 1 of 20 2 of 20 3 of 20 4 of 20 5 of 20 6 of 20 7 of 20 8 of 20 9 of 20 10 of 20 11 of 20 12 of 20 13 of 20 14 of 20 15 of 20 16 of 20 17 of 20 18 of 20 19 of 20 20 of 20 backup finished closing connection . . . connection closed. Shutting down logging streams Done shutting down logging streams Exiting . . . Progress update 2022-12-17 13:07:08.208772 : INFO.00.011 The DDL script for the MS Access database 'up15DEC.mdb' was created successfully. Progress update 2022-12-17 13:07:08.216271 : INFO.00.012 The DDL script for the MS Access database 'up15DEC.mdb' is identical to the reference script. Progress update 2022-12-17 13:07:08.216271 : -------------------------------------------------------------------------------. Progress update 2022-12-17 13:07:08.216271 : 4,294,822,800 ns - Total time launcher. Progress update 2022-12-17 13:07:08.216271 : INFO.00.006 End Launcher. Progress update 2022-12-17 13:07:08.216772 : ===============================================================================. ----------------------------------------------------------------------- The current time is: 13:07:08.37 Enter the new time: ----------------------------------------------------------------------- End run_io_avstats =======================================================================","title":"2.1 d_n_a - Download a NTSB MS Access database file"},{"location":"how_to_add_ntsb_accident_files.html#22-l_n_a-load-ntsb-ms-access-database-data-into-postgresql","text":"Relevant cofiguration parameters : download_work_dir = \"data/download\" Example protocol : ...\\io-avstats>run_io_avstats ========================================================= r_s_a - Run a Streamlit application --------------------------------------------------------- d_n_a - Download a NTSB MS Access database file l_n_a - Load NTSB MS Access database data into PostgreSQL c_l_l - Correct decimal US latitudes and longitudes v_n_d - Verify selected NTSB data r_d_s - Refresh the PostgreSQL database schema --------------------------------------------------------- c_p_d - Cleansing PostgreSQL data d_s_f - Download basic simplemaps files l_c_d - Load data from a correction file into PostgreSQL l_c_s - Load country and state data into PostgreSQL l_s_d - Load simplemaps data into PostgreSQL l_z_d - Load ZIP Code Database data into PostgreSQL --------------------------------------------------------- c_d_s - Create the PostgreSQL database schema d_d_f - Delete the PostgreSQL database files d_d_s - Drop the PostgreSQL database schema s_d_c - Set up the PostgreSQL database container u_d_s - Update the PostgreSQL database schema --------------------------------------------------------- version - Show the IO-AVSTATS-DB version --------------------------------------------------------- Enter the desired task [default: r_s_a] l_n_a ========================================================= IO-AVSTATS.mdb up01DEC.mdb up08DEC.mdb up15DEC.mdb up22OCT.mdb --------------------------------------------------------- Enter the stem name of the desired MS Access database file up15DEC Script run_io_avstats is now running ======================================================================= Start run_io_avstats ----------------------------------------------------------------------- IO-AVSTATS - Aviation Accident Statistics. ----------------------------------------------------------------------- PYTHONPATH : ----------------------------------------------------------------------- TASK : l_n_a CORRECTION : MSACCESS : up15DEC ----------------------------------------------------------------------- The current time is: 3:01:56.55 Enter the new time: ======================================================================= Progress update 2022-12-18 03:01:59.422228 : ===============================================================================. Progress update 2022-12-18 03:01:59.422228 : INFO.00.004 Start Launcher. Progress update 2022-12-18 03:01:59.424228 : INFO.00.001 The logger is configured and ready. Progress update 2022-12-18 03:01:59.432728 : INFO.00.008 Arguments task='l_n_a' msaccess='up15DEC'. Progress update 2022-12-18 03:01:59.433228 : -------------------------------------------------------------------------------. Progress update 2022-12-18 03:01:59.433228 : INFO.00.049 Loading NTSB MS Access database data from file 'up15DEC'. Progress update 2022-12-18 03:01:59.433228 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:01:59.433228 : INFO.00.054 ODBC driver='DRIVER={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats\\data\\download\\up15DEC.mdb;'. Progress update 2022-12-18 03:02:00.468009 : INFO.00.021 The following database table is not processed: 'MSysAccessObjects'. Progress update 2022-12-18 03:02:00.468009 : INFO.00.021 The following database table is not processed: 'MSysACEs'. Progress update 2022-12-18 03:02:00.468009 : INFO.00.021 The following database table is not processed: 'MSysIMEXColumns'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysIMEXSpecs'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysModules2'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysNavPaneGroupCategories'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysNavPaneGroups'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysNavPaneGroupToObjects'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysNavPaneObjectIDs'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysObjects'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysQueries'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'MSysRelationships'. Progress update 2022-12-18 03:02:00.468510 : INFO.00.021 The following database table is not processed: 'Country'. Progress update 2022-12-18 03:02:00.469012 : INFO.00.021 The following database table is not processed: 'ct_iaids'. Progress update 2022-12-18 03:02:00.469012 : INFO.00.021 The following database table is not processed: 'ct_seqevt'. Progress update 2022-12-18 03:02:00.469012 : INFO.00.021 The following database table is not processed: 'eADMSPUB_DataDictionary'. Progress update 2022-12-18 03:02:00.469012 : INFO.00.021 The following database table is not processed: 'states'. Progress update 2022-12-18 03:02:00.469012 : Progress update 2022-12-18 03:02:00.469012 : Database table : events <-----------------------------------. Progress update 2022-12-18 03:02:02.829483 : Number rows selected : 77. Progress update 2022-12-18 03:02:02.829483 : Number rows inserted : 15. Progress update 2022-12-18 03:02:02.829997 : Number rows updated : 62. Progress update 2022-12-18 03:02:02.829997 : Progress update 2022-12-18 03:02:02.829997 : Database table : aircraft <-----------------------------------. Progress update 2022-12-18 03:02:07.828401 : Number rows selected : 77. Progress update 2022-12-18 03:02:07.828401 : Number rows inserted : 15. Progress update 2022-12-18 03:02:07.828903 : Number rows updated : 62. Progress update 2022-12-18 03:02:07.828903 : Progress update 2022-12-18 03:02:07.828903 : Database table : dt_events <-----------------------------------. Progress update 2022-12-18 03:02:18.425030 : Number rows selected : 385. Progress update 2022-12-18 03:02:18.425030 : Number rows inserted : 159. Progress update 2022-12-18 03:02:18.425523 : Number rows updated : 226. Progress update 2022-12-18 03:02:18.425523 : Progress update 2022-12-18 03:02:18.425523 : Database table : ntsb_admin <-----------------------------------. Progress update 2022-12-18 03:02:20.508241 : Number rows selected : 77. Progress update 2022-12-18 03:02:20.508241 : Number rows inserted : 15. Progress update 2022-12-18 03:02:20.508241 : Number rows updated : 62. Progress update 2022-12-18 03:02:20.508241 : Progress update 2022-12-18 03:02:20.508241 : Database table : dt_aircraft <-----------------------------------. Progress update 2022-12-18 03:02:37.020238 : Number rows selected : 683. Progress update 2022-12-18 03:02:37.020238 : Number rows inserted : 385. Progress update 2022-12-18 03:02:37.020738 : Number rows updated : 298. Progress update 2022-12-18 03:02:37.020738 : Progress update 2022-12-18 03:02:37.020738 : Database table : engines <-----------------------------------. Progress update 2022-12-18 03:02:38.360943 : Number rows selected : 47. Progress update 2022-12-18 03:02:38.361447 : Number rows inserted : 36. Progress update 2022-12-18 03:02:38.361447 : Number rows updated : 11. Progress update 2022-12-18 03:02:38.361447 : Progress update 2022-12-18 03:02:38.361447 : Database table : events_sequence <-----------------------------------. Progress update 2022-12-18 03:02:41.193854 : Number rows selected : 108. Progress update 2022-12-18 03:02:41.194353 : Number rows inserted : 62. Progress update 2022-12-18 03:02:41.194353 : Number rows updated : 46. Progress update 2022-12-18 03:02:41.194353 : Progress update 2022-12-18 03:02:41.194353 : Database table : findings <-----------------------------------. Progress update 2022-12-18 03:02:43.593633 : Number rows selected : 94. Progress update 2022-12-18 03:02:43.593633 : Number rows inserted : 94. Progress update 2022-12-18 03:02:43.593633 : Progress update 2022-12-18 03:02:43.594133 : Database table : flight_crew <-----------------------------------. Progress update 2022-12-18 03:02:45.726279 : Number rows selected : 74. Progress update 2022-12-18 03:02:45.726279 : Number rows inserted : 57. Progress update 2022-12-18 03:02:45.726279 : Number rows updated : 17. Progress update 2022-12-18 03:02:45.726279 : Progress update 2022-12-18 03:02:45.726781 : Database table : injury <-----------------------------------. Progress update 2022-12-18 03:02:53.998519 : Number rows selected : 305. Progress update 2022-12-18 03:02:53.998519 : Number rows inserted : 97. Progress update 2022-12-18 03:02:53.998519 : Number rows updated : 208. Progress update 2022-12-18 03:02:53.999019 : Progress update 2022-12-18 03:02:53.999019 : Database table : narratives <-----------------------------------. Progress update 2022-12-18 03:02:55.873454 : Number rows selected : 60. Progress update 2022-12-18 03:02:55.873454 : Number rows inserted : 39. Progress update 2022-12-18 03:02:55.873454 : Number rows updated : 21. Progress update 2022-12-18 03:02:55.873454 : Progress update 2022-12-18 03:02:55.873454 : Database table : occurrences <-----------------------------------. Progress update 2022-12-18 03:02:55.885477 : Number rows selected : 0. Progress update 2022-12-18 03:02:55.885477 : Progress update 2022-12-18 03:02:55.885477 : Database table : dt_flight_crew <-----------------------------------. Progress update 2022-12-18 03:03:04.629342 : Number rows selected : 338. Progress update 2022-12-18 03:03:04.629342 : Number rows inserted : 280. Progress update 2022-12-18 03:03:04.629844 : Number rows updated : 58. Progress update 2022-12-18 03:03:04.629844 : Progress update 2022-12-18 03:03:04.629844 : Database table : flight_time <-----------------------------------. Progress update 2022-12-18 03:03:24.973637 : Number rows selected : 774. Progress update 2022-12-18 03:03:24.973637 : Number rows inserted : 676. Progress update 2022-12-18 03:03:24.973637 : Number rows updated : 98. Progress update 2022-12-18 03:03:24.973637 : Progress update 2022-12-18 03:03:24.974133 : Database table : seq_of_events <-----------------------------------. Progress update 2022-12-18 03:03:24.994181 : Number rows selected : 0. Progress update 2022-12-18 03:03:25.075929 : INFO.00.065 Cleansing PostgreSQL data. Progress update 2022-12-18 03:03:25.075929 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:03:25.142428 : INFO.00.066 Cleansing table 'events' column 'ev_city'. Progress update 2022-12-18 03:03:28.571816 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:03:28.572316 : INFO.00.066 Cleansing table 'events' column 'ev_site_zipcode'. Progress update 2022-12-18 03:03:31.104986 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:03:31.104986 : INFO.00.066 Cleansing table 'events' column 'latitude'. Progress update 2022-12-18 03:03:33.629172 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:03:33.629172 : INFO.00.066 Cleansing table 'events' column 'longitude'. Progress update 2022-12-18 03:03:36.180510 : -------------------------------------------------------------------------------. Progress update 2022-12-18 03:03:36.180510 : 96,908,281,000 ns - Total time launcher. Progress update 2022-12-18 03:03:36.180510 : INFO.00.006 End Launcher. Progress update 2022-12-18 03:03:36.180510 : ===============================================================================. ----------------------------------------------------------------------- The current time is: 3:03:36.36 Enter the new time: ----------------------------------------------------------------------- End run_io_avstats =======================================================================","title":"2.2 l_n_a - Load NTSB MS Access database data into PostgreSQL"},{"location":"how_to_add_ntsb_accident_files.html#23-d_s_f-download-basic-simplemaps-files","text":"Relevant cofiguration parameters : download_chunk_size = 524288 download_timeout = 10 download_file_simplemaps_us_cities_xlsx = \"uscities.xlsx\" download_file_simplemaps_us_cities_zip = \"simplemaps_uscities_basicv1.75.zip\" download_file_simplemaps_us_zips_xlsx = \"uszips.xlsx\" download_file_simplemaps_us_zips_zip = \"simplemaps_uszips_basicv1.81.zip\" download_work_dir = \"data/download\" Example protocol : ...\\io-avstats>run_io_avstats ========================================================= r_s_a - Run a Streamlit application --------------------------------------------------------- d_n_a - Download a NTSB MS Access database file l_n_a - Load NTSB MS Access database data into PostgreSQL c_l_l - Correct decimal US latitudes and longitudes v_n_d - Verify selected NTSB data r_d_s - Refresh the PostgreSQL database schema --------------------------------------------------------- c_p_d - Cleansing PostgreSQL data d_s_f - Download basic simplemaps files l_c_d - Load data from a correction file into PostgreSQL l_c_s - Load country and state data into PostgreSQL l_s_d - Load simplemaps data into PostgreSQL l_z_d - Load ZIP Code Database data into PostgreSQL --------------------------------------------------------- c_d_s - Create the PostgreSQL database schema d_d_f - Delete the PostgreSQL database files d_d_s - Drop the PostgreSQL database schema s_d_c - Set up the PostgreSQL database container u_d_s - Update the PostgreSQL database schema --------------------------------------------------------- version - Show the IO-AVSTATS-DB version --------------------------------------------------------- Enter the desired task [default: r_s_a] d_s_f Script run_io_avstats is now running ======================================================================= Start run_io_avstats ----------------------------------------------------------------------- IO-AVSTATS - Aviation Accident Statistics. ----------------------------------------------------------------------- PYTHONPATH : ----------------------------------------------------------------------- TASK : d_s_f CORRECTION : MSACCESS : ----------------------------------------------------------------------- The current time is: 3:10:34.78 Enter the new time: ======================================================================= Progress update 2022-12-18 03:10:36.547946 : ===============================================================================. Progress update 2022-12-18 03:10:36.547946 : INFO.00.004 Start Launcher. Progress update 2022-12-18 03:10:36.549946 : INFO.00.001 The logger is configured and ready. Progress update 2022-12-18 03:10:36.558445 : INFO.00.005 Argument task='d_s_f'. Progress update 2022-12-18 03:10:36.558945 : -------------------------------------------------------------------------------. Progress update 2022-12-18 03:10:36.558945 : INFO.00.048 Downloading basic simplemaps files. Progress update 2022-12-18 03:10:36.558945 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:10:36.743463 : INFO.00.030 The connection to the US city file 'simplemaps_uscities_basicv1.75.zip' on the simplemaps download page was successfully established. Progress update 2022-12-18 03:10:36.919741 : INFO.00.023 From the file 'simplemaps_uscities_basicv1.75.zip' 8 chunks were downloaded. Progress update 2022-12-18 03:10:36.951741 : INFO.00.024 The file 'simplemaps_uscities_basicv1.75.zip' was successfully unpacked. Progress update 2022-12-18 03:10:37.131672 : INFO.00.022 The connection to the US zip code file 'simplemaps_uszips_basicv1.81.zip' on the simplemaps download page was successfully established. Progress update 2022-12-18 03:10:37.226532 : INFO.00.023 From the file 'simplemaps_uszips_basicv1.81.zip' 8 chunks were downloaded. Progress update 2022-12-18 03:10:37.262050 : INFO.00.024 The file 'simplemaps_uszips_basicv1.81.zip' was successfully unpacked. Progress update 2022-12-18 03:10:37.262549 : -------------------------------------------------------------------------------. Progress update 2022-12-18 03:10:37.262549 : 870,102,500 ns - Total time launcher. Progress update 2022-12-18 03:10:37.262549 : INFO.00.006 End Launcher. Progress update 2022-12-18 03:10:37.262549 : ===============================================================================. ----------------------------------------------------------------------- The current time is: 3:10:37.41 Enter the new time: ----------------------------------------------------------------------- End run_io_avstats ======================================================================= The downloaded files uscities.csv and uszips.xlsx must be checked with the reference files in the file directory data/reference for a match. If there is no mismatch, then the next step can be skipped.","title":"2.3 d_s_f - Download basic simplemaps files"},{"location":"how_to_add_ntsb_accident_files.html#24-l_s_d-load-simplemaps-data-into-postgresql","text":"Only necessary if the file downloaded in the previous step contains changes. TODO Relevant cofiguration parameters : download_work_dir = \"data/download\" Example protocol : TODO","title":"2.4 l_s_d - Load simplemaps data into PostgreSQL"},{"location":"how_to_add_ntsb_accident_files.html#25-download-the-zip-code-database-file","text":"The Personal Free version of the ZIP Code Database file must be downloaded manually from the https://www.unitedstateszipcodes.org/zip-code-database/ website to the file directory according to the download_work_dir configuration parameter. The two formats Excel Format (data only) and CSV Format must be downloaded one after the other. The downloaded file zip_code_database.csv must be checked with the reference files in the file directory data/reference for a match. If there is no mismatch, then the next step can be skipped. Relevant cofiguration parameters : download_work_dir = \"data/download\"","title":"2.5 Download the ZIP Code Database file"},{"location":"how_to_add_ntsb_accident_files.html#26-l_z_d-load-zip-code-database-data-into-postgresql","text":"Only necessary if the file downloaded in the previous step contains changes. TODO Relevant cofiguration parameters : download_work_dir = \"data/download\" Example protocol : TODO","title":"2.6 l_z_d - Load ZIP Code Database data into PostgreSQL"},{"location":"how_to_add_ntsb_accident_files.html#27-l_c_d-load-data-from-a-correction-file-into-postgresql","text":"This step only needs to be performed if modified or new correction files are available. Relevant cofiguration parameters : correction_work_dir = \"data/correction\" Example protocol : TODO","title":"2.7 l_c_d - Load data from a correction file into PostgreSQL"},{"location":"how_to_add_ntsb_accident_files.html#28-c_l_l-correct-decimal-us-latitudes-and-longitudes","text":"Example protocol : ...\\io-avstats>run_io_avstats ========================================================= r_s_a - Run a Streamlit application --------------------------------------------------------- d_n_a - Download a NTSB MS Access database file l_n_a - Load NTSB MS Access database data into PostgreSQL c_l_l - Correct decimal US latitudes and longitudes v_n_d - Verify selected NTSB data r_d_s - Refresh the PostgreSQL database schema --------------------------------------------------------- c_p_d - Cleansing PostgreSQL data d_s_f - Download basic simplemaps files l_c_d - Load data from a correction file into PostgreSQL l_c_s - Load country and state data into PostgreSQL l_s_d - Load simplemaps data into PostgreSQL l_z_d - Load ZIP Code Database data into PostgreSQL --------------------------------------------------------- c_d_s - Create the PostgreSQL database schema d_d_f - Delete the PostgreSQL database files d_d_s - Drop the PostgreSQL database schema s_d_c - Set up the PostgreSQL database container u_d_s - Update the PostgreSQL database schema --------------------------------------------------------- version - Show the IO-AVSTATS-DB version --------------------------------------------------------- Enter the desired task [default: r_s_a] c_l_l Script run_io_avstats is now running ======================================================================= Start run_io_avstats ----------------------------------------------------------------------- IO-AVSTATS - Aviation Accident Statistics. ----------------------------------------------------------------------- PYTHONPATH : ----------------------------------------------------------------------- TASK : c_l_l CORRECTION : MSACCESS : ----------------------------------------------------------------------- The current time is: 3:48:26.10 Enter the new time: ======================================================================= Progress update 2022-12-18 03:48:27.970732 : ===============================================================================. Progress update 2022-12-18 03:48:27.970732 : INFO.00.004 Start Launcher. Progress update 2022-12-18 03:48:27.972731 : INFO.00.001 The logger is configured and ready. Progress update 2022-12-18 03:48:27.981231 : INFO.00.005 Argument task='c_l_l'. Progress update 2022-12-18 03:48:27.981231 : -------------------------------------------------------------------------------. Progress update 2022-12-18 03:48:27.981231 : INFO.00.040 Correct decimal US latitudes and longitudes. Progress update 2022-12-18 03:48:27.981231 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:48:31.040942 : INFO.00.063 Processed data source 'events'. Progress update 2022-12-18 03:48:31.040942 : Number cols deleted : 60561. Progress update 2022-12-18 03:48:31.040942 : -------------------------------------------------------------------------------- Progress update 2022-12-18 03:50:40.621017 : Number of rows so far read : 5000. Progress update 2022-12-18 03:52:41.946249 : Number of rows so far read : 10000. Progress update 2022-12-18 03:54:48.519956 : Number of rows so far read : 15000. Progress update 2022-12-18 03:56:53.584921 : Number of rows so far read : 20000. Progress update 2022-12-18 03:59:01.258705 : Number of rows so far read : 25000. Progress update 2022-12-18 04:01:09.806450 : Number of rows so far read : 30000. Progress update 2022-12-18 04:03:12.247750 : Number of rows so far read : 35000. Progress update 2022-12-18 04:05:16.963868 : Number of rows so far read : 40000. Progress update 2022-12-18 04:07:21.854231 : Number of rows so far read : 45000. Progress update 2022-12-18 04:09:33.068583 : Number of rows so far read : 50000. Progress update 2022-12-18 04:11:47.889551 : Number of rows so far read : 55000. Progress update 2022-12-18 04:14:07.417816 : Number of rows so far read : 60000. Progress update 2022-12-18 04:16:14.266251 : Number of rows so far read : 65000. Progress update 2022-12-18 04:18:20.373523 : Number of rows so far read : 70000. Progress update 2022-12-18 04:20:29.429655 : Number of rows so far read : 75000. Progress update 2022-12-18 04:22:47.616519 : Number of rows so far read : 80000. Progress update 2022-12-18 04:24:49.899572 : Number of rows so far read : 85000. Progress update 2022-12-18 04:26:53.415653 : Number of rows so far read : 90000. Progress update 2022-12-18 04:29:00.088868 : Number of rows so far read : 95000. Progress update 2022-12-18 04:31:06.729171 : Number of rows so far read : 100000. Progress update 2022-12-18 04:33:26.507860 : Number of rows so far read : 105000. Progress update 2022-12-18 04:35:45.652623 : Number of rows so far read : 110000. Progress update 2022-12-18 04:37:52.009456 : Number of rows so far read : 115000. Progress update 2022-12-18 04:39:51.601865 : Number of rows so far read : 120000. Progress update 2022-12-18 04:42:02.349044 : Number of rows so far read : 125000. Progress update 2022-12-18 04:44:07.523367 : Number of rows so far read : 130000. Progress update 2022-12-18 04:46:14.330089 : Number of rows so far read : 135000. Progress update 2022-12-18 04:46:16.882015 : Number rows selected : 135089. Progress update 2022-12-18 04:46:16.882015 : Number rows updated : 135089. Progress update 2022-12-18 04:46:16.882015 : -------------------------------------------------------------------------------. Progress update 2022-12-18 04:46:16.882015 : 3,469,058,783,600 ns - Total time launcher. Progress update 2022-12-18 04:46:16.882516 : INFO.00.006 End Launcher. Progress update 2022-12-18 04:46:16.882516 : ===============================================================================. ----------------------------------------------------------------------- The current time is: 4:46:17.03 Enter the new time: ----------------------------------------------------------------------- End run_io_avstats =======================================================================","title":"2.8 c_l_l - Correct decimal US latitudes and longitudes"},{"location":"how_to_add_ntsb_accident_files.html#29-v_n_d-verify-selected-ntsb-data","text":"Relevant cofiguration parameters : max_deviation_latitude = 0.01 max_deviation_longitude = 0.01 Example protocol : ...\\io-avstats>run_io_avstats ========================================================= r_s_a - Run a Streamlit application --------------------------------------------------------- d_n_a - Download a NTSB MS Access database file l_n_a - Load NTSB MS Access database data into PostgreSQL c_l_l - Correct decimal US latitudes and longitudes v_n_d - Verify selected NTSB data r_d_s - Refresh the PostgreSQL database schema --------------------------------------------------------- c_p_d - Cleansing PostgreSQL data d_s_f - Download basic simplemaps files l_c_d - Load data from a correction file into PostgreSQL l_c_s - Load country and state data into PostgreSQL l_s_d - Load simplemaps data into PostgreSQL l_z_d - Load ZIP Code Database data into PostgreSQL --------------------------------------------------------- c_d_s - Create the PostgreSQL database schema d_d_f - Delete the PostgreSQL database files d_d_s - Drop the PostgreSQL database schema s_d_c - Set up the PostgreSQL database container u_d_s - Update the PostgreSQL database schema --------------------------------------------------------- version - Show the IO-AVSTATS-DB version --------------------------------------------------------- Enter the desired task [default: r_s_a] v_n_d Script run_io_avstats is now running ======================================================================= Start run_io_avstats ----------------------------------------------------------------------- IO-AVSTATS - Aviation Accident Statistics. ----------------------------------------------------------------------- PYTHONPATH : ----------------------------------------------------------------------- TASK : v_n_d CORRECTION : MSACCESS : ----------------------------------------------------------------------- The current time is: 7:01:26.47 Enter the new time: ======================================================================= Progress update 2022-12-18 07:01:28.302801 : ===============================================================================. Progress update 2022-12-18 07:01:28.303299 : INFO.00.004 Start Launcher. Progress update 2022-12-18 07:01:28.305302 : INFO.00.001 The logger is configured and ready. Progress update 2022-12-18 07:01:28.313799 : INFO.00.005 Argument task='v_n_d'. Progress update 2022-12-18 07:01:28.313799 : -------------------------------------------------------------------------------. Progress update 2022-12-18 07:01:28.313799 : INFO.00.043 Verify selected NTSB data. Progress update 2022-12-18 07:01:28.313799 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:01:29.791861 : INFO.00.063 Processed data source 'events'. Progress update 2022-12-18 07:01:29.791861 : Number cols deleted : 27378. Progress update 2022-12-18 07:01:29.791861 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:01:29.847379 : INFO.00.064 Verification of table 'events' column(s) 'latitude & longitude'. Progress update 2022-12-18 07:01:29.847879 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:01:30.779339 : Number of rows so far read : 5000. Progress update 2022-12-18 07:01:35.923824 : Number of rows so far read : 10000. Progress update 2022-12-18 07:02:21.619041 : Number of rows so far read : 15000. Progress update 2022-12-18 07:03:23.893470 : Number of rows so far read : 20000. Progress update 2022-12-18 07:04:30.130890 : Number of rows so far read : 25000. Progress update 2022-12-18 07:05:33.466294 : Number of rows so far read : 30000. Progress update 2022-12-18 07:06:30.937809 : Number rows errors : 12374. Progress update 2022-12-18 07:06:30.937809 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:06:30.938308 : INFO.00.064 Verification of table 'events' column(s) 'ev_city'. Progress update 2022-12-18 07:06:32.108776 : Number rows errors : 6041. Progress update 2022-12-18 07:06:32.108776 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:06:32.108776 : INFO.00.064 Verification of table 'events' column(s) 'ev_city & ev_site_zipcode'. Progress update 2022-12-18 07:06:33.699993 : Number rows errors : 16516. Progress update 2022-12-18 07:06:33.700494 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:06:33.700494 : INFO.00.064 Verification of table 'events' column(s) 'ev_state'. Progress update 2022-12-18 07:06:34.416462 : Number rows errors : 291. Progress update 2022-12-18 07:06:34.416462 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:06:34.416462 : INFO.00.064 Verification of table 'events' column(s) 'ev_site_zipcode'. Progress update 2022-12-18 07:06:34.866764 : Number rows errors : 6034. Progress update 2022-12-18 07:06:34.866764 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:06:34.867763 : Number rows selected : 34324. Progress update 2022-12-18 07:06:34.867763 : Number rows updated : 41256. Progress update 2022-12-18 07:06:34.867763 : Number rows errors : 41256. Progress update 2022-12-18 07:06:34.868264 : -------------------------------------------------------------------------------. Progress update 2022-12-18 07:06:34.868264 : 306,720,465,000 ns - Total time launcher. Progress update 2022-12-18 07:06:34.868264 : INFO.00.006 End Launcher. Progress update 2022-12-18 07:06:34.868264 : ===============================================================================. ----------------------------------------------------------------------- The current time is: 7:06:35.04 Enter the new time: ----------------------------------------------------------------------- End run_io_avstats =======================================================================","title":"2.9 v_n_d - Verify selected NTSB data"},{"location":"how_to_add_ntsb_accident_files.html#210-r_d_s-refresh-the-postgresql-database-schema","text":"Example protocol : ...\\io-avstats>run_io_avstats ========================================================= r_s_a - Run a Streamlit application --------------------------------------------------------- d_n_a - Download a NTSB MS Access database file l_n_a - Load NTSB MS Access database data into PostgreSQL c_l_l - Correct decimal US latitudes and longitudes v_n_d - Verify selected NTSB data r_d_s - Refresh the PostgreSQL database schema --------------------------------------------------------- c_p_d - Cleansing PostgreSQL data d_s_f - Download basic simplemaps files l_c_d - Load data from a correction file into PostgreSQL l_c_s - Load country and state data into PostgreSQL l_s_d - Load simplemaps data into PostgreSQL l_z_d - Load ZIP Code Database data into PostgreSQL --------------------------------------------------------- c_d_s - Create the PostgreSQL database schema d_d_f - Delete the PostgreSQL database files d_d_s - Drop the PostgreSQL database schema s_d_c - Set up the PostgreSQL database container u_d_s - Update the PostgreSQL database schema --------------------------------------------------------- version - Show the IO-AVSTATS-DB version --------------------------------------------------------- Enter the desired task [default: r_s_a] r_d_s Script run_io_avstats is now running ======================================================================= Start run_io_avstats ----------------------------------------------------------------------- IO-AVSTATS - Aviation Accident Statistics. ----------------------------------------------------------------------- PYTHONPATH : ----------------------------------------------------------------------- TASK : r_d_s CORRECTION : MSACCESS : ----------------------------------------------------------------------- The current time is: 7:51:13.14 Enter the new time: ======================================================================= Progress update 2022-12-18 07:51:14.915905 : ===============================================================================. Progress update 2022-12-18 07:51:14.915905 : INFO.00.004 Start Launcher. Progress update 2022-12-18 07:51:14.918905 : INFO.00.001 The logger is configured and ready. Progress update 2022-12-18 07:51:14.927904 : INFO.00.005 Argument task='r_d_s'. Progress update 2022-12-18 07:51:14.927904 : -------------------------------------------------------------------------------. Progress update 2022-12-18 07:51:14.928406 : INFO.00.071 Refreshing the database schema. Progress update 2022-12-18 07:51:14.928406 : -------------------------------------------------------------------------------- Progress update 2022-12-18 07:51:23.134620 : INFO.00.069 Materialized database view is refreshed: io_app_faaus2008. Progress update 2022-12-18 07:51:23.134620 : -------------------------------------------------------------------------------. Progress update 2022-12-18 07:51:23.135120 : 8,366,215,500 ns - Total time launcher. Progress update 2022-12-18 07:51:23.135120 : INFO.00.006 End Launcher. Progress update 2022-12-18 07:51:23.135120 : ===============================================================================. ----------------------------------------------------------------------- The current time is: 7:51:23.31 Enter the new time: ----------------------------------------------------------------------- End run_io_avstats =======================================================================","title":"2.10 r_d_s - Refresh the PostgreSQL database schema"},{"location":"how_to_add_ntsb_accident_files.html#211-backup-the-file-directory-datapostgres","text":"Stop the Docker container io_avstats_db . Zip the file directory postgres in the file directory data - result is the file postgres.zip . Rename the file postgres.sql to yy.mm.dd_postgres_upDDMON.zip . Create a copy of the file yy.mm.dd_postgres_upDDMON.zip with the name latest_postgres.zip .","title":"2.11 Backup the file directory data/postgres"},{"location":"how_to_add_ntsb_accident_files.html#212-update-the-google-drive","text":"Log in to Google Drive with the Google Account io-avstats.io-aero@gmail.com . Upload the file yy.mm.dd_postgres_upDDMON.zip . Share the newly uploaded file.","title":"2.12 Update the Google Drive"},{"location":"how_to_add_ntsb_accident_files.html#213-update-io-avstats-in-the-io-aero-cloud","text":"Run the script scripts/run_cloud_files_zip . Upload the resulting cloud.zip file to the cloud and process it there.","title":"2.13 Update IO-AVSTATS in the IO-Aero cloud"},{"location":"how_to_create_new_streamlit_app.html","text":"How to create a new Streamlit app checklist 1. Design 2. Coding 3. Documentation config_io_avstats.md how_to_add_ntsb_accident_files.md how_to_setup_aws_instance.md how_to_update_avstats_on_aws.md index.md 0operation.md release_notes.md 4. Parameterization 4.1 docker-compose.yml 4.2 setiings.io_avstats.toml / setiings.io_avstats_4_dockerfile.toml 5. SCripts 5.1 run_create_image 5.2 run_docker_compose run_io_avstats","title":"... create a new Streamlit app"},{"location":"how_to_create_new_streamlit_app.html#how-to-create-a-new-streamlit-app-checklist","text":"","title":"How to create a new Streamlit app checklist"},{"location":"how_to_create_new_streamlit_app.html#1-design","text":"","title":"1. Design"},{"location":"how_to_create_new_streamlit_app.html#2-coding","text":"","title":"2. Coding"},{"location":"how_to_create_new_streamlit_app.html#3-documentation","text":"","title":"3. Documentation"},{"location":"how_to_create_new_streamlit_app.html#config_io_avstatsmd","text":"","title":"config_io_avstats.md"},{"location":"how_to_create_new_streamlit_app.html#how_to_add_ntsb_accident_filesmd","text":"","title":"how_to_add_ntsb_accident_files.md"},{"location":"how_to_create_new_streamlit_app.html#how_to_setup_aws_instancemd","text":"","title":"how_to_setup_aws_instance.md"},{"location":"how_to_create_new_streamlit_app.html#how_to_update_avstats_on_awsmd","text":"","title":"how_to_update_avstats_on_aws.md"},{"location":"how_to_create_new_streamlit_app.html#indexmd","text":"","title":"index.md"},{"location":"how_to_create_new_streamlit_app.html#0operationmd","text":"","title":"0operation.md"},{"location":"how_to_create_new_streamlit_app.html#release_notesmd","text":"","title":"release_notes.md"},{"location":"how_to_create_new_streamlit_app.html#4-parameterization","text":"","title":"4. Parameterization"},{"location":"how_to_create_new_streamlit_app.html#41-docker-composeyml","text":"","title":"4.1 docker-compose.yml"},{"location":"how_to_create_new_streamlit_app.html#42-setiingsio_avstatstoml-setiingsio_avstats_4_dockerfiletoml","text":"","title":"4.2 setiings.io_avstats.toml / setiings.io_avstats_4_dockerfile.toml"},{"location":"how_to_create_new_streamlit_app.html#5-scripts","text":"","title":"5. SCripts"},{"location":"how_to_create_new_streamlit_app.html#51-run_create_image","text":"","title":"5.1 run_create_image"},{"location":"how_to_create_new_streamlit_app.html#52-run_docker_compose","text":"","title":"5.2 run_docker_compose"},{"location":"how_to_create_new_streamlit_app.html#run_io_avstats","text":"","title":"run_io_avstats"},{"location":"how_to_setup_aws_instance.html","text":"How to set up an AWS instance Creating an AWS instance requires access to an AWS account as a root user or as an IAM user with appropriate permissions. IO-AVSTATS can be run on EC2 instances by default. The EC2 instances are managed on the EC2 Dashboard. 1. Instance creation On the EC2 dashboard, select Instances and then Launch instance . 1.1 Name and tags IO-AVSTATS 1.2 Application and OS Images Ubuntu Server 20.04 LTS (HVM), SSD Volume Type 1.3 Instance type t3a.medium 1.4 Key pair (login) Either choose an existing one or create a new one. 1.5 Network settings 1.6 Configure Storage 1x 30 GiB 1.7 Launch instance 2. Open port numbers Each Streamlit application must be assigned its own port number so that they can run simultaneously. Currently, the following Streamlit applications are supported: Port Application 8501 faaus2008 - Fatal Aircraft Accidents in the US since 2008 8502 pdus2008 - Profiling Data for the US since 2008 2.1 Determine the security To determine the security group assigned to the intance: on the EC2 dashboard, select Instances and then Security . 2.2 Choose the security group To choose the security group assigned to the instance: on the EC2 dashboard, select Security Groups and Security . 2.3 Open the port numbers For each streamline application port number press Add rule and enter the data. 2.4 Finsh with Save rules 3. Upload installation script On Windows, the WinSCP program can be used to upload data from the local system to the AWS Cloud. The script to be uploaded is called run_cloud_setup_instance.sh . 4. Run installation script 4.1 Load terminal window 4.2 run_cloud_setup_instance chmod +x run_cloud_setup_instance.sh ./run_cloud_setup_instance.sh Example protocol : ubuntu@ip-172-31-89-93:~$ chmod +x run_cloud_setup_instance.sh ubuntu@ip-172-31-89-93:~$ ./run_cloud_setup_instance.sh ============================================================================== Start ./run_cloud_setup_instance.sh ------------------------------------------------------------------------------ DATE TIME : 19.12.2022 10:49:15 ============================================================================== Supplement necessary system software ------------------------------------------------------------------------------ Hit:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal InRelease Get:2 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] Get:3 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB] Get:4 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] Get:5 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal/universe amd64 Packages [8628 kB] Get:6 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal/universe Translation-en [5124 kB] Get:7 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal/universe amd64 c-n-f Metadata [265 kB] Get:8 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal/multiverse amd64 Packages [144 kB] Get:9 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal/multiverse Translation-en [104 kB] Get:10 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal/multiverse amd64 c-n-f Metadata [9136 B] Get:11 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [2269 kB] Get:12 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/main Translation-en [395 kB] Get:13 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [16.1 kB] Get:14 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1476 kB] Get:15 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [208 kB] Get:16 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [592 B] Get:17 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1009 kB] Get:18 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [234 kB] Get:19 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [23.2 kB] Get:20 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.5 kB] Get:21 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [7380 B] Get:22 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [592 B] Get:23 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [45.7 kB] Get:24 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/main Translation-en [16.3 kB] Get:25 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/main amd64 c-n-f Metadata [1420 B] Get:26 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/restricted amd64 c-n-f Metadata [116 B] Get:27 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [24.9 kB] Get:28 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/universe Translation-en [16.3 kB] Get:29 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/universe amd64 c-n-f Metadata [880 B] Get:30 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/multiverse amd64 c-n-f Metadata [116 B] Get:31 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1895 kB] Get:32 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [311 kB] Get:33 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [11.5 kB] Get:34 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [1385 kB] Get:35 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [195 kB] Get:36 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [596 B] Get:37 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [778 kB] Get:38 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [150 kB] Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [16.8 kB] Get:40 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [22.2 kB] Get:41 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [5464 B] Get:42 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [516 B] Fetched 25.2 MB in 4s (5617 kB/s) Reading package lists... ... =============================================================================> Version Docker Compose: Current version of Docker Compose: docker-compose version 1.25.0, build unknown docker-py version: 4.1.0 CPython version: 3.8.10 OpenSSL version: OpenSSL 1.1.1f 31 Mar 2020 ============================================================================== =============================================================================> Version Docker Desktop: Current version of Docker Desktop: Client: Docker Engine - Community Version: 20.10.22 API version: 1.41 Go version: go1.18.9 Git commit: 3a2c30b Built: Thu Dec 15 22:28:08 2022 OS/Arch: linux/amd64 Context: default Experimental: true Server: Docker Engine - Community Engine: Version: 20.10.22 API version: 1.41 (minimum version 1.12) Go version: go1.18.9 Git commit: 42c8b31 Built: Thu Dec 15 22:25:58 2022 OS/Arch: linux/amd64 Experimental: false containerd: Version: 1.6.13 GitCommit: 78f51771157abb6c9ed224c22013cdf09962315d runc: Version: 1.1.4 GitCommit: v1.1.4-0-g5fd4c4d docker-init: Version: 0.19.0 GitCommit: de40ad0 ============================================================================== =============================================================================> Version dos2unix: Current version of dos2unix: dos2unix 7.4.0 (2017-10-10) With Unicode UTF-16 support. With native language support. With support to preserve the user and group ownership of files. LOCALEDIR: /usr/share/locale http://waterlan.home.xs4all.nl/dos2unix.html ============================================================================== =============================================================================> Version unzip: Current version of unzip: UnZip 6.00 of 20 April 2009, by Debian. Original by Info-ZIP. Latest sources and executables are at ftp://ftp.info-zip.org/pub/infozip/ ; see ftp://ftp.info-zip.org/pub/infozip/UnZip.html for other sites. Compiled with gcc 9.4.0 for Unix (Linux ELF). UnZip special compilation options: ACORN_FTYPE_NFS COPYRIGHT_CLEAN (PKZIP 0.9x unreducing method not supported) SET_DIR_ATTRIB SYMLINKS (symbolic links supported, if RTL and file system permit) TIMESTAMP UNIXBACKUP USE_EF_UT_TIME USE_UNSHRINK (PKZIP/Zip 1.x unshrinking method supported) USE_DEFLATE64 (PKZIP 4.x Deflate64(tm) supported) UNICODE_SUPPORT [wide-chars, char coding: UTF-8] (handle UTF-8 paths) LARGE_FILE_SUPPORT (large files over 2 GiB supported) ZIP64_SUPPORT (archives using Zip64 for large files supported) USE_BZIP2 (PKZIP 4.6+, using bzip2 lib version 1.0.8, 13-Jul-2019) VMS_TEXT_CONV WILD_STOP_AT_DIR [decryption, version 2.11 of 05 Jan 2007] UnZip and ZipInfo environment options: UNZIP: [none] UNZIPOPT: [none] ZIPINFO: [none] ZIPINFOOPT: [none] ============================================================================== -------------------------------------------------------------------------------- DATE TIME : 19.12.2022 10:50:52 -------------------------------------------------------------------------------- End ./run_cloud_setup_instance.sh ================================================================================","title":"... set up an AWS instance"},{"location":"how_to_setup_aws_instance.html#how-to-set-up-an-aws-instance","text":"Creating an AWS instance requires access to an AWS account as a root user or as an IAM user with appropriate permissions. IO-AVSTATS can be run on EC2 instances by default. The EC2 instances are managed on the EC2 Dashboard.","title":"How to set up an AWS instance"},{"location":"how_to_setup_aws_instance.html#1-instance-creation","text":"On the EC2 dashboard, select Instances and then Launch instance .","title":"1. Instance creation"},{"location":"how_to_setup_aws_instance.html#11-name-and-tags","text":"IO-AVSTATS","title":"1.1 Name and tags"},{"location":"how_to_setup_aws_instance.html#12-application-and-os-images","text":"Ubuntu Server 20.04 LTS (HVM), SSD Volume Type","title":"1.2 Application and OS Images"},{"location":"how_to_setup_aws_instance.html#13-instance-type","text":"t3a.medium","title":"1.3 Instance type"},{"location":"how_to_setup_aws_instance.html#14-key-pair-login","text":"Either choose an existing one or create a new one.","title":"1.4 Key pair (login)"},{"location":"how_to_setup_aws_instance.html#15-network-settings","text":"","title":"1.5 Network settings"},{"location":"how_to_setup_aws_instance.html#16-configure-storage","text":"1x 30 GiB","title":"1.6 Configure Storage"},{"location":"how_to_setup_aws_instance.html#17-launch-instance","text":"","title":"1.7 Launch instance"},{"location":"how_to_setup_aws_instance.html#2-open-port-numbers","text":"Each Streamlit application must be assigned its own port number so that they can run simultaneously. Currently, the following Streamlit applications are supported: Port Application 8501 faaus2008 - Fatal Aircraft Accidents in the US since 2008 8502 pdus2008 - Profiling Data for the US since 2008","title":"2. Open port numbers"},{"location":"how_to_setup_aws_instance.html#21-determine-the-security","text":"To determine the security group assigned to the intance: on the EC2 dashboard, select Instances and then Security .","title":"2.1 Determine the security"},{"location":"how_to_setup_aws_instance.html#22-choose-the-security-group","text":"To choose the security group assigned to the instance: on the EC2 dashboard, select Security Groups and Security .","title":"2.2 Choose the security group"},{"location":"how_to_setup_aws_instance.html#23-open-the-port-numbers","text":"For each streamline application port number press Add rule and enter the data.","title":"2.3 Open the port numbers"},{"location":"how_to_setup_aws_instance.html#24-finsh-with-save-rules","text":"","title":"2.4 Finsh with Save rules"},{"location":"how_to_setup_aws_instance.html#3-upload-installation-script","text":"On Windows, the WinSCP program can be used to upload data from the local system to the AWS Cloud. The script to be uploaded is called run_cloud_setup_instance.sh .","title":"3. Upload installation script"},{"location":"how_to_setup_aws_instance.html#4-run-installation-script","text":"","title":"4. Run installation script"},{"location":"how_to_setup_aws_instance.html#41-load-terminal-window","text":"","title":"4.1 Load terminal window"},{"location":"how_to_setup_aws_instance.html#42-run_cloud_setup_instance","text":"chmod +x run_cloud_setup_instance.sh ./run_cloud_setup_instance.sh Example protocol : ubuntu@ip-172-31-89-93:~$ chmod +x run_cloud_setup_instance.sh ubuntu@ip-172-31-89-93:~$ ./run_cloud_setup_instance.sh ============================================================================== Start ./run_cloud_setup_instance.sh ------------------------------------------------------------------------------ DATE TIME : 19.12.2022 10:49:15 ============================================================================== Supplement necessary system software ------------------------------------------------------------------------------ Hit:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal InRelease Get:2 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] Get:3 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB] Get:4 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] Get:5 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal/universe amd64 Packages [8628 kB] Get:6 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal/universe Translation-en [5124 kB] Get:7 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal/universe amd64 c-n-f Metadata [265 kB] Get:8 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal/multiverse amd64 Packages [144 kB] Get:9 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal/multiverse Translation-en [104 kB] Get:10 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal/multiverse amd64 c-n-f Metadata [9136 B] Get:11 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [2269 kB] Get:12 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/main Translation-en [395 kB] Get:13 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [16.1 kB] Get:14 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [1476 kB] Get:15 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [208 kB] Get:16 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [592 B] Get:17 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1009 kB] Get:18 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [234 kB] Get:19 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [23.2 kB] Get:20 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.5 kB] Get:21 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [7380 B] Get:22 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [592 B] Get:23 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [45.7 kB] Get:24 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/main Translation-en [16.3 kB] Get:25 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/main amd64 c-n-f Metadata [1420 B] Get:26 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/restricted amd64 c-n-f Metadata [116 B] Get:27 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [24.9 kB] Get:28 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/universe Translation-en [16.3 kB] Get:29 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/universe amd64 c-n-f Metadata [880 B] Get:30 http://us-east-1.ec2.archive.ubuntu.com/ubuntu focal-backports/multiverse amd64 c-n-f Metadata [116 B] Get:31 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1895 kB] Get:32 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [311 kB] Get:33 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [11.5 kB] Get:34 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [1385 kB] Get:35 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [195 kB] Get:36 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [596 B] Get:37 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [778 kB] Get:38 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [150 kB] Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [16.8 kB] Get:40 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [22.2 kB] Get:41 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [5464 B] Get:42 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [516 B] Fetched 25.2 MB in 4s (5617 kB/s) Reading package lists... ... =============================================================================> Version Docker Compose: Current version of Docker Compose: docker-compose version 1.25.0, build unknown docker-py version: 4.1.0 CPython version: 3.8.10 OpenSSL version: OpenSSL 1.1.1f 31 Mar 2020 ============================================================================== =============================================================================> Version Docker Desktop: Current version of Docker Desktop: Client: Docker Engine - Community Version: 20.10.22 API version: 1.41 Go version: go1.18.9 Git commit: 3a2c30b Built: Thu Dec 15 22:28:08 2022 OS/Arch: linux/amd64 Context: default Experimental: true Server: Docker Engine - Community Engine: Version: 20.10.22 API version: 1.41 (minimum version 1.12) Go version: go1.18.9 Git commit: 42c8b31 Built: Thu Dec 15 22:25:58 2022 OS/Arch: linux/amd64 Experimental: false containerd: Version: 1.6.13 GitCommit: 78f51771157abb6c9ed224c22013cdf09962315d runc: Version: 1.1.4 GitCommit: v1.1.4-0-g5fd4c4d docker-init: Version: 0.19.0 GitCommit: de40ad0 ============================================================================== =============================================================================> Version dos2unix: Current version of dos2unix: dos2unix 7.4.0 (2017-10-10) With Unicode UTF-16 support. With native language support. With support to preserve the user and group ownership of files. LOCALEDIR: /usr/share/locale http://waterlan.home.xs4all.nl/dos2unix.html ============================================================================== =============================================================================> Version unzip: Current version of unzip: UnZip 6.00 of 20 April 2009, by Debian. Original by Info-ZIP. Latest sources and executables are at ftp://ftp.info-zip.org/pub/infozip/ ; see ftp://ftp.info-zip.org/pub/infozip/UnZip.html for other sites. Compiled with gcc 9.4.0 for Unix (Linux ELF). UnZip special compilation options: ACORN_FTYPE_NFS COPYRIGHT_CLEAN (PKZIP 0.9x unreducing method not supported) SET_DIR_ATTRIB SYMLINKS (symbolic links supported, if RTL and file system permit) TIMESTAMP UNIXBACKUP USE_EF_UT_TIME USE_UNSHRINK (PKZIP/Zip 1.x unshrinking method supported) USE_DEFLATE64 (PKZIP 4.x Deflate64(tm) supported) UNICODE_SUPPORT [wide-chars, char coding: UTF-8] (handle UTF-8 paths) LARGE_FILE_SUPPORT (large files over 2 GiB supported) ZIP64_SUPPORT (archives using Zip64 for large files supported) USE_BZIP2 (PKZIP 4.6+, using bzip2 lib version 1.0.8, 13-Jul-2019) VMS_TEXT_CONV WILD_STOP_AT_DIR [decryption, version 2.11 of 05 Jan 2007] UnZip and ZipInfo environment options: UNZIP: [none] UNZIPOPT: [none] ZIPINFO: [none] ZIPINFOOPT: [none] ============================================================================== -------------------------------------------------------------------------------- DATE TIME : 19.12.2022 10:50:52 -------------------------------------------------------------------------------- End ./run_cloud_setup_instance.sh ================================================================================","title":"4.2 run_cloud_setup_instance"},{"location":"how_to_update_avstats_on_aws.html","text":"How to update IO-AVSTATS in an AWS instance The cloud version of IO-AVSTATS consists of a series of docker containers that are launched using Docker Compose. For the PostgreSQL database, the official DockerHub image from here is used. A separate Docker image is created for each of the Streamlit applications. 1. Docker images Currently, the following Streamlit applications are supported: Application Description faaus2008 Fatal Aircraft Accidents in the US since 2008 pdus2008 Profiling Data for the US since 2008 The data/run_create_image script can be used to generate a Docker image for each of these applications. 2. Zip local files The run_cloud_files_zip script zips the required files into the cloud.zip file. The very first thing the script does is stop the PostgreSQL database so that the database files are in a consistent state. Example protocol : `...`>scripts\\run_cloud_files_zip ======================================================================= Start scripts\\run_cloud_files_zip ----------------------------------------------------------------------- File Collection for AWS ----------------------------------------------------------------------- The current time is: 13:04:45.23 Enter the new time: ======================================================================= 7-Zip (a) [32] 15.14 : Copyright (c) 1999-2015 Igor Pavlov : 2015-12-31 Scanning the drive: 3 files, 225736114 bytes (216 MiB) Creating archive: cloud.zip Items to compress: 3 Files read from disk: 3 Archive size: 216379120 bytes (207 MiB) Everything is Ok ======================================================================= Archive Content ----------------------------------------------------------------------- 7-Zip (a) [32] 15.14 : Copyright (c) 1999-2015 Igor Pavlov : 2015-12-31 Scanning the drive for archives: 1 file, 216379120 bytes (207 MiB) Listing archive: cloud.zip -- Path = cloud.zip Type = zip Physical Size = 216379120 Date Time Attr Size Compressed Name ------------------- ----- ------------ ------------ ------------------------ 2022-12-18 08:50:04 ....A 225728618 216377107 data\\latest_postgres.zip 2022-12-14 22:49:01 ....A 1677 443 docker-compose.yml 2022-12-19 02:59:47 ....A 5819 1070 scripts\\run_docker_compose.sh ------------------- ----- ------------ ------------ ------------------------ 2022-12-19 02:59:47 225736114 216378620 3 files ======================================================================= ----------------------------------------------------------------------- The current time is: 13:04:52.02 Enter the new time: ----------------------------------------------------------------------- End scripts\\run_cloud_files_zip ======================================================================= 3. Upload zip file On Windows, the WinSCP program can be used to upload the cloud.zip file from the local system to the AWS Cloud. 4. Load terminal window 5. Unzip in the cloud First, the file cloud.zip is unzipped. unzip cloud.zip Subsequently, the shell script must be made executable: chmod +x scripts/*.sh Afterwards , a possibly running IO-AVSTATS is terminated. ./scripts/run_docker_compose.sh down Next, unzip the database files. cd data rm -rf postgres unzip latest_postgres.zip Finally, clean up unnecessary files. rm latest_postgres.zip cd .. rm cloud.zip 5. Restart *IO-AVSTATS ./scripts/run_docker_compose.sh up","title":"... update IO-AVSTATS in AWS"},{"location":"how_to_update_avstats_on_aws.html#how-to-update-io-avstats-in-an-aws-instance","text":"The cloud version of IO-AVSTATS consists of a series of docker containers that are launched using Docker Compose. For the PostgreSQL database, the official DockerHub image from here is used. A separate Docker image is created for each of the Streamlit applications.","title":"How to update IO-AVSTATS in an AWS instance"},{"location":"how_to_update_avstats_on_aws.html#1-docker-images","text":"Currently, the following Streamlit applications are supported: Application Description faaus2008 Fatal Aircraft Accidents in the US since 2008 pdus2008 Profiling Data for the US since 2008 The data/run_create_image script can be used to generate a Docker image for each of these applications.","title":"1. Docker images"},{"location":"how_to_update_avstats_on_aws.html#2-zip-local-files","text":"The run_cloud_files_zip script zips the required files into the cloud.zip file. The very first thing the script does is stop the PostgreSQL database so that the database files are in a consistent state. Example protocol : `...`>scripts\\run_cloud_files_zip ======================================================================= Start scripts\\run_cloud_files_zip ----------------------------------------------------------------------- File Collection for AWS ----------------------------------------------------------------------- The current time is: 13:04:45.23 Enter the new time: ======================================================================= 7-Zip (a) [32] 15.14 : Copyright (c) 1999-2015 Igor Pavlov : 2015-12-31 Scanning the drive: 3 files, 225736114 bytes (216 MiB) Creating archive: cloud.zip Items to compress: 3 Files read from disk: 3 Archive size: 216379120 bytes (207 MiB) Everything is Ok ======================================================================= Archive Content ----------------------------------------------------------------------- 7-Zip (a) [32] 15.14 : Copyright (c) 1999-2015 Igor Pavlov : 2015-12-31 Scanning the drive for archives: 1 file, 216379120 bytes (207 MiB) Listing archive: cloud.zip -- Path = cloud.zip Type = zip Physical Size = 216379120 Date Time Attr Size Compressed Name ------------------- ----- ------------ ------------ ------------------------ 2022-12-18 08:50:04 ....A 225728618 216377107 data\\latest_postgres.zip 2022-12-14 22:49:01 ....A 1677 443 docker-compose.yml 2022-12-19 02:59:47 ....A 5819 1070 scripts\\run_docker_compose.sh ------------------- ----- ------------ ------------ ------------------------ 2022-12-19 02:59:47 225736114 216378620 3 files ======================================================================= ----------------------------------------------------------------------- The current time is: 13:04:52.02 Enter the new time: ----------------------------------------------------------------------- End scripts\\run_cloud_files_zip =======================================================================","title":"2. Zip local files"},{"location":"how_to_update_avstats_on_aws.html#3-upload-zip-file","text":"On Windows, the WinSCP program can be used to upload the cloud.zip file from the local system to the AWS Cloud.","title":"3. Upload zip file"},{"location":"how_to_update_avstats_on_aws.html#4-load-terminal-window","text":"","title":"4. Load terminal window"},{"location":"how_to_update_avstats_on_aws.html#5-unzip-in-the-cloud","text":"First, the file cloud.zip is unzipped. unzip cloud.zip Subsequently, the shell script must be made executable: chmod +x scripts/*.sh Afterwards , a possibly running IO-AVSTATS is terminated. ./scripts/run_docker_compose.sh down Next, unzip the database files. cd data rm -rf postgres unzip latest_postgres.zip Finally, clean up unnecessary files. rm latest_postgres.zip cd .. rm cloud.zip","title":"5. Unzip in the cloud"},{"location":"how_to_update_avstats_on_aws.html#5-restart-io-avstats","text":"./scripts/run_docker_compose.sh up","title":"5. Restart *IO-AVSTATS"},{"location":"operation.html","text":"Operation The main tool for operating IO-AVSTATS is the run_io_avstats script. The script is available in a Windows command line version and in a Linux bash shell version. The following tasks can be executed with this script: Code Task Additional parameter(s) c_d_s Create the PostgreSQL database schema c_l_l Correct decimal US latitudes and longitudes c_p_d Cleansing PostgreSQL data d_d_f Delete the PostgreSQL database files d_d_s Drop the PostgreSQL database schema d_n_a Download a NTSB MS Access database file -m / -msaccess d_s_f Download basic simplemaps files d_z_f Download the ZIP Code Database file l_c_d Load data from a correction file into PostgreSQL -c / -correction l_c_s Load country and state data into PostgreSQL l_n_a Load NTSB MS Access database data into PostgreSQL -m / -msaccess l_s_d Load simplemaps data into PostgreSQL l_z_d Load ZIP Code Database data into PostgreSQL r_d_s Refresh the PostgreSQL database schema s_d_c Set up the PostgreSQL database container u_d_s Update the PostgreSQL database schema v_n_d Verify selected NTSB data 1. Detailed task list 1.1 c_d_s - Create the PostgreSQL database schema The creation of the database schema includes the following steps, among others: creation of a new database user, and creation of a new database, and creation of database objects such as database tables and so on. The following parameters are used when creating the database schema: postgres_dbname_admin - administration database name postgres_password_admin - administration database password postgres_user_admin - administration database username Subsequently, the task u_d_s (Update the PostgreSQL database schema) is also executed. Successful creation of a new database schema requires that neither the user to be created nor the database to be created exists in the PostgreSQL DBMS. This is achieved by the previous execution of the following task: d_d_s - Drop the PostgreSQL database schema Example protocol: Progress update 2022-11-26 02:25:26.802413 : ===============================================================================. Progress update 2022-11-26 02:25:26.802413 : INFO.00.004 Start Launcher. Progress update 2022-11-26 02:25:26.804413 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-26 02:25:26.812413 : INFO.00.005 Argument task='c_d_s'. Progress update 2022-11-26 02:25:26.812413 : -------------------------------------------------------------------------------. Progress update 2022-11-26 02:25:26.812413 : INFO.00.044 Creating the database schema. Progress update 2022-11-26 02:25:26.812913 : -------------------------------------------------------------------------------- Progress update 2022-11-26 02:25:26.899052 : INFO.00.016 Database user is available: io_aero. Progress update 2022-11-26 02:25:27.874113 : INFO.00.017 Database is available: io_avstats_dev_db. Progress update 2022-11-26 02:25:28.024496 : INFO.00.007 Database table is available: events. Progress update 2022-11-26 02:25:28.132516 : INFO.00.007 Database table is available: aircraft. Progress update 2022-11-26 02:25:28.191012 : INFO.00.007 Database table is available: dt_events. Progress update 2022-11-26 02:25:28.241033 : INFO.00.007 Database table is available: ntsb_admin. Progress update 2022-11-26 02:25:28.298867 : INFO.00.007 Database table is available: dt_aircraft. Progress update 2022-11-26 02:25:28.357619 : INFO.00.007 Database table is available: engines. Progress update 2022-11-26 02:25:28.415529 : INFO.00.007 Database table is available: events_sequence. Progress update 2022-11-26 02:25:28.465931 : INFO.00.007 Database table is available: findings. Progress update 2022-11-26 02:25:28.666134 : INFO.00.007 Database table is available: flight_crew. Progress update 2022-11-26 02:25:28.757239 : INFO.00.007 Database table is available: injury. Progress update 2022-11-26 02:25:28.840655 : INFO.00.007 Database table is available: narratives. Progress update 2022-11-26 02:25:28.890426 : INFO.00.007 Database table is available: occurrences. Progress update 2022-11-26 02:25:28.940723 : INFO.00.007 Database table is available: dt_flight_crew. Progress update 2022-11-26 02:25:28.990598 : INFO.00.007 Database table is available: flight_time. Progress update 2022-11-26 02:25:29.057116 : INFO.00.007 Database table is available: seq_of_events. Progress update 2022-11-26 02:25:29.107615 : INFO.00.007 Database table is available: io_countries. Progress update 2022-11-26 02:25:29.157116 : INFO.00.007 Database table is available: io_states. Progress update 2022-11-26 02:25:29.224119 : INFO.00.007 Database table is available: io_lat_lng. Progress update 2022-11-26 02:25:29.290617 : INFO.00.007 Database table is available: io_processed_files. Progress update 2022-11-26 02:25:29.290617 : -------------------------------------------------------------------------------- Progress update 2022-11-26 02:25:29.290617 : INFO.00.045 Updating the database schema. Progress update 2022-11-26 02:25:29.291115 : -------------------------------------------------------------------------------- Progress update 2022-11-26 02:25:29.407115 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_city'. Progress update 2022-11-26 02:25:29.432118 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_country'. Progress update 2022-11-26 02:25:29.457114 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_dec_lat_lng_actions'. Progress update 2022-11-26 02:25:29.482114 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_dec_latitude'. Progress update 2022-11-26 02:25:29.507115 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_dec_longitude'. Progress update 2022-11-26 02:25:29.532116 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_deviating_latitude'. Progress update 2022-11-26 02:25:29.557114 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_deviating_longitude'. Progress update 2022-11-26 02:25:29.582115 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_latitude'. Progress update 2022-11-26 02:25:29.607614 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_longitude'. Progress update 2022-11-26 02:25:29.632114 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_us_city'. Progress update 2022-11-26 02:25:29.657614 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_us_state'. Progress update 2022-11-26 02:25:29.682117 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_us_zipcode'. Progress update 2022-11-26 02:25:29.707116 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_latitude'. Progress update 2022-11-26 02:25:29.731616 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_longitude'. Progress update 2022-11-26 02:25:29.756848 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_site_zipcode'. Progress update 2022-11-26 02:25:29.781847 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_state'. Progress update 2022-11-26 02:25:29.806863 : INFO.00.032 Database view is available: io_fatalities_us_2008. Progress update 2022-11-26 02:25:29.831848 : INFO.00.032 Database view is available: io_lat_lng_issues. Progress update 2022-11-26 02:25:29.831848 : -------------------------------------------------------------------------------. Progress update 2022-11-26 02:25:29.832351 : 3,172,935,000 ns - Total time launcher. Progress update 2022-11-26 02:25:29.832351 : INFO.00.006 End Launcher. Progress update 2022-11-26 02:25:29.832351 : ===============================================================================. 1.2 c_l_l - Correct decimal US latitudes and longitudes TODO Example protocol: Progress update 2022-11-29 14:26:53.195199 : ===============================================================================. Progress update 2022-11-29 14:26:53.195199 : INFO.00.004 Start Launcher. Progress update 2022-11-29 14:26:53.197199 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-29 14:26:53.205699 : INFO.00.005 Argument task='c_l_l'. Progress update 2022-11-29 14:26:53.205699 : -------------------------------------------------------------------------------. Progress update 2022-11-29 14:26:53.205699 : INFO.00.040 Correct decimal US latitudes and longitudes. Progress update 2022-11-29 14:26:53.205699 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:26:56.179717 : Number of rows so far read : 5000. Progress update 2022-11-29 14:26:56.217217 : Number of rows so far read : 10000. Progress update 2022-11-29 14:26:56.255218 : Number of rows so far read : 15000. Progress update 2022-11-29 14:26:56.350217 : Number of rows so far read : 20000. Progress update 2022-11-29 14:26:56.418218 : Number of rows so far read : 25000. Progress update 2022-11-29 14:26:56.506301 : Number of rows so far read : 30000. Progress update 2022-11-29 14:26:56.544302 : Number of rows so far read : 35000. Progress update 2022-11-29 14:26:56.582301 : Number of rows so far read : 40000. Progress update 2022-11-29 14:26:58.644218 : Number of rows so far read : 45000. Progress update 2022-11-29 14:27:04.165484 : Number of rows so far read : 50000. Progress update 2022-11-29 14:27:04.202984 : Number of rows so far read : 55000. Progress update 2022-11-29 14:27:04.264984 : Number of rows so far read : 60000. Progress update 2022-11-29 14:27:04.302484 : Number of rows so far read : 65000. Progress update 2022-11-29 14:27:04.340484 : Number of rows so far read : 70000. Progress update 2022-11-29 14:27:04.378484 : Number of rows so far read : 75000. Progress update 2022-11-29 14:27:04.416985 : Number of rows so far read : 80000. Progress update 2022-11-29 14:27:04.454984 : Number of rows so far read : 85000. Progress update 2022-11-29 14:27:04.494488 : Number of rows so far read : 90000. Progress update 2022-11-29 14:27:04.533484 : Number of rows so far read : 95000. Progress update 2022-11-29 14:27:26.444050 : Number of rows so far read : 100000. Progress update 2022-11-29 14:28:59.310881 : Number of rows so far read : 105000. Progress update 2022-11-29 14:29:13.783233 : Number of rows so far read : 110000. Progress update 2022-11-29 14:30:30.710774 : Number of rows so far read : 115000. Progress update 2022-11-29 14:32:47.465443 : Number of rows so far read : 120000. Progress update 2022-11-29 14:35:07.660574 : Number of rows so far read : 125000. Progress update 2022-11-29 14:37:26.256310 : Number of rows so far read : 130000. Progress update 2022-11-29 14:39:43.194030 : Number of rows so far read : 135000. Progress update 2022-11-29 14:39:43.332530 : Number rows selected : 135081. Progress update 2022-11-29 14:39:43.332530 : Number rows updated : 26989. Progress update 2022-11-29 14:39:43.333028 : -------------------------------------------------------------------------------. Progress update 2022-11-29 14:39:43.333028 : 770,285,829,500 ns - Total time launcher. Progress update 2022-11-29 14:39:43.333028 : INFO.00.006 End Launcher. Progress update 2022-11-29 14:39:43.333028 : ===============================================================================. 1.3 c_p_d - Cleansing PostgreSQL data The task cleans up data abnormalities in the database. This includes the following activities: remove trailing whitespace in string data types (trimming), converting string data types that contain only whitespace to NULL (nullifying). As a result, a much simplified simplification of data is possible, e.g. for comparisons. The functionality is limited to the following database columns: DB table DB columns events ev_city, ev_site_zipcode, latitude, longitude On the one hand, the task can be executed explicitly with the run_io_avstats_db script (task c_p_d ) and, on the other hand, it always runs after loading NTSB MS Access data into the PostgreSQL database (task l_n_a ). Example protocol: Progress update 2022-11-29 13:03:13.182527 : ===============================================================================. Progress update 2022-11-29 13:03:13.182527 : INFO.00.004 Start Launcher. Progress update 2022-11-29 13:03:13.184528 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-29 13:03:13.192529 : INFO.00.005 Argument task='c_p_d'. Progress update 2022-11-29 13:03:13.193028 : -------------------------------------------------------------------------------. Progress update 2022-11-29 13:03:13.193028 : INFO.00.065 Cleansing PostgreSQL data. Progress update 2022-11-29 13:03:13.193028 : -------------------------------------------------------------------------------- Progress update 2022-11-29 13:03:13.264027 : INFO.00.066 Cleansing table 'events' column 'ev_city'. Progress update 2022-11-29 13:03:14.812228 : Number cols trimmed : 47967. Progress update 2022-11-29 13:03:14.853583 : Number cols nullified: 4. Progress update 2022-11-29 13:03:14.854085 : -------------------------------------------------------------------------------- Progress update 2022-11-29 13:03:14.854085 : INFO.00.066 Cleansing table 'events' column 'ev_site_zipcode'. Progress update 2022-11-29 13:03:15.795002 : Number cols trimmed : 48691. Progress update 2022-11-29 13:03:15.870127 : Number cols nullified: 2299. Progress update 2022-11-29 13:03:15.870127 : -------------------------------------------------------------------------------- Progress update 2022-11-29 13:03:15.870632 : INFO.00.066 Cleansing table 'events' column 'latitude'. Progress update 2022-11-29 13:03:16.720436 : Number cols trimmed : 42292. Progress update 2022-11-29 13:03:17.979937 : Number cols nullified: 42292. Progress update 2022-11-29 13:03:17.980436 : -------------------------------------------------------------------------------- Progress update 2022-11-29 13:03:17.980436 : INFO.00.066 Cleansing table 'events' column 'longitude'. Progress update 2022-11-29 13:03:19.136341 : Number cols trimmed : 42292. Progress update 2022-11-29 13:03:21.218871 : Number cols nullified: 42292. Progress update 2022-11-29 13:03:21.218871 : -------------------------------------------------------------------------------. Progress update 2022-11-29 13:03:21.218871 : 8,180,840,400 ns - Total time launcher. Progress update 2022-11-29 13:03:21.219372 : INFO.00.006 End Launcher. Progress update 2022-11-29 13:03:21.219372 : ===============================================================================. 1.4 d_d_f - Delete the PostgreSQL database files This task deletes all PostgreSQL database files. The execution requires administration rights. Subsequently, the PostgreSQL database must be completely rebuilt. Tip : The administration password is required to use the administration rights. This can be difficult with the Windows operating system, as there seems to be no functionality to set the administration password. The use of the Windows Subsystem for Linux can help here. 1.5 d_d_s - Drop the PostgreSQL database schema Successful execution of this task requires that no other process uses the database defined with the postgres_dbname parameter. After execution, the database with all objects and the database user defined with the postgres_user parameter are deleted. Example protocol: Progress update 2022-11-22 19:40:05.757556 : ===============================================================================. Progress update 2022-11-22 19:40:05.757556 : INFO.00.004 Start Launcher. Progress update 2022-11-22 19:40:05.762558 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-22 19:40:05.771056 : INFO.00.005 Argument task='d_d_s'. Progress update 2022-11-22 19:40:05.771558 : -------------------------------------------------------------------------------. Progress update 2022-11-22 19:40:05.771558 : INFO.00.046 Dropping the database schema. Progress update 2022-11-22 19:40:05.771558 : -------------------------------------------------------------------------------. Progress update 2022-11-22 19:40:06.742328 : INFO.00.019 Database is dropped: io_avstats_db. Progress update 2022-11-22 19:40:06.775829 : INFO.00.018 Database user is dropped: io_aero. Progress update 2022-11-22 19:40:06.775829 : -------------------------------------------------------------------------------. Progress update 2022-11-22 19:40:06.775829 : 1,186,272,600 ns - Total time launcher. Progress update 2022-11-22 19:40:06.775829 : INFO.00.006 End Launcher. Progress update 2022-11-22 19:40:06.776329 : ===============================================================================. 1.6 d_n_a - Download a NTSB MS Access database file This task allows files containing aviation accident data to be downloaded from the NTSB download site. These files are there as MS Access databases in a compressed format. The following subtasks are executed: A connection to the NTSB download page is established. The selected file is downloaded to the local system in chunks. The downloaded file is then unpacked. A script with the database schema definition is created with RazorSQL from the downloaded database. The newly created script is then compared with a reference script for matching. Subsequently, the downloaded data can be loaded into the PostgreSQL database with the task l_n_a (Load NTSB MS Access database data into PostgreSQL). Further details can be found here . Example protocol: Progress update 2022-11-23 12:20:05.623207 : ===============================================================================. Progress update 2022-11-23 12:20:05.623207 : INFO.00.004 Start Launcher. Progress update 2022-11-23 12:20:05.625207 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-23 12:20:05.633207 : INFO.00.008 Arguments task='d_n_a' msaccess='up22oct'. Progress update 2022-11-23 12:20:05.633707 : -------------------------------------------------------------------------------. Progress update 2022-11-23 12:20:05.633707 : INFO.00.047 Downloading NTSB MS Access database file 'up22OCT'. Progress update 2022-11-23 12:20:05.633707 : -------------------------------------------------------------------------------- Progress update 2022-11-23 12:20:06.163453 : INFO.00.013 The connection to the MS Access database file 'up22OCT.zip' on the NTSB download page was successfully established. Progress update 2022-11-23 12:20:07.188487 : INFO.00.014 From the file 'up22OCT.zip' 2 chunks were downloaded. Progress update 2022-11-23 12:20:07.206986 : INFO.00.015 The file 'up22OCT.zip' was successfully unpacked. Progress update 2022-11-23 12:20:07.218987 : INFO.00.051 msaccess_file ='D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\data\\download\\IO-AVSTATS.mdb'. Progress update 2022-11-23 12:20:07.219487 : INFO.00.051 msaccess_file ='D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\data\\download\\up22OCT.sql'. Progress update 2022-11-23 12:20:07.219487 : INFO.00.052 razorsql_jar_file ='C:\\Program Files\\RazorSQL\\razorsql.jar'. Progress update 2022-11-23 12:20:07.219487 : INFO.00.053 razorsql_java_path='C:\\Program Files\\RazorSQL\\jre11\\bin\\java'. 1669202407306: launching RazorSQL . . . 1669202407307: args . . . -backup IO-AVSTATS null null ; null D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\data\\download\\up22OCT.sql NO tables YES null NO NO 1669202407342: userName: walte 1669202407342: libraryPath: C:\\Program Files\\RazorSQL\\jre11\\bin;C:\\WINDOWS\\Sun\\Java\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\Users\\walte\\.virtualenvs\\io-avstats-db-NXLRYNgF\\Scripts;C:\\Program Files (x86)\\VMware\\VMware Player\\bin\\;C:\\Program Files (x86)\\infogridpacific\\AZARDI;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\Calibre2\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git LFS;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\Program Files\\Pandoc\\;C:\\Program Files\\TortoiseGit\\bin;C:\\Software\\GnuWin32\\bin;C:\\WINDOWS;C:\\WINDOWS\\system32;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Users\\walte\\.nimble\\bin;C:\\Windows;C:\\Windows\\system32;C:\\Windows\\System32\\OpenSSH\\;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Software\\.cargo\\bin;%GRADLE_HOME%\\bin;%HOME_ELIXIR%\\bin;%HOME_ERLANG%\\bin;%HOME_GO%\\bin;%HOME_JULIA%\\bin;%HOME_NIM%\\bin;C:\\Software\\PostgreSQL\\15\\bin;C:\\Software\\poppler-0.68.0\\bin;C:\\Software\\Python\\Python310;C:\\Software\\Python\\Python310\\Scripts;C:\\Software\\rebar3;%HOME_RUST%\\bin;C:\\Software\\Tesseract-OCR;C:\\Software\\jdk-18.0.2\\bin;%KOTLIN_HOME%\\bin;C:\\Software\\oracle\\instantclient_21_6;C:\\Software\\Gpg4win\\..\\GnuPG\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\LLVM\\bin;C:\\Program Files\\nodejs\\;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\walte\\.cargo\\bin;C:\\Users\\walte\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Software\\Microsoft VS Code\\bin;C:\\Users\\walte\\go\\bin;C:\\Software\\texlive\\2021\\bin\\win32;c:\\users\\walte\\.local\\bin;C:\\Users\\walte\\AppData\\Local\\JetBrains\\Toolbox\\scripts;C:\\Users\\walte\\AppData\\Roaming\\npm;. 1669202407343: javaVersion: 11.0.13 1669202407343: 1669202407343: Verifying RazorSQL resources location. 1669202407343: 1669202407343: testing base url: / = file:/C:/Program%20Files/RazorSQL/ 1669202407343: 1669202407344: testString1: file:/C:/Program%20Files/RazorSQL/razorsql.jar 1669202407344: testString2: file:/C:/Program%20Files/RazorSQL/data/base.ssql 1669202407344: testFile1: C:\\Program Files\\RazorSQL\\razorsql.jar 1669202407344: testFile2: C:\\Program Files\\RazorSQL\\data\\base.ssql 1669202407344: both test file exists. Base URL found. 1669202407344: resource directory: file:/C:/Program%20Files/RazorSQL/ 1669202407344: user home: C:\\Users\\walte 1669202407346: user profile: C:\\Users\\walte 1669202407346: app data: C:\\Users\\walte\\AppData\\Roaming 1669202407346: checking write access to: C:\\Users\\walte\\AppData\\Roaming 1669202407346: write dir: C:\\Users\\walte\\AppData\\Roaming\\RichardsonSoftware 1669202407346: can write to C:\\Users\\walte\\AppData\\Roaming 1669202407346: user.home: C:\\Users\\walte\\AppData\\Roaming 1669202407346: RazorSQL Scratch Directory: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL 1669202407347: RazorSQL Scratch Directory exists 1669202407347: checking for sub directories 1669202407347: razorsql launch log: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\razorsql_launch_log.txt 1669202407347: launch log file = C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\razorsql_launch_log.txt 1669202407347: Checking for graphics properties 1669202407348: graphics properties file: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\data\\graphics_properties.txt 1669202407348: gOverride: null 1669202407348: not disabling advanced graphics 1669202407348: path0: file:/C:/Program%20Files/RazorSQL/data/run.ssql 1669202407348: path1: file:/C:/Program%20Files/RazorSQL/razorsql.jar 1669202407348: runArgs: true 1669202407348: showScreen: false 1669202407349: args[0]: -backup 1669202407349: args[1]: IO-AVSTATS 1669202407349: args[2]: null 1669202407349: args[3]: null 1669202407349: args[4]: ; 1669202407349: args[5]: null 1669202407349: args[6]: D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\data\\download\\up22OCT.sql 1669202407349: args[7]: NO 1669202407349: args[8]: tables 1669202407349: args[9]: YES 1669202407349: args[10]: null 1669202407349: args[11]: NO 1669202407349: args[12]: NO 1669202407349: Command: -backup 1669202407350: Running -backup h: name = C:\\Program Files\\RazorSQL\\data\\run.ssql h: name = C:\\Program Files\\RazorSQL\\razorsql.jar 1669202407356: Attempting to load . . . command found uOne: file:/C:/Program%20Files/RazorSQL/ h: name = C:\\Program Files\\RazorSQL\\data\\run.ssql 1669202407367reading file . . .C:\\Program Files\\RazorSQL\\data\\base.ssql 1669202407392done reading . . . 1669202407401done converting 1669202407401starting lib load. 1669202407413lib load complete. In command line processor Max Memory: 30688.0 Current Total Memory: 2048.0 Free Memory: 1957.998046875 1669202407486: r init 1669202407486: d init 1669202407487: get default file encoding 1669202407487: end d init custom home directory: null Checking for user data from old versions 1669202407488: user home: C:\\Users\\walte 1669202407489: user profile: C:\\Users\\walte 1669202407489: app data: C:\\Users\\walte\\AppData\\Roaming 1669202407489: checking write access to: C:\\Users\\walte\\AppData\\Roaming 1669202407489: write dir: C:\\Users\\walte\\AppData\\Roaming\\RichardsonSoftware 1669202407489: can write to C:\\Users\\walte\\AppData\\Roaming newHome: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL dataHome: C:\\Users\\walte\\AppData\\Roaming/RazorSQL/data/ preferences file: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\data\\preferences.txt Profiles Exist 1669202407499: loading icons 1669202407663: done r init Getting connection data from: IO-AVSTATS 1669202407665: r init 1669202407665: d init 1669202407665: get default file encoding 1669202407665: end d init custom home directory: null Checking for user data from old versions newHome: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL dataHome: C:\\Users\\walte\\AppData\\Roaming/RazorSQL/data/ preferences file: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\data\\preferences.txt Profiles Exist 1669202407666: loading icons 1669202407675: done r init getting connection . . . Not using SSH Tunnel driver: sun.jdbc.odbc.JdbcOdbcDriver classLocation: C:\\Program Files\\RazorSQL\\drivers\\common\\odbc.jar loadedCommonJars: false commonURL: file:/C:/Program%20Files/RazorSQL/drivers/common/ commonDir: C:\\Program Files\\RazorSQL\\drivers\\common commonFiles[0]: file:/C:/Program%20Files/RazorSQL/drivers/common/activation.jar commonFiles[1]: file:/C:/Program%20Files/RazorSQL/drivers/common/common.jar commonFiles[2]: file:/C:/Program%20Files/RazorSQL/drivers/common/jaxb-api.jar commonFiles[3]: file:/C:/Program%20Files/RazorSQL/drivers/common/jaxb-core.jar commonFiles[4]: file:/C:/Program%20Files/RazorSQL/drivers/common/jaxb-impl.jar commonFiles[6]: file:/C:/Program%20Files/RazorSQL/drivers/common/odbc.jar connection type: ODBC final classLocation: C:\\Program Files\\RazorSQL\\drivers\\common\\odbc.jar classLocation file: C:\\Program Files\\RazorSQL\\drivers\\common\\odbc.jar building sql manager Loading driver Done loading driver Getting connection with no login info JdbcOdbcDriver: in initialize OdbcApi == null Creating new OdbcApi, nativePrefix: JdbcOdbc constructor Attempting to load JdbcOdbc library Got OdbcApi: sun.jdbc.odbc.JdbcOdbc@2d127a61 Getting charset JdbcOdbcDriver.OdbcApi.charSet: Cp1252 Connection obtained obtained connection database major version = 2 database product name: ACCESS multiValueInsert: false includeIdentifyColumns: false Calling backup . . . Retrieving Tables . . . Generating Table DDL . . . 1 of 20 number of columns 93 column map size: 93 foundNull: false 2 of 20 number of columns 2 column map size: 2 foundNull: false 3 of 20 number of columns 11 column map size: 11 foundNull: false 4 of 20 number of columns 2 column map size: 2 foundNull: false 5 of 20 number of columns 6 column map size: 6 foundNull: false 6 of 20 number of columns 5 column map size: 5 foundNull: false 7 of 20 number of columns 7 column map size: 7 foundNull: false 8 of 20 number of columns 13 column map size: 13 foundNull: false 9 of 20 number of columns 17 column map size: 17 foundNull: false 10 of 20 number of columns 73 column map size: 73 foundNull: false 11 of 20 number of columns 10 column map size: 10 foundNull: false 12 of 20 number of columns 13 column map size: 13 foundNull: false 13 of 20 number of columns 33 column map size: 33 foundNull: false 14 of 20 number of columns 8 column map size: 8 foundNull: false 15 of 20 number of columns 7 column map size: 7 foundNull: false 16 of 20 number of columns 8 column map size: 8 foundNull: false 17 of 20 number of columns 5 column map size: 5 foundNull: false 18 of 20 number of columns 8 column map size: 8 foundNull: false 19 of 20 number of columns 11 column map size: 11 foundNull: false 20 of 20 number of columns 3 column map size: 3 foundNull: false Generating Alter Table DDL . . . 1 of 20 2 of 20 3 of 20 4 of 20 5 of 20 6 of 20 7 of 20 8 of 20 9 of 20 10 of 20 11 of 20 12 of 20 13 of 20 14 of 20 15 of 20 16 of 20 17 of 20 18 of 20 19 of 20 20 of 20 backup finished closing connection . . . connection closed. Shutting down logging streams Done shutting down logging streams Exiting . . . Progress update 2022-11-23 12:20:08.292807 : INFO.00.011 The DDL script for the MS Access database 'up22OCT.mdb' was created successfully. Progress update 2022-11-23 12:20:08.297807 : INFO.00.012 The DDL script for the MS Access database 'up22OCT.mdb' is identical to the reference script. Progress update 2022-11-23 12:20:08.297807 : -------------------------------------------------------------------------------. Progress update 2022-11-23 12:20:08.297807 : 2,816,100,200 ns - Total time launcher. Progress update 2022-11-23 12:20:08.297807 : INFO.00.006 End Launcher. Progress update 2022-11-23 12:20:08.298305 : ===============================================================================. 1.7 d_s_f - Download basic simplemaps files This task downloads the basic versions of the two databases United States Cities and US Zip Codes from the simplemaps website to the file directory defined in download_work_dir . Subsequently, the downloaded data can be loaded into the PostgreSQL database with the task l_s_d (Load simplemaps data into PostgreSQL). Further details can be found here . Example protocol: Progress update 2022-11-27 14:59:11.670613 : ===============================================================================. Progress update 2022-11-27 14:59:11.670613 : INFO.00.004 Start Launcher. Progress update 2022-11-27 14:59:11.672613 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-27 14:59:11.681113 : INFO.00.005 Argument task='d_s_f'. Progress update 2022-11-27 14:59:11.681113 : -------------------------------------------------------------------------------. Progress update 2022-11-27 14:59:11.681113 : INFO.00.048 Downloading basic simplemaps files. Progress update 2022-11-27 14:59:11.681113 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:59:11.917087 : INFO.00.030 The connection to the US city file 'simplemaps_uscities_basicv1.75.zip' on the simplemaps download page was successfully established. Progress update 2022-11-27 14:59:14.671525 : INFO.00.023 From the file 'simplemaps_uscities_basicv1.75.zip' 8 chunks were downloaded. Progress update 2022-11-27 14:59:14.705528 : INFO.00.024 The file 'simplemaps_uscities_basicv1.75.zip' was successfully unpacked. Progress update 2022-11-27 14:59:14.916882 : INFO.00.022 The connection to the US zip code file 'simplemaps_uszips_basicv1.81.zip' on the simplemaps download page was successfully established. Progress update 2022-11-27 14:59:15.642184 : INFO.00.023 From the file 'simplemaps_uszips_basicv1.81.zip' 8 chunks were downloaded. Progress update 2022-11-27 14:59:15.675685 : INFO.00.024 The file 'simplemaps_uszips_basicv1.81.zip' was successfully unpacked. Progress update 2022-11-27 14:59:15.676184 : -------------------------------------------------------------------------------. Progress update 2022-11-27 14:59:15.676184 : 4,151,071,300 ns - Total time launcher. Progress update 2022-11-27 14:59:15.676184 : INFO.00.006 End Launcher. Progress update 2022-11-27 14:59:15.676184 : ===============================================================================. 1.8 d_z_f - Download the ZIP Code Database file With this task, the free version of the file ZIP Code Database can be downloaded from the website United States Zip Codes.org . However, since a license window appears first before the actual download, it is better to download the file manually. Therefore, this task is currently not offered in the run_io_avstats_db shell script menu. Example protocol: Progress update 2022-11-26 07:12:23.326957 : ===============================================================================. Progress update 2022-11-26 07:12:23.326957 : INFO.00.004 Start Launcher. Progress update 2022-11-26 07:12:23.328958 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-26 07:12:23.336956 : INFO.00.005 Argument task='d_z_f'. Progress update 2022-11-26 07:12:23.337457 : -------------------------------------------------------------------------------. Progress update 2022-11-26 07:12:23.337457 : INFO.00.055 Downloading ZIP Code Database file. Progress update 2022-11-26 07:12:23.337457 : -------------------------------------------------------------------------------- File \"D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\src\\launcher.py\", line 416, in <module> main(sys.argv) File \"D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\src\\launcher.py\", line 376, in main avstats.download_zip_code_db_file() File \"D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\src\\io_avstats_db\\avstats.py\", line 98, in download_zip_code_db_file db_dml_base.download_zip_code_db_file() File \"D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\src\\io_avstats_db\\db_dml_base.py\", line 4052, in download_zip_code_db_file io_utils.terminate_fatal( File \"D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\src\\io_avstats_db\\io_utils.py\", line 99, in terminate_fatal traceback.print_stack() FATAL ERROR: program abort =====> FATAL ERROR: program abort =====> ERROR.00.906 Unexpected response status code='403' <===== FATAL ERROR FATAL ERROR: program abort =====> Processing of the script run_io_avstats was aborted, error code=0 1.9 l_c_d - Load data from a correction file into PostgreSQL TODO This task allows files containing aviation accident data to be downloaded from the NTSB download site. These files are there as MS Access databases in a compressed format. The following subtasks are executed: A connection to the NTSB download page is established. The selected file is downloaded to the local system in chunks. The downloaded file is then unpacked. A script with the database schema definition is created with RazorSQL from the downloaded database. The newly created script is then compared with a reference script for matching. 1.10 l_c_s - Load country and state data into PostgreSQL TODO Example protocol: Progress update 2022-11-27 14:15:55.817859 : ===============================================================================. Progress update 2022-11-27 14:15:55.817859 : INFO.00.004 Start Launcher. Progress update 2022-11-27 14:15:55.819858 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-27 14:15:55.827859 : INFO.00.005 Argument task='l_c_s'. Progress update 2022-11-27 14:15:55.827859 : -------------------------------------------------------------------------------. Progress update 2022-11-27 14:15:55.827859 : INFO.00.057 Loading country and state data. Progress update 2022-11-27 14:15:55.828359 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:55.894605 : INFO.00.059 Loading country data. Progress update 2022-11-27 14:15:55.894605 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:55.954085 : Number rows selected : 52. Progress update 2022-11-27 14:15:55.954597 : Number rows inserted : 1. Progress update 2022-11-27 14:15:55.954597 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:55.954597 : INFO.00.060 Loading state data. Progress update 2022-11-27 14:15:55.954597 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:57.545443 : Number rows selected : 52. Progress update 2022-11-27 14:15:57.545443 : Number rows inserted : 51. Progress update 2022-11-27 14:15:57.570593 : -------------------------------------------------------------------------------. Progress update 2022-11-27 14:15:57.570593 : 1,896,734,300 ns - Total time launcher. Progress update 2022-11-27 14:15:57.570593 : INFO.00.006 End Launcher. Progress update 2022-11-27 14:15:57.571096 : ===============================================================================. 1.11 l_n_a - Load NTSB MS Access database data into PostgreSQL This task transfers the data from an NTSB MS Access database previously downloaded from the NTSB website to the PostgreSQL database. The same MS Access database can be processed several times with this task without any problems, since only the changes are newly transferred to the PostgreSQL database. The initial loading is done with both NTSB MS Access databases Pre2008 ubd avall. After that only the monthly updates are then transferred. Further details can be found here . Example protocol: Progress update 2022-11-27 14:15:55.817859 : ===============================================================================. Progress update 2022-11-27 14:15:55.817859 : INFO.00.004 Start Launcher. Progress update 2022-11-27 14:15:55.819858 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-27 14:15:55.827859 : INFO.00.005 Argument task='l_c_s'. Progress update 2022-11-27 14:15:55.827859 : -------------------------------------------------------------------------------. Progress update 2022-11-27 14:15:55.827859 : INFO.00.057 Loading country and state data. Progress update 2022-11-27 14:15:55.828359 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:55.894605 : INFO.00.059 Loading country data. Progress update 2022-11-27 14:15:55.894605 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:55.954085 : Number rows selected : 52. Progress update 2022-11-27 14:15:55.954597 : Number rows inserted : 1. Progress update 2022-11-27 14:15:55.954597 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:55.954597 : INFO.00.060 Loading state data. Progress update 2022-11-27 14:15:55.954597 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:57.545443 : Number rows selected : 52. Progress update 2022-11-27 14:15:57.545443 : Number rows inserted : 51. Progress update 2022-11-27 14:15:57.570593 : -------------------------------------------------------------------------------. Progress update 2022-11-27 14:15:57.570593 : 1,896,734,300 ns - Total time launcher. Progress update 2022-11-27 14:15:57.570593 : INFO.00.006 End Launcher. Progress update 2022-11-27 14:15:57.571096 : ===============================================================================. 1.12 l_s_d - Load simplemaps data into PostgreSQL TODO This task transfers the data from an NTSB MS Access database previously downloaded from the NTSB website to the PostgreSQL database. The same MS Access database can be processed several times with this task without any problems, since only the changes are newly transferred to the PostgreSQL database. The initial loading is done with both MS Access databases Pre2008 ubd avall. After that only the monthly updates are then transferred. Example protocol: Progress update 2022-11-21 18:52:41.629692 : ===============================================================================. Progress update 2022-11-21 18:52:41.629692 : INFO.00.004 Start Launcher. Progress update 2022-11-21 18:52:41.631692 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-21 18:52:41.640190 : INFO.00.005 Argument task='l_s_d'. Progress update 2022-11-21 18:52:41.640190 : -------------------------------------------------------------------------------. Progress update 2022-11-21 18:52:41.685192 : INFO.00.039 Database table io_lat_lng: Loading the zipcode data from file uscities.xlsx. Progress update 2022-11-21 18:55:11.254186 : Number of rows so far read : 5000. Progress update 2022-11-21 18:57:31.973745 : Number of rows so far read : 10000. Progress update 2022-11-21 18:59:47.094776 : Number of rows so far read : 15000. Progress update 2022-11-21 19:02:08.097587 : Number of rows so far read : 20000. Progress update 2022-11-21 19:04:27.858850 : Number of rows so far read : 25000. Progress update 2022-11-21 19:06:49.294785 : Number of rows so far read : 30000. Progress update 2022-11-21 19:09:07.306370 : Number of rows so far read : 35000. Progress update 2022-11-21 19:11:28.117981 : Number of rows so far read : 40000. Progress update 2022-11-21 19:12:10.470503 : Number rows selected : 41620. Progress update 2022-11-21 19:12:10.470503 : Number rows inserted : 41620. Progress update 2022-11-21 19:12:10.530003 : INFO.00.025 Database table io_lat_lng: Loading the zipcode data from file uszips.xlsx. Progress update 2022-11-21 19:14:41.797284 : Number of rows so far read : 5000. Progress update 2022-11-21 19:17:10.506606 : Number of rows so far read : 10000. Progress update 2022-11-21 19:19:38.757474 : Number of rows so far read : 15000. Progress update 2022-11-21 19:22:08.373896 : Number of rows so far read : 20000. Progress update 2022-11-21 19:24:29.851643 : Number of rows so far read : 25000. Progress update 2022-11-21 19:26:58.685870 : Number of rows so far read : 30000. Progress update 2022-11-21 19:28:47.784316 : Number rows selected : 33788. Progress update 2022-11-21 19:28:47.784316 : Number rows inserted : 9651. Progress update 2022-11-21 19:28:47.784316 : Number rows updated : 24133. Progress update 2022-11-21 19:28:47.784815 : INFO.00.026 Database table io_us_stats: Loading data. Progress update 2022-11-21 19:28:49.122315 : Number rows selected : 56. Progress update 2022-11-21 19:28:49.122315 : Number rows inserted : 51. Progress update 2022-11-21 19:28:49.122315 : INFO.00.027 Database table io_lat_lng: Loading the city data. Progress update 2022-11-21 19:31:05.759170 : Number of rows so far read : 5000. Progress update 2022-11-21 19:33:29.969709 : Number of rows so far read : 10000. Progress update 2022-11-21 19:35:42.591083 : Number of rows so far read : 15000. Progress update 2022-11-21 19:38:00.961652 : Number of rows so far read : 20000. Progress update 2022-11-21 19:40:21.097913 : Number of rows so far read : 25000. Progress update 2022-11-21 19:42:39.434729 : Number of rows so far read : 30000. Progress update 2022-11-21 19:45:05.010766 : Number of rows so far read : 35000. Progress update 2022-11-21 19:46:26.359902 : Number rows selected : 37982. Progress update 2022-11-21 19:46:26.360403 : Number rows inserted : 37982. Progress update 2022-11-21 19:46:26.360403 : INFO.00.028 Database table io_lat_lng: Loading the state data. Progress update 2022-11-21 19:46:28.312902 : Number rows selected : 56. Progress update 2022-11-21 19:46:28.312902 : Number rows inserted : 56. Progress update 2022-11-21 19:46:28.313404 : INFO.00.029 Database table io_lat_lng: Loading the country data. Progress update 2022-11-21 19:46:28.346407 : Number rows inserted : 1. Progress update 2022-11-21 19:46:28.391904 : INFO.00.027 Database table io_lat_lng: Loading the city data. Progress update 2022-11-21 19:48:23.972756 : Number of rows so far read : 5000. Progress update 2022-11-21 19:50:01.546746 : Number of rows so far read : 10000. Progress update 2022-11-21 19:51:44.317761 : Number of rows so far read : 15000. Progress update 2022-11-21 19:53:32.879336 : Number of rows so far read : 20000. Progress update 2022-11-21 19:55:18.566257 : Number of rows so far read : 25000. Progress update 2022-11-21 19:56:46.677403 : Number of rows so far read : 30000. Progress update 2022-11-21 19:56:52.002902 : Number rows selected : 30409. Progress update 2022-11-21 19:56:52.003409 : Number rows updated : 20621. Progress update 2022-11-21 19:56:52.003409 : -------------------------------------------------------------------------------. Progress update 2022-11-21 19:56:52.003409 : 3,850,528,217,800 ns - Total time launcher. Progress update 2022-11-21 19:56:52.003903 : INFO.00.006 End Launcher. Progress update 2022-11-21 19:56:52.003903 : ===============================================================================. 1.13 l_z_d - Load ZIP Code Database data into PostgreSQL TODO This task transfers the data from an NTSB MS Access database previously downloaded from the NTSB website to the PostgreSQL database. The same MS Access database can be processed several times with this task without any problems, since only the changes are newly transferred to the PostgreSQL database. The initial loading is done with both MS Access databases Pre2008 ubd avall. After that only the monthly updates are then transferred. Example protocol: Progress update 2022-11-29 14:12:25.117005 : ===============================================================================. Progress update 2022-11-29 14:12:25.117502 : INFO.00.004 Start Launcher. Progress update 2022-11-29 14:12:25.119503 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-29 14:12:25.128005 : INFO.00.005 Argument task='l_z_d'. Progress update 2022-11-29 14:12:25.128005 : -------------------------------------------------------------------------------. Progress update 2022-11-29 14:12:25.128005 : INFO.00.056 Loading ZIP Code Database data. Progress update 2022-11-29 14:12:25.128005 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:12:25.179505 : INFO.00.061 Database table io_lat_lng: Loading the estimated zip code data. Progress update 2022-11-29 14:12:25.179505 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:13:21.866512 : Number of rows so far read : 5000. Progress update 2022-11-29 14:14:16.970167 : Number of rows so far read : 10000. Progress update 2022-11-29 14:15:10.266064 : Number of rows so far read : 15000. Progress update 2022-11-29 14:16:08.694846 : Number of rows so far read : 20000. Progress update 2022-11-29 14:16:47.652646 : Number of rows so far read : 25000. Progress update 2022-11-29 14:17:32.877233 : Number of rows so far read : 30000. Progress update 2022-11-29 14:18:06.643788 : Number of rows so far read : 35000. Progress update 2022-11-29 14:18:55.944095 : Number of rows so far read : 40000. Progress update 2022-11-29 14:19:13.847623 : Number rows selected : 42735. Progress update 2022-11-29 14:19:13.848123 : Number rows inserted : 10115. Progress update 2022-11-29 14:19:13.848123 : Number rows duplicate: 32660. Progress update 2022-11-29 14:19:13.848123 : Number rows updated : 3252. Progress update 2022-11-29 14:19:13.848123 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:19:13.919921 : INFO.00.063 Processed data source 'average'. Progress update 2022-11-29 14:19:13.919921 : Number rows deleted : 7631. Progress update 2022-11-29 14:19:13.919921 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:19:13.919921 : INFO.00.062 Database table io_lat_lng: Loading the averaged city data. Progress update 2022-11-29 14:19:13.919921 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:20:03.226487 : Number of rows so far read : 5000. Progress update 2022-11-29 14:20:49.819656 : Number of rows so far read : 10000. Progress update 2022-11-29 14:21:36.281703 : Number of rows so far read : 15000. Progress update 2022-11-29 14:22:22.562620 : Number of rows so far read : 20000. Progress update 2022-11-29 14:23:04.766437 : Number of rows so far read : 25000. Progress update 2022-11-29 14:23:48.995380 : Number of rows so far read : 30000. Progress update 2022-11-29 14:24:37.784042 : Number of rows so far read : 35000. Progress update 2022-11-29 14:25:21.929065 : Number of rows so far read : 40000. Progress update 2022-11-29 14:26:07.064444 : Number rows selected : 44743. Progress update 2022-11-29 14:26:07.064444 : Number rows inserted : 14392. Progress update 2022-11-29 14:26:07.064444 : Number rows duplicate: 30351. Progress update 2022-11-29 14:26:07.090743 : -------------------------------------------------------------------------------. Progress update 2022-11-29 14:26:07.090743 : 822,117,242,100 ns - Total time launcher. Progress update 2022-11-29 14:26:07.090743 : INFO.00.006 End Launcher. Progress update 2022-11-29 14:26:07.090743 : ===============================================================================. 1.14 r_d_s - Refresh the PostgreSQL database schema Hereby changes can be made to the database schema. The task can be executed several times without problems, since before a change is always first checked whether this has already been done. Materialized database view io_app_faaus2008 - provides the data for processing the task c_l_l (Correct decimal US latitudes and longitudes). Example protocol: Progress update 2022-12-19 08:37:09.337180 : INFO.00.004 Start Launcher. Progress update 2022-12-19 08:37:09.342679 : INFO.00.001 The logger is configured and ready. Progress update 2022-12-19 08:37:09.352180 : INFO.00.005 Argument task='r_d_s'. Progress update 2022-12-19 08:37:09.352180 : -------------------------------------------------------------------------------. Progress update 2022-12-19 08:37:09.352180 : INFO.00.071 Refreshing the database schema. Progress update 2022-12-19 08:37:09.352180 : -------------------------------------------------------------------------------- Progress update 2022-12-19 08:37:19.366370 : INFO.00.069 Materialized database view is refreshed: io_app_faaus2008. Progress update 2022-12-19 08:37:19.366370 : -------------------------------------------------------------------------------. Progress update 2022-12-19 08:37:19.366370 : 10,187,690,800 ns - Total time launcher. Progress update 2022-12-19 08:37:19.366370 : INFO.00.006 End Launcher. Progress update 2022-12-19 08:37:19.366370 : ===============================================================================. 1.15 s_d_c - Set up the PostgreSQL database container The default installation of the PostgreSQL database is done using the official Docker images from Dockerhub - see here . This task consists of the following steps: any running Docker container is stopped. any existing Docker container is deleted. if not already present, the file directory for the PostgreSQL database files is created. the Docker network for the PostgreSQL database is created if it does not already exist. the PostgreSQL Docker image is either created or updated based on DockerHub. a new PostgreSQL Docker container is started. Example protocol: Docker stop/rm io_avstats_db_dev_container .................... before: CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 66c741493677 postgres:latest \"docker-entrypoint.s\u2026\" 8 hours ago Up 8 hours 0.0.0.0:5433->5432/tcp io_avstats_db_dev_container a4469ea39fdd postgres:latest \"docker-entrypoint.s\u2026\" 2 weeks ago Up 10 hours 0.0.0.0:5432->5432/tcp io_avstats_container f67eb28b8888 portainer/portainer-ce \"/portainer\" 4 weeks ago Up 10 hours 0.0.0.0:8000->8000/tcp, 0.0.0.0:9000->9000/tcp, 9443/tcp portainer 66c741493677 postgres:latest \"docker-entrypoint.s\u00d4\u00c7\u00aa\" 8 hours ago Up 8 hours 0.0.0.0:5433->5432/tcp io_avstats_db_dev_container io_avstats_db_dev_container 66c741493677 postgres:latest \"docker-entrypoint.s\u00d4\u00c7\u00aa\" 8 hours ago Exited (0) Less than a second ago io_avstats_db_dev_container io_avstats_db_dev_container ............................................................. after: CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES a4469ea39fdd postgres:latest \"docker-entrypoint.s\u2026\" 2 weeks ago Up 10 hours 0.0.0.0:5432->5432/tcp io_avstats_container f67eb28b8888 portainer/portainer-ce \"/portainer\" 4 weeks ago Up 10 hours 0.0.0.0:8000->8000/tcp, 0.0.0.0:9000->9000/tcp, 9443/tcp portainer Timer 4.0 - Command Line Timer - www.Gammadyne.com Copyright (C) 2007-2017 by Greg Wittmeyer - All Rights Reserved Timer started: 22.11.2022 19:35:22 PostgreSQL -------------------------------------------------------------------------------- Docker create io_avstats_db_dev_container (PostgreSQL latest) Docker network io_avstats_db_dev_net already existing 93a1342e70d367bee07fa9b021293324d7ce04a8113563a3d995d63f9d5b6172 Docker start io_avstats_db_dev_container (PostgreSQL ) ... io_avstats_db_dev_container NETWORK ID NAME DRIVER SCOPE 6c9fa25a23dc AVSTATS_POSTGRES_NET bridge local ad56537ead3f bridge bridge local da3331b29cb2 host host local d6ad44ee9141 io_avstats_db_dev_net bridge local e33d9f5149d3 io_avstats_net bridge local 3df9e6ac5dfa none null local [ { \"Name\": \"io_avstats_db_dev_net\", \"Id\": \"d6ad44ee9141424aec5d8e5643d4f4349e13482935a594f2553f4a7fd4648446\", \"Created\": \"2022-11-06T12:04:36.9326894Z\", \"Scope\": \"local\", \"Driver\": \"bridge\", \"EnableIPv6\": false, \"IPAM\": { \"Driver\": \"default\", \"Options\": {}, \"Config\": [ { \"Subnet\": \"172.20.0.0/16\", \"Gateway\": \"172.20.0.1\" } ] }, \"Internal\": false, \"Attachable\": false, \"Ingress\": false, \"ConfigFrom\": { \"Network\": \"\" }, \"ConfigOnly\": false, \"Containers\": {}, \"Options\": {}, \"Labels\": {} } ] DOCKER PostgreSQL was ready in 30.2 seconds CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 93a1342e70d3 postgres:latest \"docker-entrypoint.s\u2026\" 30 seconds ago Up 29 seconds 0.0.0.0:5433->5432/tcp io_avstats_db_dev_container a4469ea39fdd postgres:latest \"docker-entrypoint.s\u2026\" 2 weeks ago Up 10 hours 0.0.0.0:5432->5432/tcp io_avstats_container f67eb28b8888 portainer/portainer-ce \"/portainer\" 4 weeks ago Up 10 hours 0.0.0.0:8000->8000/tcp, 0.0.0.0:9000->9000/tcp, 9443/tcp portainer 1.16 u_d_s - Update the PostgreSQL database schema Hereby changes can be made to the database schema. The task can be executed several times without problems, since before a change is always first checked whether this has already been done. New database tables: io_countries : contains latitude and longitude of selected countries. io_lat_lng : used to store the simplemaps and United States Zip Codes.org data. io_states : contains the identification, name, latitude and longitude of all US states. Extensions for database tables: 2.1 Database table events . The columns io_city , io_country , io_latitude , io_longitude , io_site_zipcode and io_state to store manual corrections. The columns io_deviating_dec_latitude , io_deviating_dec_longitude , io_invalid_latitude , io_invalid_longitude , io_invalid_us_city , io_invalid_us_state and , io_invalid_us_zipcode for documenting data plausibility (task v_n_d ). the columns io_dec_lat_lng_actions , io_dec_latitude and io_dec_longitude to store corrected decimal latitude and longitude values. New database views: io_lat_lng_issues - provides the data for processing the task c_l_l (Correct decimal US latitudes and longitudes). io_fatalities_us_2008 - provides event data for aviation accidents in the U.S. since 2008. Example protocol: Progress update 2022-11-27 13:37:13.316694 : ===============================================================================. Progress update 2022-11-27 13:37:13.316694 : INFO.00.004 Start Launcher. Progress update 2022-11-27 13:37:13.318694 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-27 13:37:13.327195 : INFO.00.005 Argument task='u_d_s'. Progress update 2022-11-27 13:37:13.327195 : -------------------------------------------------------------------------------. Progress update 2022-11-27 13:37:13.327195 : INFO.00.045 Updating the database schema. Progress update 2022-11-27 13:37:13.327195 : -------------------------------------------------------------------------------- Progress update 2022-11-27 13:37:13.436194 : INFO.00.007 Database table is available: io_msaccess_file. Progress update 2022-11-27 13:37:13.520032 : INFO.00.007 Database table is available: io_countries. Progress update 2022-11-27 13:37:13.595030 : INFO.00.007 Database table is available: io_states. Progress update 2022-11-27 13:37:13.770060 : INFO.00.007 Database table is available: io_lat_lng. Progress update 2022-11-27 13:37:13.810990 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_city'. Progress update 2022-11-27 13:37:13.844989 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_country'. Progress update 2022-11-27 13:37:13.878039 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_dec_lat_lng_actions'. Progress update 2022-11-27 13:37:13.911450 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_dec_latitude'. Progress update 2022-11-27 13:37:13.944473 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_dec_longitude'. Progress update 2022-11-27 13:37:13.977929 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_deviating_dec_latitude'. Progress update 2022-11-27 13:37:14.010969 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_deviating_dec_longitude'. Progress update 2022-11-27 13:37:14.044449 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_latitude'. Progress update 2022-11-27 13:37:14.077702 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_longitude'. Progress update 2022-11-27 13:37:14.111268 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_us_city'. Progress update 2022-11-27 13:37:14.144267 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_us_state'. Progress update 2022-11-27 13:37:14.178253 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_us_zipcode'. Progress update 2022-11-27 13:37:14.211254 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_latitude'. Progress update 2022-11-27 13:37:14.244753 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_longitude'. Progress update 2022-11-27 13:37:14.277753 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_site_zipcode'. Progress update 2022-11-27 13:37:14.311253 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_state'. Progress update 2022-11-27 13:37:14.378313 : INFO.00.032 Database view is available: io_fatalities_us_2008. Progress update 2022-11-27 13:37:14.402813 : INFO.00.032 Database view is available: io_lat_lng_issues. Progress update 2022-11-27 13:37:14.402813 : -------------------------------------------------------------------------------. Progress update 2022-11-27 13:37:14.402813 : 1,230,619,900 ns - Total time launcher. Progress update 2022-11-27 13:37:14.403313 : INFO.00.006 End Launcher. Progress update 2022-11-27 13:37:14.403313 : ===============================================================================. 1.17 v_n_d - Verify selected NTSB data This task can be used to perform a plausibility check for the following columns in the database table events : dec_latitude , dec_longitude , ev_state , ev_site_zipcode , latitude , longitude , and the combination of: ev_state and ev_city , ev_state , ev_city and ev_site_zipcode . The results of the check are stored in the following columns: io_deviating_dec_latitude (absolute difference), io_deviating_dec_longitude (absolute difference), io_invalid_latitude (true), io_invalid_longitude (true), io_invalid_us_city (true), io_invalid_us_city_zipcode (true), io_invalid_us_state (true), io_invalid_us_zipcode (true). The tests are performed according to the following logic: io_deviating_dec_latitude : Absolute difference between dec_latitude and latitude exceeding a given limit in max_deviation_latitude . io_deviating_dec_longitude : Absolute difference between dec_longitude and longitude exceeding a given limit max_deviation_longitude . io_invalid_latitude : Can the latitude in the latitude column be converted to its decimal equivalent? io_invalid_longitude : Can the longitude in the longitude column be converted to its decimal equivalent? io_invalid_us_city : For country USA and the given state, is the specified value in the ev_city column a existing city? io_invalid_us_city_zipcode : For country USA and the given state, are the specified values in the ev_city column and in the ev_site_zipcode column a existing city? io_invalid_us_state : For country USA , is the specified value in the ev_state column a valid state identifier? io_invalid_us_z ipcode : For country USA , is the specified value in the ev_site_zipcode column a existing zip code? Example protocol: Progress update 2022-11-29 14:52:27.221649 : ===============================================================================. Progress update 2022-11-29 14:52:27.221649 : INFO.00.004 Start Launcher. Progress update 2022-11-29 14:52:27.223649 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-29 14:52:27.232150 : INFO.00.005 Argument task='v_n_d'. Progress update 2022-11-29 14:52:27.232150 : -------------------------------------------------------------------------------. Progress update 2022-11-29 14:52:27.232150 : INFO.00.043 Verify selected NTSB data. Progress update 2022-11-29 14:52:27.232150 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:52:27.449649 : INFO.00.064 Verification of table 'events' column(s) 'latitude & longitude'. Progress update 2022-11-29 14:52:27.449649 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:52:28.124099 : Number of rows so far read : 5000. Progress update 2022-11-29 14:52:33.701741 : Number of rows so far read : 10000. Progress update 2022-11-29 14:53:21.979567 : Number of rows so far read : 15000. Progress update 2022-11-29 14:54:41.899911 : Number of rows so far read : 20000. Progress update 2022-11-29 14:55:56.229700 : Number of rows so far read : 25000. Progress update 2022-11-29 14:57:09.659083 : Number of rows so far read : 30000. Progress update 2022-11-29 14:58:10.139422 : Number rows errors : 12322. Progress update 2022-11-29 14:58:10.139422 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:58:10.139422 : INFO.00.064 Verification of table 'events' column(s) 'ev_city'. Progress update 2022-11-29 14:58:10.968104 : Number rows errors : 6039. Progress update 2022-11-29 14:58:10.968104 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:58:10.968104 : INFO.00.064 Verification of table 'events' column(s) 'ev_city & ev_site_zipcode'. Progress update 2022-11-29 14:58:11.934347 : Number rows errors : 16491. Progress update 2022-11-29 14:58:11.934347 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:58:11.934846 : INFO.00.064 Verification of table 'events' column(s) 'ev_state'. Progress update 2022-11-29 14:58:12.175729 : Number rows errors : 292. Progress update 2022-11-29 14:58:12.176230 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:58:12.176230 : INFO.00.064 Verification of table 'events' column(s) 'ev_site_zipcode'. Progress update 2022-11-29 14:58:12.400731 : Number rows errors : 6029. Progress update 2022-11-29 14:58:12.401230 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:58:12.402230 : Number rows selected : 34221. Progress update 2022-11-29 14:58:12.402230 : Number rows updated : 41173. Progress update 2022-11-29 14:58:12.402730 : Number rows errors : 41173. Progress update 2022-11-29 14:58:12.402730 : -------------------------------------------------------------------------------. Progress update 2022-11-29 14:58:12.402730 : 345,321,580,900 ns - Total time launcher. Progress update 2022-11-29 14:58:12.402730 : INFO.00.006 End Launcher. Progress update 2022-11-29 14:58:12.402730 : ===============================================================================. 2. First installation The initial load in a fresh Windows environment requires the execution of the following tasks in the given order: s_d_c - Set up the PostgreSQL database container c_d_s - Create the PostgreSQL database schema d_n_a - Download the NTSB MS Access files Pre2008 and avall l_n_a - Load the NTSB MS Access database from Pre2008 and avall 3. Regular updates see","title":"Operation"},{"location":"operation.html#operation","text":"The main tool for operating IO-AVSTATS is the run_io_avstats script. The script is available in a Windows command line version and in a Linux bash shell version. The following tasks can be executed with this script: Code Task Additional parameter(s) c_d_s Create the PostgreSQL database schema c_l_l Correct decimal US latitudes and longitudes c_p_d Cleansing PostgreSQL data d_d_f Delete the PostgreSQL database files d_d_s Drop the PostgreSQL database schema d_n_a Download a NTSB MS Access database file -m / -msaccess d_s_f Download basic simplemaps files d_z_f Download the ZIP Code Database file l_c_d Load data from a correction file into PostgreSQL -c / -correction l_c_s Load country and state data into PostgreSQL l_n_a Load NTSB MS Access database data into PostgreSQL -m / -msaccess l_s_d Load simplemaps data into PostgreSQL l_z_d Load ZIP Code Database data into PostgreSQL r_d_s Refresh the PostgreSQL database schema s_d_c Set up the PostgreSQL database container u_d_s Update the PostgreSQL database schema v_n_d Verify selected NTSB data","title":"Operation"},{"location":"operation.html#1-detailed-task-list","text":"","title":"1. Detailed task list"},{"location":"operation.html#11-c_d_s-create-the-postgresql-database-schema","text":"The creation of the database schema includes the following steps, among others: creation of a new database user, and creation of a new database, and creation of database objects such as database tables and so on. The following parameters are used when creating the database schema: postgres_dbname_admin - administration database name postgres_password_admin - administration database password postgres_user_admin - administration database username Subsequently, the task u_d_s (Update the PostgreSQL database schema) is also executed. Successful creation of a new database schema requires that neither the user to be created nor the database to be created exists in the PostgreSQL DBMS. This is achieved by the previous execution of the following task: d_d_s - Drop the PostgreSQL database schema Example protocol: Progress update 2022-11-26 02:25:26.802413 : ===============================================================================. Progress update 2022-11-26 02:25:26.802413 : INFO.00.004 Start Launcher. Progress update 2022-11-26 02:25:26.804413 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-26 02:25:26.812413 : INFO.00.005 Argument task='c_d_s'. Progress update 2022-11-26 02:25:26.812413 : -------------------------------------------------------------------------------. Progress update 2022-11-26 02:25:26.812413 : INFO.00.044 Creating the database schema. Progress update 2022-11-26 02:25:26.812913 : -------------------------------------------------------------------------------- Progress update 2022-11-26 02:25:26.899052 : INFO.00.016 Database user is available: io_aero. Progress update 2022-11-26 02:25:27.874113 : INFO.00.017 Database is available: io_avstats_dev_db. Progress update 2022-11-26 02:25:28.024496 : INFO.00.007 Database table is available: events. Progress update 2022-11-26 02:25:28.132516 : INFO.00.007 Database table is available: aircraft. Progress update 2022-11-26 02:25:28.191012 : INFO.00.007 Database table is available: dt_events. Progress update 2022-11-26 02:25:28.241033 : INFO.00.007 Database table is available: ntsb_admin. Progress update 2022-11-26 02:25:28.298867 : INFO.00.007 Database table is available: dt_aircraft. Progress update 2022-11-26 02:25:28.357619 : INFO.00.007 Database table is available: engines. Progress update 2022-11-26 02:25:28.415529 : INFO.00.007 Database table is available: events_sequence. Progress update 2022-11-26 02:25:28.465931 : INFO.00.007 Database table is available: findings. Progress update 2022-11-26 02:25:28.666134 : INFO.00.007 Database table is available: flight_crew. Progress update 2022-11-26 02:25:28.757239 : INFO.00.007 Database table is available: injury. Progress update 2022-11-26 02:25:28.840655 : INFO.00.007 Database table is available: narratives. Progress update 2022-11-26 02:25:28.890426 : INFO.00.007 Database table is available: occurrences. Progress update 2022-11-26 02:25:28.940723 : INFO.00.007 Database table is available: dt_flight_crew. Progress update 2022-11-26 02:25:28.990598 : INFO.00.007 Database table is available: flight_time. Progress update 2022-11-26 02:25:29.057116 : INFO.00.007 Database table is available: seq_of_events. Progress update 2022-11-26 02:25:29.107615 : INFO.00.007 Database table is available: io_countries. Progress update 2022-11-26 02:25:29.157116 : INFO.00.007 Database table is available: io_states. Progress update 2022-11-26 02:25:29.224119 : INFO.00.007 Database table is available: io_lat_lng. Progress update 2022-11-26 02:25:29.290617 : INFO.00.007 Database table is available: io_processed_files. Progress update 2022-11-26 02:25:29.290617 : -------------------------------------------------------------------------------- Progress update 2022-11-26 02:25:29.290617 : INFO.00.045 Updating the database schema. Progress update 2022-11-26 02:25:29.291115 : -------------------------------------------------------------------------------- Progress update 2022-11-26 02:25:29.407115 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_city'. Progress update 2022-11-26 02:25:29.432118 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_country'. Progress update 2022-11-26 02:25:29.457114 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_dec_lat_lng_actions'. Progress update 2022-11-26 02:25:29.482114 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_dec_latitude'. Progress update 2022-11-26 02:25:29.507115 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_dec_longitude'. Progress update 2022-11-26 02:25:29.532116 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_deviating_latitude'. Progress update 2022-11-26 02:25:29.557114 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_deviating_longitude'. Progress update 2022-11-26 02:25:29.582115 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_latitude'. Progress update 2022-11-26 02:25:29.607614 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_longitude'. Progress update 2022-11-26 02:25:29.632114 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_us_city'. Progress update 2022-11-26 02:25:29.657614 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_us_state'. Progress update 2022-11-26 02:25:29.682117 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_us_zipcode'. Progress update 2022-11-26 02:25:29.707116 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_latitude'. Progress update 2022-11-26 02:25:29.731616 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_longitude'. Progress update 2022-11-26 02:25:29.756848 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_site_zipcode'. Progress update 2022-11-26 02:25:29.781847 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_state'. Progress update 2022-11-26 02:25:29.806863 : INFO.00.032 Database view is available: io_fatalities_us_2008. Progress update 2022-11-26 02:25:29.831848 : INFO.00.032 Database view is available: io_lat_lng_issues. Progress update 2022-11-26 02:25:29.831848 : -------------------------------------------------------------------------------. Progress update 2022-11-26 02:25:29.832351 : 3,172,935,000 ns - Total time launcher. Progress update 2022-11-26 02:25:29.832351 : INFO.00.006 End Launcher. Progress update 2022-11-26 02:25:29.832351 : ===============================================================================.","title":"1.1 c_d_s - Create the PostgreSQL database schema"},{"location":"operation.html#12-c_l_l-correct-decimal-us-latitudes-and-longitudes","text":"TODO Example protocol: Progress update 2022-11-29 14:26:53.195199 : ===============================================================================. Progress update 2022-11-29 14:26:53.195199 : INFO.00.004 Start Launcher. Progress update 2022-11-29 14:26:53.197199 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-29 14:26:53.205699 : INFO.00.005 Argument task='c_l_l'. Progress update 2022-11-29 14:26:53.205699 : -------------------------------------------------------------------------------. Progress update 2022-11-29 14:26:53.205699 : INFO.00.040 Correct decimal US latitudes and longitudes. Progress update 2022-11-29 14:26:53.205699 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:26:56.179717 : Number of rows so far read : 5000. Progress update 2022-11-29 14:26:56.217217 : Number of rows so far read : 10000. Progress update 2022-11-29 14:26:56.255218 : Number of rows so far read : 15000. Progress update 2022-11-29 14:26:56.350217 : Number of rows so far read : 20000. Progress update 2022-11-29 14:26:56.418218 : Number of rows so far read : 25000. Progress update 2022-11-29 14:26:56.506301 : Number of rows so far read : 30000. Progress update 2022-11-29 14:26:56.544302 : Number of rows so far read : 35000. Progress update 2022-11-29 14:26:56.582301 : Number of rows so far read : 40000. Progress update 2022-11-29 14:26:58.644218 : Number of rows so far read : 45000. Progress update 2022-11-29 14:27:04.165484 : Number of rows so far read : 50000. Progress update 2022-11-29 14:27:04.202984 : Number of rows so far read : 55000. Progress update 2022-11-29 14:27:04.264984 : Number of rows so far read : 60000. Progress update 2022-11-29 14:27:04.302484 : Number of rows so far read : 65000. Progress update 2022-11-29 14:27:04.340484 : Number of rows so far read : 70000. Progress update 2022-11-29 14:27:04.378484 : Number of rows so far read : 75000. Progress update 2022-11-29 14:27:04.416985 : Number of rows so far read : 80000. Progress update 2022-11-29 14:27:04.454984 : Number of rows so far read : 85000. Progress update 2022-11-29 14:27:04.494488 : Number of rows so far read : 90000. Progress update 2022-11-29 14:27:04.533484 : Number of rows so far read : 95000. Progress update 2022-11-29 14:27:26.444050 : Number of rows so far read : 100000. Progress update 2022-11-29 14:28:59.310881 : Number of rows so far read : 105000. Progress update 2022-11-29 14:29:13.783233 : Number of rows so far read : 110000. Progress update 2022-11-29 14:30:30.710774 : Number of rows so far read : 115000. Progress update 2022-11-29 14:32:47.465443 : Number of rows so far read : 120000. Progress update 2022-11-29 14:35:07.660574 : Number of rows so far read : 125000. Progress update 2022-11-29 14:37:26.256310 : Number of rows so far read : 130000. Progress update 2022-11-29 14:39:43.194030 : Number of rows so far read : 135000. Progress update 2022-11-29 14:39:43.332530 : Number rows selected : 135081. Progress update 2022-11-29 14:39:43.332530 : Number rows updated : 26989. Progress update 2022-11-29 14:39:43.333028 : -------------------------------------------------------------------------------. Progress update 2022-11-29 14:39:43.333028 : 770,285,829,500 ns - Total time launcher. Progress update 2022-11-29 14:39:43.333028 : INFO.00.006 End Launcher. Progress update 2022-11-29 14:39:43.333028 : ===============================================================================.","title":"1.2 c_l_l - Correct decimal US latitudes and longitudes"},{"location":"operation.html#13-c_p_d-cleansing-postgresql-data","text":"The task cleans up data abnormalities in the database. This includes the following activities: remove trailing whitespace in string data types (trimming), converting string data types that contain only whitespace to NULL (nullifying). As a result, a much simplified simplification of data is possible, e.g. for comparisons. The functionality is limited to the following database columns: DB table DB columns events ev_city, ev_site_zipcode, latitude, longitude On the one hand, the task can be executed explicitly with the run_io_avstats_db script (task c_p_d ) and, on the other hand, it always runs after loading NTSB MS Access data into the PostgreSQL database (task l_n_a ). Example protocol: Progress update 2022-11-29 13:03:13.182527 : ===============================================================================. Progress update 2022-11-29 13:03:13.182527 : INFO.00.004 Start Launcher. Progress update 2022-11-29 13:03:13.184528 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-29 13:03:13.192529 : INFO.00.005 Argument task='c_p_d'. Progress update 2022-11-29 13:03:13.193028 : -------------------------------------------------------------------------------. Progress update 2022-11-29 13:03:13.193028 : INFO.00.065 Cleansing PostgreSQL data. Progress update 2022-11-29 13:03:13.193028 : -------------------------------------------------------------------------------- Progress update 2022-11-29 13:03:13.264027 : INFO.00.066 Cleansing table 'events' column 'ev_city'. Progress update 2022-11-29 13:03:14.812228 : Number cols trimmed : 47967. Progress update 2022-11-29 13:03:14.853583 : Number cols nullified: 4. Progress update 2022-11-29 13:03:14.854085 : -------------------------------------------------------------------------------- Progress update 2022-11-29 13:03:14.854085 : INFO.00.066 Cleansing table 'events' column 'ev_site_zipcode'. Progress update 2022-11-29 13:03:15.795002 : Number cols trimmed : 48691. Progress update 2022-11-29 13:03:15.870127 : Number cols nullified: 2299. Progress update 2022-11-29 13:03:15.870127 : -------------------------------------------------------------------------------- Progress update 2022-11-29 13:03:15.870632 : INFO.00.066 Cleansing table 'events' column 'latitude'. Progress update 2022-11-29 13:03:16.720436 : Number cols trimmed : 42292. Progress update 2022-11-29 13:03:17.979937 : Number cols nullified: 42292. Progress update 2022-11-29 13:03:17.980436 : -------------------------------------------------------------------------------- Progress update 2022-11-29 13:03:17.980436 : INFO.00.066 Cleansing table 'events' column 'longitude'. Progress update 2022-11-29 13:03:19.136341 : Number cols trimmed : 42292. Progress update 2022-11-29 13:03:21.218871 : Number cols nullified: 42292. Progress update 2022-11-29 13:03:21.218871 : -------------------------------------------------------------------------------. Progress update 2022-11-29 13:03:21.218871 : 8,180,840,400 ns - Total time launcher. Progress update 2022-11-29 13:03:21.219372 : INFO.00.006 End Launcher. Progress update 2022-11-29 13:03:21.219372 : ===============================================================================.","title":"1.3 c_p_d - Cleansing PostgreSQL data"},{"location":"operation.html#14-d_d_f-delete-the-postgresql-database-files","text":"This task deletes all PostgreSQL database files. The execution requires administration rights. Subsequently, the PostgreSQL database must be completely rebuilt. Tip : The administration password is required to use the administration rights. This can be difficult with the Windows operating system, as there seems to be no functionality to set the administration password. The use of the Windows Subsystem for Linux can help here.","title":"1.4 d_d_f - Delete the PostgreSQL database files"},{"location":"operation.html#15-d_d_s-drop-the-postgresql-database-schema","text":"Successful execution of this task requires that no other process uses the database defined with the postgres_dbname parameter. After execution, the database with all objects and the database user defined with the postgres_user parameter are deleted. Example protocol: Progress update 2022-11-22 19:40:05.757556 : ===============================================================================. Progress update 2022-11-22 19:40:05.757556 : INFO.00.004 Start Launcher. Progress update 2022-11-22 19:40:05.762558 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-22 19:40:05.771056 : INFO.00.005 Argument task='d_d_s'. Progress update 2022-11-22 19:40:05.771558 : -------------------------------------------------------------------------------. Progress update 2022-11-22 19:40:05.771558 : INFO.00.046 Dropping the database schema. Progress update 2022-11-22 19:40:05.771558 : -------------------------------------------------------------------------------. Progress update 2022-11-22 19:40:06.742328 : INFO.00.019 Database is dropped: io_avstats_db. Progress update 2022-11-22 19:40:06.775829 : INFO.00.018 Database user is dropped: io_aero. Progress update 2022-11-22 19:40:06.775829 : -------------------------------------------------------------------------------. Progress update 2022-11-22 19:40:06.775829 : 1,186,272,600 ns - Total time launcher. Progress update 2022-11-22 19:40:06.775829 : INFO.00.006 End Launcher. Progress update 2022-11-22 19:40:06.776329 : ===============================================================================.","title":"1.5 d_d_s - Drop the PostgreSQL database schema"},{"location":"operation.html#16-d_n_a-download-a-ntsb-ms-access-database-file","text":"This task allows files containing aviation accident data to be downloaded from the NTSB download site. These files are there as MS Access databases in a compressed format. The following subtasks are executed: A connection to the NTSB download page is established. The selected file is downloaded to the local system in chunks. The downloaded file is then unpacked. A script with the database schema definition is created with RazorSQL from the downloaded database. The newly created script is then compared with a reference script for matching. Subsequently, the downloaded data can be loaded into the PostgreSQL database with the task l_n_a (Load NTSB MS Access database data into PostgreSQL). Further details can be found here . Example protocol: Progress update 2022-11-23 12:20:05.623207 : ===============================================================================. Progress update 2022-11-23 12:20:05.623207 : INFO.00.004 Start Launcher. Progress update 2022-11-23 12:20:05.625207 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-23 12:20:05.633207 : INFO.00.008 Arguments task='d_n_a' msaccess='up22oct'. Progress update 2022-11-23 12:20:05.633707 : -------------------------------------------------------------------------------. Progress update 2022-11-23 12:20:05.633707 : INFO.00.047 Downloading NTSB MS Access database file 'up22OCT'. Progress update 2022-11-23 12:20:05.633707 : -------------------------------------------------------------------------------- Progress update 2022-11-23 12:20:06.163453 : INFO.00.013 The connection to the MS Access database file 'up22OCT.zip' on the NTSB download page was successfully established. Progress update 2022-11-23 12:20:07.188487 : INFO.00.014 From the file 'up22OCT.zip' 2 chunks were downloaded. Progress update 2022-11-23 12:20:07.206986 : INFO.00.015 The file 'up22OCT.zip' was successfully unpacked. Progress update 2022-11-23 12:20:07.218987 : INFO.00.051 msaccess_file ='D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\data\\download\\IO-AVSTATS.mdb'. Progress update 2022-11-23 12:20:07.219487 : INFO.00.051 msaccess_file ='D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\data\\download\\up22OCT.sql'. Progress update 2022-11-23 12:20:07.219487 : INFO.00.052 razorsql_jar_file ='C:\\Program Files\\RazorSQL\\razorsql.jar'. Progress update 2022-11-23 12:20:07.219487 : INFO.00.053 razorsql_java_path='C:\\Program Files\\RazorSQL\\jre11\\bin\\java'. 1669202407306: launching RazorSQL . . . 1669202407307: args . . . -backup IO-AVSTATS null null ; null D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\data\\download\\up22OCT.sql NO tables YES null NO NO 1669202407342: userName: walte 1669202407342: libraryPath: C:\\Program Files\\RazorSQL\\jre11\\bin;C:\\WINDOWS\\Sun\\Java\\bin;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\Users\\walte\\.virtualenvs\\io-avstats-db-NXLRYNgF\\Scripts;C:\\Program Files (x86)\\VMware\\VMware Player\\bin\\;C:\\Program Files (x86)\\infogridpacific\\AZARDI;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\Calibre2\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\Git LFS;C:\\Program Files\\Microsoft SQL Server\\110\\Tools\\Binn\\;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\Program Files\\Pandoc\\;C:\\Program Files\\TortoiseGit\\bin;C:\\Software\\GnuWin32\\bin;C:\\WINDOWS;C:\\WINDOWS\\system32;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Users\\walte\\.nimble\\bin;C:\\Windows;C:\\Windows\\system32;C:\\Windows\\System32\\OpenSSH\\;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Software\\.cargo\\bin;%GRADLE_HOME%\\bin;%HOME_ELIXIR%\\bin;%HOME_ERLANG%\\bin;%HOME_GO%\\bin;%HOME_JULIA%\\bin;%HOME_NIM%\\bin;C:\\Software\\PostgreSQL\\15\\bin;C:\\Software\\poppler-0.68.0\\bin;C:\\Software\\Python\\Python310;C:\\Software\\Python\\Python310\\Scripts;C:\\Software\\rebar3;%HOME_RUST%\\bin;C:\\Software\\Tesseract-OCR;C:\\Software\\jdk-18.0.2\\bin;%KOTLIN_HOME%\\bin;C:\\Software\\oracle\\instantclient_21_6;C:\\Software\\Gpg4win\\..\\GnuPG\\bin;C:\\Program Files\\Git\\cmd;C:\\Program Files\\LLVM\\bin;C:\\Program Files\\nodejs\\;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\Users\\walte\\.cargo\\bin;C:\\Users\\walte\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Software\\Microsoft VS Code\\bin;C:\\Users\\walte\\go\\bin;C:\\Software\\texlive\\2021\\bin\\win32;c:\\users\\walte\\.local\\bin;C:\\Users\\walte\\AppData\\Local\\JetBrains\\Toolbox\\scripts;C:\\Users\\walte\\AppData\\Roaming\\npm;. 1669202407343: javaVersion: 11.0.13 1669202407343: 1669202407343: Verifying RazorSQL resources location. 1669202407343: 1669202407343: testing base url: / = file:/C:/Program%20Files/RazorSQL/ 1669202407343: 1669202407344: testString1: file:/C:/Program%20Files/RazorSQL/razorsql.jar 1669202407344: testString2: file:/C:/Program%20Files/RazorSQL/data/base.ssql 1669202407344: testFile1: C:\\Program Files\\RazorSQL\\razorsql.jar 1669202407344: testFile2: C:\\Program Files\\RazorSQL\\data\\base.ssql 1669202407344: both test file exists. Base URL found. 1669202407344: resource directory: file:/C:/Program%20Files/RazorSQL/ 1669202407344: user home: C:\\Users\\walte 1669202407346: user profile: C:\\Users\\walte 1669202407346: app data: C:\\Users\\walte\\AppData\\Roaming 1669202407346: checking write access to: C:\\Users\\walte\\AppData\\Roaming 1669202407346: write dir: C:\\Users\\walte\\AppData\\Roaming\\RichardsonSoftware 1669202407346: can write to C:\\Users\\walte\\AppData\\Roaming 1669202407346: user.home: C:\\Users\\walte\\AppData\\Roaming 1669202407346: RazorSQL Scratch Directory: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL 1669202407347: RazorSQL Scratch Directory exists 1669202407347: checking for sub directories 1669202407347: razorsql launch log: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\razorsql_launch_log.txt 1669202407347: launch log file = C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\razorsql_launch_log.txt 1669202407347: Checking for graphics properties 1669202407348: graphics properties file: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\data\\graphics_properties.txt 1669202407348: gOverride: null 1669202407348: not disabling advanced graphics 1669202407348: path0: file:/C:/Program%20Files/RazorSQL/data/run.ssql 1669202407348: path1: file:/C:/Program%20Files/RazorSQL/razorsql.jar 1669202407348: runArgs: true 1669202407348: showScreen: false 1669202407349: args[0]: -backup 1669202407349: args[1]: IO-AVSTATS 1669202407349: args[2]: null 1669202407349: args[3]: null 1669202407349: args[4]: ; 1669202407349: args[5]: null 1669202407349: args[6]: D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\data\\download\\up22OCT.sql 1669202407349: args[7]: NO 1669202407349: args[8]: tables 1669202407349: args[9]: YES 1669202407349: args[10]: null 1669202407349: args[11]: NO 1669202407349: args[12]: NO 1669202407349: Command: -backup 1669202407350: Running -backup h: name = C:\\Program Files\\RazorSQL\\data\\run.ssql h: name = C:\\Program Files\\RazorSQL\\razorsql.jar 1669202407356: Attempting to load . . . command found uOne: file:/C:/Program%20Files/RazorSQL/ h: name = C:\\Program Files\\RazorSQL\\data\\run.ssql 1669202407367reading file . . .C:\\Program Files\\RazorSQL\\data\\base.ssql 1669202407392done reading . . . 1669202407401done converting 1669202407401starting lib load. 1669202407413lib load complete. In command line processor Max Memory: 30688.0 Current Total Memory: 2048.0 Free Memory: 1957.998046875 1669202407486: r init 1669202407486: d init 1669202407487: get default file encoding 1669202407487: end d init custom home directory: null Checking for user data from old versions 1669202407488: user home: C:\\Users\\walte 1669202407489: user profile: C:\\Users\\walte 1669202407489: app data: C:\\Users\\walte\\AppData\\Roaming 1669202407489: checking write access to: C:\\Users\\walte\\AppData\\Roaming 1669202407489: write dir: C:\\Users\\walte\\AppData\\Roaming\\RichardsonSoftware 1669202407489: can write to C:\\Users\\walte\\AppData\\Roaming newHome: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL dataHome: C:\\Users\\walte\\AppData\\Roaming/RazorSQL/data/ preferences file: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\data\\preferences.txt Profiles Exist 1669202407499: loading icons 1669202407663: done r init Getting connection data from: IO-AVSTATS 1669202407665: r init 1669202407665: d init 1669202407665: get default file encoding 1669202407665: end d init custom home directory: null Checking for user data from old versions newHome: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL dataHome: C:\\Users\\walte\\AppData\\Roaming/RazorSQL/data/ preferences file: C:\\Users\\walte\\AppData\\Roaming\\RazorSQL\\data\\preferences.txt Profiles Exist 1669202407666: loading icons 1669202407675: done r init getting connection . . . Not using SSH Tunnel driver: sun.jdbc.odbc.JdbcOdbcDriver classLocation: C:\\Program Files\\RazorSQL\\drivers\\common\\odbc.jar loadedCommonJars: false commonURL: file:/C:/Program%20Files/RazorSQL/drivers/common/ commonDir: C:\\Program Files\\RazorSQL\\drivers\\common commonFiles[0]: file:/C:/Program%20Files/RazorSQL/drivers/common/activation.jar commonFiles[1]: file:/C:/Program%20Files/RazorSQL/drivers/common/common.jar commonFiles[2]: file:/C:/Program%20Files/RazorSQL/drivers/common/jaxb-api.jar commonFiles[3]: file:/C:/Program%20Files/RazorSQL/drivers/common/jaxb-core.jar commonFiles[4]: file:/C:/Program%20Files/RazorSQL/drivers/common/jaxb-impl.jar commonFiles[6]: file:/C:/Program%20Files/RazorSQL/drivers/common/odbc.jar connection type: ODBC final classLocation: C:\\Program Files\\RazorSQL\\drivers\\common\\odbc.jar classLocation file: C:\\Program Files\\RazorSQL\\drivers\\common\\odbc.jar building sql manager Loading driver Done loading driver Getting connection with no login info JdbcOdbcDriver: in initialize OdbcApi == null Creating new OdbcApi, nativePrefix: JdbcOdbc constructor Attempting to load JdbcOdbc library Got OdbcApi: sun.jdbc.odbc.JdbcOdbc@2d127a61 Getting charset JdbcOdbcDriver.OdbcApi.charSet: Cp1252 Connection obtained obtained connection database major version = 2 database product name: ACCESS multiValueInsert: false includeIdentifyColumns: false Calling backup . . . Retrieving Tables . . . Generating Table DDL . . . 1 of 20 number of columns 93 column map size: 93 foundNull: false 2 of 20 number of columns 2 column map size: 2 foundNull: false 3 of 20 number of columns 11 column map size: 11 foundNull: false 4 of 20 number of columns 2 column map size: 2 foundNull: false 5 of 20 number of columns 6 column map size: 6 foundNull: false 6 of 20 number of columns 5 column map size: 5 foundNull: false 7 of 20 number of columns 7 column map size: 7 foundNull: false 8 of 20 number of columns 13 column map size: 13 foundNull: false 9 of 20 number of columns 17 column map size: 17 foundNull: false 10 of 20 number of columns 73 column map size: 73 foundNull: false 11 of 20 number of columns 10 column map size: 10 foundNull: false 12 of 20 number of columns 13 column map size: 13 foundNull: false 13 of 20 number of columns 33 column map size: 33 foundNull: false 14 of 20 number of columns 8 column map size: 8 foundNull: false 15 of 20 number of columns 7 column map size: 7 foundNull: false 16 of 20 number of columns 8 column map size: 8 foundNull: false 17 of 20 number of columns 5 column map size: 5 foundNull: false 18 of 20 number of columns 8 column map size: 8 foundNull: false 19 of 20 number of columns 11 column map size: 11 foundNull: false 20 of 20 number of columns 3 column map size: 3 foundNull: false Generating Alter Table DDL . . . 1 of 20 2 of 20 3 of 20 4 of 20 5 of 20 6 of 20 7 of 20 8 of 20 9 of 20 10 of 20 11 of 20 12 of 20 13 of 20 14 of 20 15 of 20 16 of 20 17 of 20 18 of 20 19 of 20 20 of 20 backup finished closing connection . . . connection closed. Shutting down logging streams Done shutting down logging streams Exiting . . . Progress update 2022-11-23 12:20:08.292807 : INFO.00.011 The DDL script for the MS Access database 'up22OCT.mdb' was created successfully. Progress update 2022-11-23 12:20:08.297807 : INFO.00.012 The DDL script for the MS Access database 'up22OCT.mdb' is identical to the reference script. Progress update 2022-11-23 12:20:08.297807 : -------------------------------------------------------------------------------. Progress update 2022-11-23 12:20:08.297807 : 2,816,100,200 ns - Total time launcher. Progress update 2022-11-23 12:20:08.297807 : INFO.00.006 End Launcher. Progress update 2022-11-23 12:20:08.298305 : ===============================================================================.","title":"1.6 d_n_a - Download a NTSB MS Access database file"},{"location":"operation.html#17-d_s_f-download-basic-simplemaps-files","text":"This task downloads the basic versions of the two databases United States Cities and US Zip Codes from the simplemaps website to the file directory defined in download_work_dir . Subsequently, the downloaded data can be loaded into the PostgreSQL database with the task l_s_d (Load simplemaps data into PostgreSQL). Further details can be found here . Example protocol: Progress update 2022-11-27 14:59:11.670613 : ===============================================================================. Progress update 2022-11-27 14:59:11.670613 : INFO.00.004 Start Launcher. Progress update 2022-11-27 14:59:11.672613 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-27 14:59:11.681113 : INFO.00.005 Argument task='d_s_f'. Progress update 2022-11-27 14:59:11.681113 : -------------------------------------------------------------------------------. Progress update 2022-11-27 14:59:11.681113 : INFO.00.048 Downloading basic simplemaps files. Progress update 2022-11-27 14:59:11.681113 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:59:11.917087 : INFO.00.030 The connection to the US city file 'simplemaps_uscities_basicv1.75.zip' on the simplemaps download page was successfully established. Progress update 2022-11-27 14:59:14.671525 : INFO.00.023 From the file 'simplemaps_uscities_basicv1.75.zip' 8 chunks were downloaded. Progress update 2022-11-27 14:59:14.705528 : INFO.00.024 The file 'simplemaps_uscities_basicv1.75.zip' was successfully unpacked. Progress update 2022-11-27 14:59:14.916882 : INFO.00.022 The connection to the US zip code file 'simplemaps_uszips_basicv1.81.zip' on the simplemaps download page was successfully established. Progress update 2022-11-27 14:59:15.642184 : INFO.00.023 From the file 'simplemaps_uszips_basicv1.81.zip' 8 chunks were downloaded. Progress update 2022-11-27 14:59:15.675685 : INFO.00.024 The file 'simplemaps_uszips_basicv1.81.zip' was successfully unpacked. Progress update 2022-11-27 14:59:15.676184 : -------------------------------------------------------------------------------. Progress update 2022-11-27 14:59:15.676184 : 4,151,071,300 ns - Total time launcher. Progress update 2022-11-27 14:59:15.676184 : INFO.00.006 End Launcher. Progress update 2022-11-27 14:59:15.676184 : ===============================================================================.","title":"1.7 d_s_f - Download basic simplemaps files"},{"location":"operation.html#18-d_z_f-download-the-zip-code-database-file","text":"With this task, the free version of the file ZIP Code Database can be downloaded from the website United States Zip Codes.org . However, since a license window appears first before the actual download, it is better to download the file manually. Therefore, this task is currently not offered in the run_io_avstats_db shell script menu. Example protocol: Progress update 2022-11-26 07:12:23.326957 : ===============================================================================. Progress update 2022-11-26 07:12:23.326957 : INFO.00.004 Start Launcher. Progress update 2022-11-26 07:12:23.328958 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-26 07:12:23.336956 : INFO.00.005 Argument task='d_z_f'. Progress update 2022-11-26 07:12:23.337457 : -------------------------------------------------------------------------------. Progress update 2022-11-26 07:12:23.337457 : INFO.00.055 Downloading ZIP Code Database file. Progress update 2022-11-26 07:12:23.337457 : -------------------------------------------------------------------------------- File \"D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\src\\launcher.py\", line 416, in <module> main(sys.argv) File \"D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\src\\launcher.py\", line 376, in main avstats.download_zip_code_db_file() File \"D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\src\\io_avstats_db\\avstats.py\", line 98, in download_zip_code_db_file db_dml_base.download_zip_code_db_file() File \"D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\src\\io_avstats_db\\db_dml_base.py\", line 4052, in download_zip_code_db_file io_utils.terminate_fatal( File \"D:\\SoftDevelopment\\Projects\\IO-Aero\\io-avstats-db\\src\\io_avstats_db\\io_utils.py\", line 99, in terminate_fatal traceback.print_stack() FATAL ERROR: program abort =====> FATAL ERROR: program abort =====> ERROR.00.906 Unexpected response status code='403' <===== FATAL ERROR FATAL ERROR: program abort =====> Processing of the script run_io_avstats was aborted, error code=0","title":"1.8 d_z_f - Download the ZIP Code Database file"},{"location":"operation.html#19-l_c_d-load-data-from-a-correction-file-into-postgresql","text":"TODO This task allows files containing aviation accident data to be downloaded from the NTSB download site. These files are there as MS Access databases in a compressed format. The following subtasks are executed: A connection to the NTSB download page is established. The selected file is downloaded to the local system in chunks. The downloaded file is then unpacked. A script with the database schema definition is created with RazorSQL from the downloaded database. The newly created script is then compared with a reference script for matching.","title":"1.9 l_c_d - Load data from a correction file into PostgreSQL"},{"location":"operation.html#110-l_c_s-load-country-and-state-data-into-postgresql","text":"TODO Example protocol: Progress update 2022-11-27 14:15:55.817859 : ===============================================================================. Progress update 2022-11-27 14:15:55.817859 : INFO.00.004 Start Launcher. Progress update 2022-11-27 14:15:55.819858 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-27 14:15:55.827859 : INFO.00.005 Argument task='l_c_s'. Progress update 2022-11-27 14:15:55.827859 : -------------------------------------------------------------------------------. Progress update 2022-11-27 14:15:55.827859 : INFO.00.057 Loading country and state data. Progress update 2022-11-27 14:15:55.828359 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:55.894605 : INFO.00.059 Loading country data. Progress update 2022-11-27 14:15:55.894605 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:55.954085 : Number rows selected : 52. Progress update 2022-11-27 14:15:55.954597 : Number rows inserted : 1. Progress update 2022-11-27 14:15:55.954597 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:55.954597 : INFO.00.060 Loading state data. Progress update 2022-11-27 14:15:55.954597 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:57.545443 : Number rows selected : 52. Progress update 2022-11-27 14:15:57.545443 : Number rows inserted : 51. Progress update 2022-11-27 14:15:57.570593 : -------------------------------------------------------------------------------. Progress update 2022-11-27 14:15:57.570593 : 1,896,734,300 ns - Total time launcher. Progress update 2022-11-27 14:15:57.570593 : INFO.00.006 End Launcher. Progress update 2022-11-27 14:15:57.571096 : ===============================================================================.","title":"1.10 l_c_s - Load country and state data into PostgreSQL"},{"location":"operation.html#111-l_n_a-load-ntsb-ms-access-database-data-into-postgresql","text":"This task transfers the data from an NTSB MS Access database previously downloaded from the NTSB website to the PostgreSQL database. The same MS Access database can be processed several times with this task without any problems, since only the changes are newly transferred to the PostgreSQL database. The initial loading is done with both NTSB MS Access databases Pre2008 ubd avall. After that only the monthly updates are then transferred. Further details can be found here . Example protocol: Progress update 2022-11-27 14:15:55.817859 : ===============================================================================. Progress update 2022-11-27 14:15:55.817859 : INFO.00.004 Start Launcher. Progress update 2022-11-27 14:15:55.819858 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-27 14:15:55.827859 : INFO.00.005 Argument task='l_c_s'. Progress update 2022-11-27 14:15:55.827859 : -------------------------------------------------------------------------------. Progress update 2022-11-27 14:15:55.827859 : INFO.00.057 Loading country and state data. Progress update 2022-11-27 14:15:55.828359 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:55.894605 : INFO.00.059 Loading country data. Progress update 2022-11-27 14:15:55.894605 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:55.954085 : Number rows selected : 52. Progress update 2022-11-27 14:15:55.954597 : Number rows inserted : 1. Progress update 2022-11-27 14:15:55.954597 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:55.954597 : INFO.00.060 Loading state data. Progress update 2022-11-27 14:15:55.954597 : -------------------------------------------------------------------------------- Progress update 2022-11-27 14:15:57.545443 : Number rows selected : 52. Progress update 2022-11-27 14:15:57.545443 : Number rows inserted : 51. Progress update 2022-11-27 14:15:57.570593 : -------------------------------------------------------------------------------. Progress update 2022-11-27 14:15:57.570593 : 1,896,734,300 ns - Total time launcher. Progress update 2022-11-27 14:15:57.570593 : INFO.00.006 End Launcher. Progress update 2022-11-27 14:15:57.571096 : ===============================================================================.","title":"1.11 l_n_a - Load NTSB MS Access database data into PostgreSQL"},{"location":"operation.html#112-l_s_d-load-simplemaps-data-into-postgresql","text":"TODO This task transfers the data from an NTSB MS Access database previously downloaded from the NTSB website to the PostgreSQL database. The same MS Access database can be processed several times with this task without any problems, since only the changes are newly transferred to the PostgreSQL database. The initial loading is done with both MS Access databases Pre2008 ubd avall. After that only the monthly updates are then transferred. Example protocol: Progress update 2022-11-21 18:52:41.629692 : ===============================================================================. Progress update 2022-11-21 18:52:41.629692 : INFO.00.004 Start Launcher. Progress update 2022-11-21 18:52:41.631692 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-21 18:52:41.640190 : INFO.00.005 Argument task='l_s_d'. Progress update 2022-11-21 18:52:41.640190 : -------------------------------------------------------------------------------. Progress update 2022-11-21 18:52:41.685192 : INFO.00.039 Database table io_lat_lng: Loading the zipcode data from file uscities.xlsx. Progress update 2022-11-21 18:55:11.254186 : Number of rows so far read : 5000. Progress update 2022-11-21 18:57:31.973745 : Number of rows so far read : 10000. Progress update 2022-11-21 18:59:47.094776 : Number of rows so far read : 15000. Progress update 2022-11-21 19:02:08.097587 : Number of rows so far read : 20000. Progress update 2022-11-21 19:04:27.858850 : Number of rows so far read : 25000. Progress update 2022-11-21 19:06:49.294785 : Number of rows so far read : 30000. Progress update 2022-11-21 19:09:07.306370 : Number of rows so far read : 35000. Progress update 2022-11-21 19:11:28.117981 : Number of rows so far read : 40000. Progress update 2022-11-21 19:12:10.470503 : Number rows selected : 41620. Progress update 2022-11-21 19:12:10.470503 : Number rows inserted : 41620. Progress update 2022-11-21 19:12:10.530003 : INFO.00.025 Database table io_lat_lng: Loading the zipcode data from file uszips.xlsx. Progress update 2022-11-21 19:14:41.797284 : Number of rows so far read : 5000. Progress update 2022-11-21 19:17:10.506606 : Number of rows so far read : 10000. Progress update 2022-11-21 19:19:38.757474 : Number of rows so far read : 15000. Progress update 2022-11-21 19:22:08.373896 : Number of rows so far read : 20000. Progress update 2022-11-21 19:24:29.851643 : Number of rows so far read : 25000. Progress update 2022-11-21 19:26:58.685870 : Number of rows so far read : 30000. Progress update 2022-11-21 19:28:47.784316 : Number rows selected : 33788. Progress update 2022-11-21 19:28:47.784316 : Number rows inserted : 9651. Progress update 2022-11-21 19:28:47.784316 : Number rows updated : 24133. Progress update 2022-11-21 19:28:47.784815 : INFO.00.026 Database table io_us_stats: Loading data. Progress update 2022-11-21 19:28:49.122315 : Number rows selected : 56. Progress update 2022-11-21 19:28:49.122315 : Number rows inserted : 51. Progress update 2022-11-21 19:28:49.122315 : INFO.00.027 Database table io_lat_lng: Loading the city data. Progress update 2022-11-21 19:31:05.759170 : Number of rows so far read : 5000. Progress update 2022-11-21 19:33:29.969709 : Number of rows so far read : 10000. Progress update 2022-11-21 19:35:42.591083 : Number of rows so far read : 15000. Progress update 2022-11-21 19:38:00.961652 : Number of rows so far read : 20000. Progress update 2022-11-21 19:40:21.097913 : Number of rows so far read : 25000. Progress update 2022-11-21 19:42:39.434729 : Number of rows so far read : 30000. Progress update 2022-11-21 19:45:05.010766 : Number of rows so far read : 35000. Progress update 2022-11-21 19:46:26.359902 : Number rows selected : 37982. Progress update 2022-11-21 19:46:26.360403 : Number rows inserted : 37982. Progress update 2022-11-21 19:46:26.360403 : INFO.00.028 Database table io_lat_lng: Loading the state data. Progress update 2022-11-21 19:46:28.312902 : Number rows selected : 56. Progress update 2022-11-21 19:46:28.312902 : Number rows inserted : 56. Progress update 2022-11-21 19:46:28.313404 : INFO.00.029 Database table io_lat_lng: Loading the country data. Progress update 2022-11-21 19:46:28.346407 : Number rows inserted : 1. Progress update 2022-11-21 19:46:28.391904 : INFO.00.027 Database table io_lat_lng: Loading the city data. Progress update 2022-11-21 19:48:23.972756 : Number of rows so far read : 5000. Progress update 2022-11-21 19:50:01.546746 : Number of rows so far read : 10000. Progress update 2022-11-21 19:51:44.317761 : Number of rows so far read : 15000. Progress update 2022-11-21 19:53:32.879336 : Number of rows so far read : 20000. Progress update 2022-11-21 19:55:18.566257 : Number of rows so far read : 25000. Progress update 2022-11-21 19:56:46.677403 : Number of rows so far read : 30000. Progress update 2022-11-21 19:56:52.002902 : Number rows selected : 30409. Progress update 2022-11-21 19:56:52.003409 : Number rows updated : 20621. Progress update 2022-11-21 19:56:52.003409 : -------------------------------------------------------------------------------. Progress update 2022-11-21 19:56:52.003409 : 3,850,528,217,800 ns - Total time launcher. Progress update 2022-11-21 19:56:52.003903 : INFO.00.006 End Launcher. Progress update 2022-11-21 19:56:52.003903 : ===============================================================================.","title":"1.12 l_s_d - Load simplemaps data into PostgreSQL"},{"location":"operation.html#113-l_z_d-load-zip-code-database-data-into-postgresql","text":"TODO This task transfers the data from an NTSB MS Access database previously downloaded from the NTSB website to the PostgreSQL database. The same MS Access database can be processed several times with this task without any problems, since only the changes are newly transferred to the PostgreSQL database. The initial loading is done with both MS Access databases Pre2008 ubd avall. After that only the monthly updates are then transferred. Example protocol: Progress update 2022-11-29 14:12:25.117005 : ===============================================================================. Progress update 2022-11-29 14:12:25.117502 : INFO.00.004 Start Launcher. Progress update 2022-11-29 14:12:25.119503 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-29 14:12:25.128005 : INFO.00.005 Argument task='l_z_d'. Progress update 2022-11-29 14:12:25.128005 : -------------------------------------------------------------------------------. Progress update 2022-11-29 14:12:25.128005 : INFO.00.056 Loading ZIP Code Database data. Progress update 2022-11-29 14:12:25.128005 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:12:25.179505 : INFO.00.061 Database table io_lat_lng: Loading the estimated zip code data. Progress update 2022-11-29 14:12:25.179505 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:13:21.866512 : Number of rows so far read : 5000. Progress update 2022-11-29 14:14:16.970167 : Number of rows so far read : 10000. Progress update 2022-11-29 14:15:10.266064 : Number of rows so far read : 15000. Progress update 2022-11-29 14:16:08.694846 : Number of rows so far read : 20000. Progress update 2022-11-29 14:16:47.652646 : Number of rows so far read : 25000. Progress update 2022-11-29 14:17:32.877233 : Number of rows so far read : 30000. Progress update 2022-11-29 14:18:06.643788 : Number of rows so far read : 35000. Progress update 2022-11-29 14:18:55.944095 : Number of rows so far read : 40000. Progress update 2022-11-29 14:19:13.847623 : Number rows selected : 42735. Progress update 2022-11-29 14:19:13.848123 : Number rows inserted : 10115. Progress update 2022-11-29 14:19:13.848123 : Number rows duplicate: 32660. Progress update 2022-11-29 14:19:13.848123 : Number rows updated : 3252. Progress update 2022-11-29 14:19:13.848123 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:19:13.919921 : INFO.00.063 Processed data source 'average'. Progress update 2022-11-29 14:19:13.919921 : Number rows deleted : 7631. Progress update 2022-11-29 14:19:13.919921 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:19:13.919921 : INFO.00.062 Database table io_lat_lng: Loading the averaged city data. Progress update 2022-11-29 14:19:13.919921 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:20:03.226487 : Number of rows so far read : 5000. Progress update 2022-11-29 14:20:49.819656 : Number of rows so far read : 10000. Progress update 2022-11-29 14:21:36.281703 : Number of rows so far read : 15000. Progress update 2022-11-29 14:22:22.562620 : Number of rows so far read : 20000. Progress update 2022-11-29 14:23:04.766437 : Number of rows so far read : 25000. Progress update 2022-11-29 14:23:48.995380 : Number of rows so far read : 30000. Progress update 2022-11-29 14:24:37.784042 : Number of rows so far read : 35000. Progress update 2022-11-29 14:25:21.929065 : Number of rows so far read : 40000. Progress update 2022-11-29 14:26:07.064444 : Number rows selected : 44743. Progress update 2022-11-29 14:26:07.064444 : Number rows inserted : 14392. Progress update 2022-11-29 14:26:07.064444 : Number rows duplicate: 30351. Progress update 2022-11-29 14:26:07.090743 : -------------------------------------------------------------------------------. Progress update 2022-11-29 14:26:07.090743 : 822,117,242,100 ns - Total time launcher. Progress update 2022-11-29 14:26:07.090743 : INFO.00.006 End Launcher. Progress update 2022-11-29 14:26:07.090743 : ===============================================================================.","title":"1.13 l_z_d - Load ZIP Code Database data into PostgreSQL"},{"location":"operation.html#114-r_d_s-refresh-the-postgresql-database-schema","text":"Hereby changes can be made to the database schema. The task can be executed several times without problems, since before a change is always first checked whether this has already been done. Materialized database view io_app_faaus2008 - provides the data for processing the task c_l_l (Correct decimal US latitudes and longitudes). Example protocol: Progress update 2022-12-19 08:37:09.337180 : INFO.00.004 Start Launcher. Progress update 2022-12-19 08:37:09.342679 : INFO.00.001 The logger is configured and ready. Progress update 2022-12-19 08:37:09.352180 : INFO.00.005 Argument task='r_d_s'. Progress update 2022-12-19 08:37:09.352180 : -------------------------------------------------------------------------------. Progress update 2022-12-19 08:37:09.352180 : INFO.00.071 Refreshing the database schema. Progress update 2022-12-19 08:37:09.352180 : -------------------------------------------------------------------------------- Progress update 2022-12-19 08:37:19.366370 : INFO.00.069 Materialized database view is refreshed: io_app_faaus2008. Progress update 2022-12-19 08:37:19.366370 : -------------------------------------------------------------------------------. Progress update 2022-12-19 08:37:19.366370 : 10,187,690,800 ns - Total time launcher. Progress update 2022-12-19 08:37:19.366370 : INFO.00.006 End Launcher. Progress update 2022-12-19 08:37:19.366370 : ===============================================================================.","title":"1.14 r_d_s - Refresh the PostgreSQL database schema"},{"location":"operation.html#115-s_d_c-set-up-the-postgresql-database-container","text":"The default installation of the PostgreSQL database is done using the official Docker images from Dockerhub - see here . This task consists of the following steps: any running Docker container is stopped. any existing Docker container is deleted. if not already present, the file directory for the PostgreSQL database files is created. the Docker network for the PostgreSQL database is created if it does not already exist. the PostgreSQL Docker image is either created or updated based on DockerHub. a new PostgreSQL Docker container is started. Example protocol: Docker stop/rm io_avstats_db_dev_container .................... before: CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 66c741493677 postgres:latest \"docker-entrypoint.s\u2026\" 8 hours ago Up 8 hours 0.0.0.0:5433->5432/tcp io_avstats_db_dev_container a4469ea39fdd postgres:latest \"docker-entrypoint.s\u2026\" 2 weeks ago Up 10 hours 0.0.0.0:5432->5432/tcp io_avstats_container f67eb28b8888 portainer/portainer-ce \"/portainer\" 4 weeks ago Up 10 hours 0.0.0.0:8000->8000/tcp, 0.0.0.0:9000->9000/tcp, 9443/tcp portainer 66c741493677 postgres:latest \"docker-entrypoint.s\u00d4\u00c7\u00aa\" 8 hours ago Up 8 hours 0.0.0.0:5433->5432/tcp io_avstats_db_dev_container io_avstats_db_dev_container 66c741493677 postgres:latest \"docker-entrypoint.s\u00d4\u00c7\u00aa\" 8 hours ago Exited (0) Less than a second ago io_avstats_db_dev_container io_avstats_db_dev_container ............................................................. after: CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES a4469ea39fdd postgres:latest \"docker-entrypoint.s\u2026\" 2 weeks ago Up 10 hours 0.0.0.0:5432->5432/tcp io_avstats_container f67eb28b8888 portainer/portainer-ce \"/portainer\" 4 weeks ago Up 10 hours 0.0.0.0:8000->8000/tcp, 0.0.0.0:9000->9000/tcp, 9443/tcp portainer Timer 4.0 - Command Line Timer - www.Gammadyne.com Copyright (C) 2007-2017 by Greg Wittmeyer - All Rights Reserved Timer started: 22.11.2022 19:35:22 PostgreSQL -------------------------------------------------------------------------------- Docker create io_avstats_db_dev_container (PostgreSQL latest) Docker network io_avstats_db_dev_net already existing 93a1342e70d367bee07fa9b021293324d7ce04a8113563a3d995d63f9d5b6172 Docker start io_avstats_db_dev_container (PostgreSQL ) ... io_avstats_db_dev_container NETWORK ID NAME DRIVER SCOPE 6c9fa25a23dc AVSTATS_POSTGRES_NET bridge local ad56537ead3f bridge bridge local da3331b29cb2 host host local d6ad44ee9141 io_avstats_db_dev_net bridge local e33d9f5149d3 io_avstats_net bridge local 3df9e6ac5dfa none null local [ { \"Name\": \"io_avstats_db_dev_net\", \"Id\": \"d6ad44ee9141424aec5d8e5643d4f4349e13482935a594f2553f4a7fd4648446\", \"Created\": \"2022-11-06T12:04:36.9326894Z\", \"Scope\": \"local\", \"Driver\": \"bridge\", \"EnableIPv6\": false, \"IPAM\": { \"Driver\": \"default\", \"Options\": {}, \"Config\": [ { \"Subnet\": \"172.20.0.0/16\", \"Gateway\": \"172.20.0.1\" } ] }, \"Internal\": false, \"Attachable\": false, \"Ingress\": false, \"ConfigFrom\": { \"Network\": \"\" }, \"ConfigOnly\": false, \"Containers\": {}, \"Options\": {}, \"Labels\": {} } ] DOCKER PostgreSQL was ready in 30.2 seconds CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 93a1342e70d3 postgres:latest \"docker-entrypoint.s\u2026\" 30 seconds ago Up 29 seconds 0.0.0.0:5433->5432/tcp io_avstats_db_dev_container a4469ea39fdd postgres:latest \"docker-entrypoint.s\u2026\" 2 weeks ago Up 10 hours 0.0.0.0:5432->5432/tcp io_avstats_container f67eb28b8888 portainer/portainer-ce \"/portainer\" 4 weeks ago Up 10 hours 0.0.0.0:8000->8000/tcp, 0.0.0.0:9000->9000/tcp, 9443/tcp portainer","title":"1.15 s_d_c - Set up the PostgreSQL database container"},{"location":"operation.html#116-u_d_s-update-the-postgresql-database-schema","text":"Hereby changes can be made to the database schema. The task can be executed several times without problems, since before a change is always first checked whether this has already been done. New database tables: io_countries : contains latitude and longitude of selected countries. io_lat_lng : used to store the simplemaps and United States Zip Codes.org data. io_states : contains the identification, name, latitude and longitude of all US states. Extensions for database tables: 2.1 Database table events . The columns io_city , io_country , io_latitude , io_longitude , io_site_zipcode and io_state to store manual corrections. The columns io_deviating_dec_latitude , io_deviating_dec_longitude , io_invalid_latitude , io_invalid_longitude , io_invalid_us_city , io_invalid_us_state and , io_invalid_us_zipcode for documenting data plausibility (task v_n_d ). the columns io_dec_lat_lng_actions , io_dec_latitude and io_dec_longitude to store corrected decimal latitude and longitude values. New database views: io_lat_lng_issues - provides the data for processing the task c_l_l (Correct decimal US latitudes and longitudes). io_fatalities_us_2008 - provides event data for aviation accidents in the U.S. since 2008. Example protocol: Progress update 2022-11-27 13:37:13.316694 : ===============================================================================. Progress update 2022-11-27 13:37:13.316694 : INFO.00.004 Start Launcher. Progress update 2022-11-27 13:37:13.318694 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-27 13:37:13.327195 : INFO.00.005 Argument task='u_d_s'. Progress update 2022-11-27 13:37:13.327195 : -------------------------------------------------------------------------------. Progress update 2022-11-27 13:37:13.327195 : INFO.00.045 Updating the database schema. Progress update 2022-11-27 13:37:13.327195 : -------------------------------------------------------------------------------- Progress update 2022-11-27 13:37:13.436194 : INFO.00.007 Database table is available: io_msaccess_file. Progress update 2022-11-27 13:37:13.520032 : INFO.00.007 Database table is available: io_countries. Progress update 2022-11-27 13:37:13.595030 : INFO.00.007 Database table is available: io_states. Progress update 2022-11-27 13:37:13.770060 : INFO.00.007 Database table is available: io_lat_lng. Progress update 2022-11-27 13:37:13.810990 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_city'. Progress update 2022-11-27 13:37:13.844989 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_country'. Progress update 2022-11-27 13:37:13.878039 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_dec_lat_lng_actions'. Progress update 2022-11-27 13:37:13.911450 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_dec_latitude'. Progress update 2022-11-27 13:37:13.944473 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_dec_longitude'. Progress update 2022-11-27 13:37:13.977929 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_deviating_dec_latitude'. Progress update 2022-11-27 13:37:14.010969 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_deviating_dec_longitude'. Progress update 2022-11-27 13:37:14.044449 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_latitude'. Progress update 2022-11-27 13:37:14.077702 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_longitude'. Progress update 2022-11-27 13:37:14.111268 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_us_city'. Progress update 2022-11-27 13:37:14.144267 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_us_state'. Progress update 2022-11-27 13:37:14.178253 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_invalid_us_zipcode'. Progress update 2022-11-27 13:37:14.211254 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_latitude'. Progress update 2022-11-27 13:37:14.244753 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_longitude'. Progress update 2022-11-27 13:37:14.277753 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_site_zipcode'. Progress update 2022-11-27 13:37:14.311253 : INFO.00.031 Database column added: table_schema 'public' table_name 'events' column_name 'io_state'. Progress update 2022-11-27 13:37:14.378313 : INFO.00.032 Database view is available: io_fatalities_us_2008. Progress update 2022-11-27 13:37:14.402813 : INFO.00.032 Database view is available: io_lat_lng_issues. Progress update 2022-11-27 13:37:14.402813 : -------------------------------------------------------------------------------. Progress update 2022-11-27 13:37:14.402813 : 1,230,619,900 ns - Total time launcher. Progress update 2022-11-27 13:37:14.403313 : INFO.00.006 End Launcher. Progress update 2022-11-27 13:37:14.403313 : ===============================================================================.","title":"1.16 u_d_s - Update the PostgreSQL database schema"},{"location":"operation.html#117-v_n_d-verify-selected-ntsb-data","text":"This task can be used to perform a plausibility check for the following columns in the database table events : dec_latitude , dec_longitude , ev_state , ev_site_zipcode , latitude , longitude , and the combination of: ev_state and ev_city , ev_state , ev_city and ev_site_zipcode . The results of the check are stored in the following columns: io_deviating_dec_latitude (absolute difference), io_deviating_dec_longitude (absolute difference), io_invalid_latitude (true), io_invalid_longitude (true), io_invalid_us_city (true), io_invalid_us_city_zipcode (true), io_invalid_us_state (true), io_invalid_us_zipcode (true). The tests are performed according to the following logic: io_deviating_dec_latitude : Absolute difference between dec_latitude and latitude exceeding a given limit in max_deviation_latitude . io_deviating_dec_longitude : Absolute difference between dec_longitude and longitude exceeding a given limit max_deviation_longitude . io_invalid_latitude : Can the latitude in the latitude column be converted to its decimal equivalent? io_invalid_longitude : Can the longitude in the longitude column be converted to its decimal equivalent? io_invalid_us_city : For country USA and the given state, is the specified value in the ev_city column a existing city? io_invalid_us_city_zipcode : For country USA and the given state, are the specified values in the ev_city column and in the ev_site_zipcode column a existing city? io_invalid_us_state : For country USA , is the specified value in the ev_state column a valid state identifier? io_invalid_us_z ipcode : For country USA , is the specified value in the ev_site_zipcode column a existing zip code? Example protocol: Progress update 2022-11-29 14:52:27.221649 : ===============================================================================. Progress update 2022-11-29 14:52:27.221649 : INFO.00.004 Start Launcher. Progress update 2022-11-29 14:52:27.223649 : INFO.00.001 The logger is configured and ready. Progress update 2022-11-29 14:52:27.232150 : INFO.00.005 Argument task='v_n_d'. Progress update 2022-11-29 14:52:27.232150 : -------------------------------------------------------------------------------. Progress update 2022-11-29 14:52:27.232150 : INFO.00.043 Verify selected NTSB data. Progress update 2022-11-29 14:52:27.232150 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:52:27.449649 : INFO.00.064 Verification of table 'events' column(s) 'latitude & longitude'. Progress update 2022-11-29 14:52:27.449649 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:52:28.124099 : Number of rows so far read : 5000. Progress update 2022-11-29 14:52:33.701741 : Number of rows so far read : 10000. Progress update 2022-11-29 14:53:21.979567 : Number of rows so far read : 15000. Progress update 2022-11-29 14:54:41.899911 : Number of rows so far read : 20000. Progress update 2022-11-29 14:55:56.229700 : Number of rows so far read : 25000. Progress update 2022-11-29 14:57:09.659083 : Number of rows so far read : 30000. Progress update 2022-11-29 14:58:10.139422 : Number rows errors : 12322. Progress update 2022-11-29 14:58:10.139422 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:58:10.139422 : INFO.00.064 Verification of table 'events' column(s) 'ev_city'. Progress update 2022-11-29 14:58:10.968104 : Number rows errors : 6039. Progress update 2022-11-29 14:58:10.968104 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:58:10.968104 : INFO.00.064 Verification of table 'events' column(s) 'ev_city & ev_site_zipcode'. Progress update 2022-11-29 14:58:11.934347 : Number rows errors : 16491. Progress update 2022-11-29 14:58:11.934347 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:58:11.934846 : INFO.00.064 Verification of table 'events' column(s) 'ev_state'. Progress update 2022-11-29 14:58:12.175729 : Number rows errors : 292. Progress update 2022-11-29 14:58:12.176230 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:58:12.176230 : INFO.00.064 Verification of table 'events' column(s) 'ev_site_zipcode'. Progress update 2022-11-29 14:58:12.400731 : Number rows errors : 6029. Progress update 2022-11-29 14:58:12.401230 : -------------------------------------------------------------------------------- Progress update 2022-11-29 14:58:12.402230 : Number rows selected : 34221. Progress update 2022-11-29 14:58:12.402230 : Number rows updated : 41173. Progress update 2022-11-29 14:58:12.402730 : Number rows errors : 41173. Progress update 2022-11-29 14:58:12.402730 : -------------------------------------------------------------------------------. Progress update 2022-11-29 14:58:12.402730 : 345,321,580,900 ns - Total time launcher. Progress update 2022-11-29 14:58:12.402730 : INFO.00.006 End Launcher. Progress update 2022-11-29 14:58:12.402730 : ===============================================================================.","title":"1.17 v_n_d - Verify selected NTSB data"},{"location":"operation.html#2-first-installation","text":"The initial load in a fresh Windows environment requires the execution of the following tasks in the given order: s_d_c - Set up the PostgreSQL database container c_d_s - Create the PostgreSQL database schema d_n_a - Download the NTSB MS Access files Pre2008 and avall l_n_a - Load the NTSB MS Access database from Pre2008 and avall","title":"2. First installation"},{"location":"operation.html#3-regular-updates","text":"see","title":"3. Regular updates"},{"location":"release_history.html","text":"Release History Version 22.12.15 Release Date: 18.12.2022 1. New Features New documentation: How to add NTSB accident files 2. Modified Features Application faaus2008: extended filter options. 3. Applied Software (Windows-specific) Important : All software components should be installed in the 64 bit version! Software Version Remark Status 7-Zip 22.01 new Docker Compose 2.14.0 new Docker Desktop 4.15.0 IO-AVSTATS-DB 1.2.1 The LLVM Compiler Infrastructure 15.0.4 Make for Windows 3.81 Microsoft Access Database Engine 2016 Redistributable 8/11/2020 PostgreSQL 15.1 Python 3.10.9 RazorSQL 10.2.0 Visual Studio Community 2022 2022 3.1 Minimal Requirements Visual Studio Community 2022 4. Processed files 4.1 NTSB - National Transport Safety Board Data source up15DEC.zip Download link: here Version: 12/15/2022 3:00:31 AM Purpose: update of aviation accident data available for public use Version 22.12.08 Release Date: 12.12.2022 1. New Features Docker Compose usage Making available in AWS Streamlit application: faaus2008 - Fatal Aircraft Accidents in the US since 2008 Streamlit application: pdus2008 - Profiling Data for the US since 2008 2. Applied Software (Windows-specific) Important : All software components should be installed in the 64 bit version! Software Version Remark Status Docker Desktop 4.15.0 IO-AVSTATS-DB 1.1.1 The LLVM Compiler Infrastructure 15.0.4 Make for Windows 3.81 Microsoft Access Database Engine 2016 Redistributable 8/11/2020 PostgreSQL 15.1 Python 3.10.9 RazorSQL 10.2.0 Visual Studio Community 2022 2022 2.1 Minimal Requirements Visual Studio Community 2022 3. Processed files 3.1 geodatos - Information and maps of the world Link: here Version: n/a Purpose: latitude and longitude of the USA 3.2 NTSB - National Transport Safety Board Data source up01NOV.zip Download link: here Version: 11/01/2022 3:00:31 AM Purpose: update of aviation accident data available for public use Data source up08NOV.zip Download link: here Version: 11/08/2022 3:00:51 AM Purpose: update of aviation accident data available for public use Data source up15NOV.zip Download link: here Version: 11/15/2022 3:00:15 AM Purpose: update of aviation accident data available for public use Data source up22NOV.zip Download link: here Version: 11/22/2022 3:00:14 AM Purpose: update of aviation accident data available for public use Data source up01DEC.zip Download link: here Version: 12/01/2022 3:00:13 AM Purpose: update of aviation accident data available for public use Data source up08DEC.zip Download link: here Version: 12/08/2022 3:00:40 AM Purpose: update of aviation accident data available for public use Data source avall.zip Download link: here Version: 11/1/2022 6:49:29 AM Purpose: aviation accident data available for public use from January 1, 2008, to November 1, 2022 Data source Pre2008.zip Download link: here Version: 9/30/2020 12:51:56 PM Purpose: aviation accident data available for public use before January 1, 2008 3.3 opendatasoft Data source US State Boundaries Download link: here Version: June 27, 2017 3:41 PM Purpose: US States and their latitude and longitude 3.4 simplemaps - Interactive Maps and Data Data source United States Cities Database Download link: here Version: v1.75 - Basic Purpose: US cities and their latitude and longitude with emphasis on accurate latitudes and longitudes Data source US Zip Codes Database Download link: here Version: v1.81 - Basic Purpose: US postal codes and their latitude and longitude with emphasis on accurate latitudes and longitudes 3.5 United States Zip Codes.org Data source ZIP Code Database Download link: here Version: Updated for 2022 - Personal Free Purpose: US zip codes and their estimated latitude and longitude with emphasis on complete zip codes","title":"Release History"},{"location":"release_history.html#release-history","text":"","title":"Release History"},{"location":"release_history.html#version-221215","text":"Release Date: 18.12.2022","title":"Version 22.12.15"},{"location":"release_history.html#1-new-features","text":"New documentation: How to add NTSB accident files","title":"1. New Features"},{"location":"release_history.html#2-modified-features","text":"Application faaus2008: extended filter options.","title":"2. Modified Features"},{"location":"release_history.html#3-applied-software-windows-specific","text":"Important : All software components should be installed in the 64 bit version! Software Version Remark Status 7-Zip 22.01 new Docker Compose 2.14.0 new Docker Desktop 4.15.0 IO-AVSTATS-DB 1.2.1 The LLVM Compiler Infrastructure 15.0.4 Make for Windows 3.81 Microsoft Access Database Engine 2016 Redistributable 8/11/2020 PostgreSQL 15.1 Python 3.10.9 RazorSQL 10.2.0 Visual Studio Community 2022 2022","title":"3. Applied Software (Windows-specific)"},{"location":"release_history.html#4-processed-files","text":"","title":"4. Processed files"},{"location":"release_history.html#version-221208","text":"Release Date: 12.12.2022","title":"Version 22.12.08"},{"location":"release_history.html#1-new-features_1","text":"Docker Compose usage Making available in AWS Streamlit application: faaus2008 - Fatal Aircraft Accidents in the US since 2008 Streamlit application: pdus2008 - Profiling Data for the US since 2008","title":"1. New Features"},{"location":"release_history.html#2-applied-software-windows-specific","text":"Important : All software components should be installed in the 64 bit version! Software Version Remark Status Docker Desktop 4.15.0 IO-AVSTATS-DB 1.1.1 The LLVM Compiler Infrastructure 15.0.4 Make for Windows 3.81 Microsoft Access Database Engine 2016 Redistributable 8/11/2020 PostgreSQL 15.1 Python 3.10.9 RazorSQL 10.2.0 Visual Studio Community 2022 2022","title":"2. Applied Software (Windows-specific)"},{"location":"release_history.html#3-processed-files","text":"","title":"3. Processed files"},{"location":"release_notes.html","text":"Release Notes Version 22.12.22 Release Date: dd.mm.2022 1. New Features New documentation: How to ... 2. Modified Features Documentation: minor corrections 3. Applied Software Important : All software components should be installed in the 64 bit version! Software Version Remark Status 7-Zip 22.01 Docker Compose 2.14.0 Docker Desktop 4.15.0 IO-AVSTATS-DB 1.2.1 The LLVM Compiler Infrastructure 15.0.4 Windows-specific Make for Windows 3.81 Windows-specific Microsoft Access Database Engine 2016 Redistributable 8/11/2020 Windows-specific PostgreSQL 15.1 Python 3.10.9 RazorSQL 10.2.0 Visual Studio Community 2022 2022 Windows-specific 3.1 Minimal Requirements Visual Studio Community 2022 4. Processed files 4.1 NTSB - National Transport Safety Board Data source up22DEC.zip Download link: here Version: 12/15/2022 3:00:31 AM Purpose: update of aviation accident data available for public use","title":"Release Notes"},{"location":"release_notes.html#release-notes","text":"","title":"Release Notes"},{"location":"release_notes.html#version-221222","text":"Release Date: dd.mm.2022","title":"Version 22.12.22"},{"location":"release_notes.html#1-new-features","text":"New documentation: How to ...","title":"1. New Features"},{"location":"release_notes.html#2-modified-features","text":"Documentation: minor corrections","title":"2. Modified Features"},{"location":"release_notes.html#3-applied-software","text":"Important : All software components should be installed in the 64 bit version! Software Version Remark Status 7-Zip 22.01 Docker Compose 2.14.0 Docker Desktop 4.15.0 IO-AVSTATS-DB 1.2.1 The LLVM Compiler Infrastructure 15.0.4 Windows-specific Make for Windows 3.81 Windows-specific Microsoft Access Database Engine 2016 Redistributable 8/11/2020 Windows-specific PostgreSQL 15.1 Python 3.10.9 RazorSQL 10.2.0 Visual Studio Community 2022 2022 Windows-specific","title":"3. Applied Software"},{"location":"release_notes.html#4-processed-files","text":"","title":"4. Processed files"},{"location":"release_schedule.html","text":"Release Schedule To create a new release, the following steps must be performed in the specified order. It is not allowed to continue with the next step until the current step has been completed successfully, i.e. also without any errors. 1. Manual quality control . a) Remove all personal markers. It is good practice to mark experimental source code, such as source code comments or logging messages that are only used for testing, with a uniform personal marker, such as lho or wwe , so that this source code can be easily discovered and removed for release builds. b) Check all TODO markers for necessity. c) Check all links in the docs file directory. Links should generally contain the following suffix: {:target=\"_blank\"} . This ensures that a web page activated by the link is opened in a new tab. d) Unnecessary annotations @pytest.mark.issue in the file directory tests . This annotation can be used to run individual tests selectively. To remove the remains of it one can use the regular expression ^@pytest.mark.issue . 2. Define a new version number . The rules of semantic versioning must be applied. Given a version number MAJOR.MINOR.PATCH, increment the: MAJOR version when you make incompatible API changes MINOR version when you add functionality in a backwards compatible manner PATCH version when you make backwards compatible bug fixes See here for details. a) Update the version number in the IO-AVSTATS files: docs/release_history.md docs/release_notes.md src//io_glob.py 3. Create release candidate branch <rel_branch> . 4. Switch to the release candidate branch <rel_branch> . git checkout <rel_branch> 5. Finalise the new release . a. Execute the following command in the IO-AVSTATS clone. make final b. Create the final pull request. c. Create the new release in GitHub: Releases --> Create a new release Choose a tag ---> 9.9.9 ---> + Create a new tag Release title ---> Release 9.9.9: <headline> . Describe the release ---> see: https://github.com/io-aero/io-avstats/blob/main/docs/release_notes.md x This is a pre-release x Create a discussion for this release Publish release 6. Preepare the next release . a. Choose a new version number. b. Prepare the following files in the io-rsaster repository for the new version: docs/release_history.md docs/release_notes.md src//io_glob.py","title":"Release Schedule"},{"location":"release_schedule.html#release-schedule","text":"To create a new release, the following steps must be performed in the specified order. It is not allowed to continue with the next step until the current step has been completed successfully, i.e. also without any errors.","title":"Release Schedule"},{"location":"release_schedule.html#1-manual-quality-control","text":"","title":"1. Manual quality control."},{"location":"release_schedule.html#2-define-a-new-version-number","text":"The rules of semantic versioning must be applied. Given a version number MAJOR.MINOR.PATCH, increment the: MAJOR version when you make incompatible API changes MINOR version when you add functionality in a backwards compatible manner PATCH version when you make backwards compatible bug fixes See here for details.","title":"2. Define a new version number."},{"location":"release_schedule.html#3-create-release-candidate-branch-rel_branch","text":"","title":"3. Create release candidate branch &lt;rel_branch&gt;."},{"location":"release_schedule.html#4-switch-to-the-release-candidate-branch-rel_branch","text":"git checkout <rel_branch>","title":"4. Switch to the release candidate branch &lt;rel_branch&gt;."},{"location":"release_schedule.html#5-finalise-the-new-release","text":"","title":"5. Finalise the new release."},{"location":"release_schedule.html#6-preepare-the-next-release","text":"","title":"6. Preepare the next release."},{"location":"setup_development_environment.html","text":"1. Create the repositories git clone https://github.com/io-aero/io-avstats git clone https://github.com/io-aero/io-avstats-db git clone https://github.com/io-aero/io-avstats-db-content 2. Setup PyCharm - Plugins .ignore Json Helper Makefile Language python-typing-adder Database Tools and SQL Docker IDE Settings Sync Settings Repository Ini Markdown Properties Shell Script YAML Windows 10 light Theme GitHub Color Scheme Git GitHub Copyright EditorConfig File Watchers Grazie HTTP Client Shared Project Indices Terminal Toml 3. Install Software 3.1 Docker Desktop https://www.docker.com/products/docker-desktop/ 3.2 Make for Windows https://gnuwin32.sourceforge.net/packages/make.htm 3.3 Microsoft Access Database Engine 2016 Redistributable Important: Microsoft Access, Microsoft Access Database Engine and Python should all be installed either in the 32 bit version or in the 64 bit version! The installation file can be found in the io-avstats repository under resources/Microsoft Access Database Engine 2016 Redistributable 3.4 PostgreSQL Important: Use version 15.0 https://www.enterprisedb.com/downloads/postgres-postgresql-downloads Install only \"Command Line Tools\" and add the bin directory of the installation location to the path variable of Windows. 3.5 Python Important: Use version 3.10.8 https://www.python.org/downloads/ 3.6 RazorSQL The installation file can be found in the io-avstats repository under resources/RazorSQL 3.7 DBeaver (optional) - Universal Database Tool https://dbeaver.io 3.8 AnyDesk (optional) - Remote Desktop Application https://anydesk.com/en 4. Set up IO-AVSTATS 4.1 RazorSQL Create the connection profile IO-AVSTATS in RazorSQL RazorSQL: Connections --> Add Connection Profile --> Microsoft Access --> Continuue --> ODBC (Direct) Connection Profile Name: **IO-AVSTATS** Database file: **...\\io-avstats\\data\\NTSB\\IO-AVSTATS.mdb** 4.2 Windows Terminal Install the Python packages make pipenv-dev Set up the database container run_io_avstats_db s_d_c Create the database schema run_io_avstats_db c_d_s Download Microsoft Access database file run_io_avstats_db d_m_a up22oct Load Microsoft Access database data run_io_avstats_db l_m_a up22oct 4.3 Docker Desktop Check that the PostgreSQL development container is running. 4.4 DBeaver Import the io-avstats project settings: DBeaver: File --> import --> DBeaver --> Project File: **...\\io-avstats\\data\\DBeaver\\io-avstats-....dbp** Connect to the PostgreSQL development database. 5. Set up IO-AVSTATS 5.1 Google Drive Download the PostgreSQL database files. Shared with me 22.11.05_postgre_avall.zip Dowbload to: **...\\io-avstats\\data** Unzip the downloaded file. 5.2 Windows Terminal Install the Python packages make pipenv-dev Set up the database container run_io_avstats_db s_d_c 5.3 Docker Desktop Check that the PostgreSQL production container is running. 5.4 DBeaver Connect to the PostgreSQL production database. 6. Set up IO-AVSTATS 6.1 Create the credentials file .settings.io_avstats.toml [default] postgres_password=\"...\" postgres_password_admin = \"...\" 6.2 Windows Terminal Install the Python packages make pipenv-dev Run the demo run_io_avstats demo","title":"1. Create the repositories"},{"location":"setup_development_environment.html#1-create-the-repositories","text":"git clone https://github.com/io-aero/io-avstats git clone https://github.com/io-aero/io-avstats-db git clone https://github.com/io-aero/io-avstats-db-content","title":"1. Create the repositories"},{"location":"setup_development_environment.html#2-setup-pycharm-plugins","text":".ignore Json Helper Makefile Language python-typing-adder Database Tools and SQL Docker IDE Settings Sync Settings Repository Ini Markdown Properties Shell Script YAML Windows 10 light Theme GitHub Color Scheme Git GitHub Copyright EditorConfig File Watchers Grazie HTTP Client Shared Project Indices Terminal Toml","title":"2. Setup PyCharm - Plugins"},{"location":"setup_development_environment.html#3-install-software","text":"","title":"3. Install Software"},{"location":"setup_development_environment.html#31-docker-desktop","text":"https://www.docker.com/products/docker-desktop/","title":"3.1 Docker Desktop"},{"location":"setup_development_environment.html#32-make-for-windows","text":"https://gnuwin32.sourceforge.net/packages/make.htm","title":"3.2 Make for Windows"},{"location":"setup_development_environment.html#33-microsoft-access-database-engine-2016-redistributable","text":"Important: Microsoft Access, Microsoft Access Database Engine and Python should all be installed either in the 32 bit version or in the 64 bit version! The installation file can be found in the io-avstats repository under resources/Microsoft Access Database Engine 2016 Redistributable","title":"3.3 Microsoft Access Database Engine 2016 Redistributable"},{"location":"setup_development_environment.html#34-postgresql","text":"Important: Use version 15.0 https://www.enterprisedb.com/downloads/postgres-postgresql-downloads Install only \"Command Line Tools\" and add the bin directory of the installation location to the path variable of Windows.","title":"3.4 PostgreSQL"},{"location":"setup_development_environment.html#35-python","text":"Important: Use version 3.10.8 https://www.python.org/downloads/","title":"3.5 Python"},{"location":"setup_development_environment.html#36-razorsql","text":"The installation file can be found in the io-avstats repository under resources/RazorSQL","title":"3.6 RazorSQL"},{"location":"setup_development_environment.html#37-dbeaver-optional-universal-database-tool","text":"https://dbeaver.io","title":"3.7 DBeaver (optional) - Universal Database Tool"},{"location":"setup_development_environment.html#38-anydesk-optional-remote-desktop-application","text":"https://anydesk.com/en","title":"3.8 AnyDesk (optional) - Remote Desktop Application"},{"location":"setup_development_environment.html#4-set-up-io-avstats","text":"","title":"4. Set up IO-AVSTATS"},{"location":"setup_development_environment.html#41-razorsql","text":"Create the connection profile IO-AVSTATS in RazorSQL RazorSQL: Connections --> Add Connection Profile --> Microsoft Access --> Continuue --> ODBC (Direct) Connection Profile Name: **IO-AVSTATS** Database file: **...\\io-avstats\\data\\NTSB\\IO-AVSTATS.mdb**","title":"4.1 RazorSQL"},{"location":"setup_development_environment.html#42-windows-terminal","text":"Install the Python packages make pipenv-dev Set up the database container run_io_avstats_db s_d_c Create the database schema run_io_avstats_db c_d_s Download Microsoft Access database file run_io_avstats_db d_m_a up22oct Load Microsoft Access database data run_io_avstats_db l_m_a up22oct","title":"4.2 Windows Terminal"},{"location":"setup_development_environment.html#43-docker-desktop","text":"Check that the PostgreSQL development container is running.","title":"4.3 Docker Desktop"},{"location":"setup_development_environment.html#44-dbeaver","text":"Import the io-avstats project settings: DBeaver: File --> import --> DBeaver --> Project File: **...\\io-avstats\\data\\DBeaver\\io-avstats-....dbp** Connect to the PostgreSQL development database.","title":"4.4 DBeaver"},{"location":"setup_development_environment.html#5-set-up-io-avstats","text":"","title":"5. Set up IO-AVSTATS"},{"location":"setup_development_environment.html#51-google-drive","text":"Download the PostgreSQL database files. Shared with me 22.11.05_postgre_avall.zip Dowbload to: **...\\io-avstats\\data** Unzip the downloaded file.","title":"5.1 Google Drive"},{"location":"setup_development_environment.html#52-windows-terminal","text":"Install the Python packages make pipenv-dev Set up the database container run_io_avstats_db s_d_c","title":"5.2 Windows Terminal"},{"location":"setup_development_environment.html#53-docker-desktop","text":"Check that the PostgreSQL production container is running.","title":"5.3 Docker Desktop"},{"location":"setup_development_environment.html#54-dbeaver","text":"Connect to the PostgreSQL production database.","title":"5.4 DBeaver"},{"location":"setup_development_environment.html#6-set-up-io-avstats","text":"","title":"6. Set up IO-AVSTATS"},{"location":"setup_development_environment.html#61-create-the-credentials-file-settingsio_avstatstoml","text":"[default] postgres_password=\"...\" postgres_password_admin = \"...\"","title":"6.1 Create the credentials file .settings.io_avstats.toml"},{"location":"setup_development_environment.html#62-windows-terminal","text":"Install the Python packages make pipenv-dev Run the demo run_io_avstats demo","title":"6.2 Windows Terminal"},{"location":"setup_installation.html","text":"Installation Clone or copy the IO-AVSTATS repository from here . Switch to the file directory io-avstats : cd io-avstats Install the necessary Python packages by running the command make pipenv-dev . Optionally, adjustments can be made in the following configuration files: logging_cfg.yaml : for the logging functionality settings.io_avstats.toml : for the IO-AVSTATS application Create the configuration file .settings.io_avstats.toml with the passwords for the PostgreSQL database users. Use the IO-AVSTATS application by running the script run_io_avstats.bat .","title":"Installation"},{"location":"setup_installation.html#installation","text":"Clone or copy the IO-AVSTATS repository from here . Switch to the file directory io-avstats : cd io-avstats Install the necessary Python packages by running the command make pipenv-dev . Optionally, adjustments can be made in the following configuration files: logging_cfg.yaml : for the logging functionality settings.io_avstats.toml : for the IO-AVSTATS application Create the configuration file .settings.io_avstats.toml with the passwords for the PostgreSQL database users. Use the IO-AVSTATS application by running the script run_io_avstats.bat .","title":"Installation"},{"location":"setup_requirements.html","text":"Requirements The following are the minimum requirements to run the application: Operating System Windows 10 or Windows 11 - except for the tasks that require ODBC, the operating system Ubuntu LTS 20.04 can also be used. Docker Desktop The LLVM Compiler Infrastructure Make for Windows MS Access Database Engine 2016 Redistributable PostgreSQL - only \"Command Line Tools\" Python RazorSQL Visual Studio Community 2022","title":"Requirements"},{"location":"setup_requirements.html#requirements","text":"The following are the minimum requirements to run the application: Operating System Windows 10 or Windows 11 - except for the tasks that require ODBC, the operating system Ubuntu LTS 20.04 can also be used. Docker Desktop The LLVM Compiler Infrastructure Make for Windows MS Access Database Engine 2016 Redistributable PostgreSQL - only \"Command Line Tools\" Python RazorSQL Visual Studio Community 2022","title":"Requirements"},{"location":"img/index.html","text":"File Directory docs/img This directory contains all the image files used in the documentation.","title":"File Directory **`docs/img`**"},{"location":"img/index.html#file-directory-docsimg","text":"This directory contains all the image files used in the documentation.","title":"File Directory docs/img"}]}